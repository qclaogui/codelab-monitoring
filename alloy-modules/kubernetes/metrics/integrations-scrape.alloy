/*
Module Components: integrations_scrape
Description: Integrations Module Components Scrape

Note: Every argument except for "forward_to" is optional, and does have a defined default value.  However, the values for these
      arguments are not defined using the default = " ... " argument syntax, but rather using the coalesce(argument.value, " ... ").
      This is because if the argument passed in from another consuming module is set to null, the default = " ... " syntax will
      does not override the value passed in, where coalesce() will return the first non-null value.
*/

declare "integrations_scrape" {

	/*****************************************************************
	* ARGUMENTS
	*****************************************************************/
	argument "forward_to" {
		comment = "Must be a list(MetricssReceiver) where collected metrics should be forwarded to"
	}

	argument "name" {
		comment  = "Name of the integrations config"
		optional = true
	}

	argument "namespace" {
		comment  = "Namespace of the integrations config"
		optional = true
	}

	/*****************************************************************
	* Import Integrations Components
	*****************************************************************/
	remote.kubernetes.configmap "integrations" {
		namespace = coalesce(argument.namespace.value, "monitoring-system")
		name      = coalesce(argument.name.value, "alloy-integrations")
	}

	/*****************************************************************
	* Memcached Integrations
	*****************************************************************/
	import.string "memcached" {
		content = remote.kubernetes.configmap.integrations.data["memcached.alloy"]
	}

	memcached.component_memcached "instance" {
		forward_to = argument.forward_to.value

		namespace = argument.namespace.value
		name      = remote.kubernetes.configmap.integrations.data["MEMCACHED_K8S_SECRET_NAME"]
	}

	// /*****************************************************************
	// * Redis Integrations
	// *****************************************************************/
	// import.string "redis" {
	// 	content = remote.kubernetes.configmap.integrations.data["redis.alloy"]
	// }

	// redis.component_redis_exporter "instance" {
	// 	forward_to = argument.forward_to.value

	// 	namespace = argument.namespace.value
	// 	name      = remote.kubernetes.configmap.integrations.data["REDIS_K8S_SECRET_NAME"]
	// }

	// /*****************************************************************
	// * Mysql Integrations
	// *****************************************************************/
	// import.string "mysql" {
	// 	content = remote.kubernetes.configmap.integrations.data["mysql.alloy"]
	// }

	// mysql.component_mysql "instance" {
	// 	forward_to = argument.forward_to.value

	// 	namespace = argument.namespace.value
	// 	name      = remote.kubernetes.configmap.integrations.data["MYSQL_K8S_SECRET_NAME"]
	// }
}
