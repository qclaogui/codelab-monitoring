/*
Module Components: component_node_exporter
*/

declare "component_node_exporter" {

	/*****************************************************************
	* ARGUMENTS
	*****************************************************************/
	argument "forward_to" {
		comment = "Must be a list(MetricssReceiver) where collected metrics should be forwarded to"
	}

	argument "job_label" {
		optional = true
		default  = "integrations/docker/node-exporter"
	}

	argument "instance_name" {
		optional = true
	}

	argument "keep_metrics" {
		optional = true
		default  = "(up|node_uname_info|node_exporter_build_info|node_time_seconds|node_boot_time_seconds|node_load.*|node_cpu.*|node_memory.*|node_disk.*|node_filesystem.*|process_cpu_seconds_total|process_resident_memory_bytes)"
	}

	argument "scrape_interval" {
		comment  = "How often to scrape metrics from the targets (default: 60s)"
		optional = true
		default  = "60s"
	}

	argument "scrape_timeout" {
		comment  = "How long before a scrape times out (default: 10s)"
		optional = true
		default  = "10s"
	}

	/***************************************************************
	* Integrations cAdvisor
	****************************************************************/
	// https://grafana.com/docs/alloy/latest/reference/components/prometheus.exporter.unix/
	prometheus.exporter.unix "integrations_node_exporter" {
		procfs_path    = "/rootfs/proc"
		sysfs_path     = "/rootfs/sys"
		rootfs_path    = "/rootfs"
		udev_data_path = "/rootfs/run/udev/data"
	}

	/***************************************************************
	* Discovery Relabelings (pre-scrape)
	****************************************************************/
	discovery.relabel "integrations_node_exporter" {
		targets = prometheus.exporter.unix.integrations_node_exporter.targets

		rule {
			target_label = "job"
			replacement  = argument.job_label.value
		}

		rule {
			target_label = "instance"
			replacement  = coalesce(argument.instance_name.value, constants.hostname)
		}
	}

	/***************************************************************
	* Prometheus Scrape Integrations Targets
	****************************************************************/
	prometheus.scrape "integrations_node_exporter" {
		targets = array.concat(
			discovery.relabel.integrations_node_exporter.output,
		)

		scrape_classic_histograms = true

		scrape_interval = argument.scrape_interval.value
		scrape_timeout  = argument.scrape_timeout.value

		clustering {
			enabled = true
		}

		forward_to = [prometheus.relabel.integrations_node_exporter.receiver]
	}

	/***************************************************************
	* Prometheus Metric Relabelings (post-scrape)
	****************************************************************/
	prometheus.relabel "integrations_node_exporter" {
		forward_to = argument.forward_to.value

		// keep only metrics that match the keep_metrics regex
		rule {
			source_labels = ["__name__"]
			regex         = argument.keep_metrics.value
			action        = "keep"
		}

		// Drop metrics for certain file systems
		rule {
			source_labels = ["__name__", "fstype"]
			separator     = "@"
			regex         = "node_filesystem.*@(tempfs)"
			action        = "drop"
		}
	}
}
