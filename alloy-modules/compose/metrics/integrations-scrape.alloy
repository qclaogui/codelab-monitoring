/*
Module Components: integrations_scrape
Description: Integrations Module Components Scrape

Note: Every argument except for "forward_to" is optional, and does have a defined default value.  However, the values for these
      arguments are not defined using the default = " ... " argument syntax, but rather using the coalesce(argument.value, " ... ").
      This is because if the argument passed in from another consuming module is set to null, the default = " ... " syntax will
      does not override the value passed in, where coalesce() will return the first non-null value.
*/

declare "integrations_scrape" {

	/*****************************************************************
	* ARGUMENTS
	*****************************************************************/
	argument "forward_to" {
		comment = "Must be a list(MetricssReceiver) where collected metrics should be forwarded to"
	}

	argument "scrape_interval" {
		comment  = "How often to scrape metrics from the targets (default: 60s)"
		optional = true
	}

	argument "scrape_timeout" {
		comment  = "How long before a scrape times out (default: 10s)"
		optional = true
	}

	/*****************************************************************
	* Import Integrations Components
	*****************************************************************/
	import.file "integrate" {
		filename = coalesce(sys.env("ALLOY_MODULES_FOLDER"), "/etc/alloy/modules") + "/compose/integrations"
	}

	/*****************************************************************
	* cAdvisor Integrations
	*****************************************************************/
	integrate.component_cadvisor "default" {
		forward_to = argument.forward_to.value

		scrape_interval = coalesce(argument.scrape_interval.value, "60s")
		scrape_timeout  = coalesce(argument.scrape_timeout.value, "10s")
	}

	/*****************************************************************
	* Node Exporter Integrations
	*****************************************************************/
	integrate.component_node_exporter "default" {
		forward_to = argument.forward_to.value

		scrape_interval = coalesce(argument.scrape_interval.value, "60s")
		scrape_timeout  = coalesce(argument.scrape_timeout.value, "10s")
	}

	/*****************************************************************
	* Memcached Integrations
	*****************************************************************/
	integrate.component_memcached "primary" {
		forward_to = argument.forward_to.value

		memcached_address = "memcached:11211"
		memcached_timeout = "5s"

		instance_name   = "primary"
		scrape_interval = coalesce(argument.scrape_interval.value, "60s")
		scrape_timeout  = coalesce(argument.scrape_timeout.value, "10s")
	}
}
