apiVersion: v1
data:
  apiserver.json: |-
    {
          "editable": false,
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only.",
                "gridPos": {
                   "h": 2,
                   "w": 24,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "options": {
                   "content": "The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only."
                },
                "pluginVersion": "v10.4.0",
                "title": "Notice",
                "type": "text"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many percent of requests (both read and write) in 30 days have been answered successfully and fast enough?",
                "fieldConfig": {
                   "defaults": {
                      "decimals": 3,
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 2
                },
                "id": 2,
                "interval": "1m",
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "apiserver_request:availability30d{verb=\"all\", cluster=\"$cluster\"}"
                   }
                ],
                "title": "Availability (30d) > 99.000%",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How much error budget is left looking at our 0.990% availability guarantees?",
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 100
                      },
                      "decimals": 3,
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 16,
                   "x": 8,
                   "y": 2
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "100 * (apiserver_request:availability30d{verb=\"all\", cluster=\"$cluster\"} - 0.990000)",
                      "legendFormat": "errorbudget"
                   }
                ],
                "title": "ErrorBudget (30d) > 99.000%",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many percent of read requests (LIST,GET) in 30 days have been answered successfully and fast enough?",
                "fieldConfig": {
                   "defaults": {
                      "decimals": 3,
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 0,
                   "y": 9
                },
                "id": 4,
                "interval": "1m",
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "apiserver_request:availability30d{verb=\"read\", cluster=\"$cluster\"}"
                   }
                ],
                "title": "Read Availability (30d)",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many read requests (LIST,GET) per second do the apiservers get by code?",
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 100,
                         "stacking": {
                            "mode": "normal"
                         }
                      },
                      "unit": "reqps"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/2../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#56A64B"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/3../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#F2CC0C"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/4../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#3274D9"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/5../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#E02F44"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 6,
                   "y": 9
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\"read\", cluster=\"$cluster\"})",
                      "legendFormat": "{{ code }}"
                   }
                ],
                "title": "Read SLI - Requests",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many percent of read requests (LIST,GET) per second are returned with errors (5xx)?",
                "fieldConfig": {
                   "defaults": {
                      "min": 0,
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 12,
                   "y": 9
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"read\",code=~\"5..\", cluster=\"$cluster\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"read\", cluster=\"$cluster\"})",
                      "legendFormat": "{{ resource }}"
                   }
                ],
                "title": "Read SLI - Errors",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many seconds is the 99th percentile for reading (LIST|GET) a given resource?",
                "fieldConfig": {
                   "defaults": {
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 18,
                   "y": 9
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile{verb=\"read\", cluster=\"$cluster\"}",
                      "legendFormat": "{{ resource }}"
                   }
                ],
                "title": "Read SLI - Duration",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many percent of write requests (POST|PUT|PATCH|DELETE) in 30 days have been answered successfully and fast enough?",
                "fieldConfig": {
                   "defaults": {
                      "decimals": 3,
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 0,
                   "y": 16
                },
                "id": 8,
                "interval": "1m",
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "apiserver_request:availability30d{verb=\"write\", cluster=\"$cluster\"}"
                   }
                ],
                "title": "Write Availability (30d)",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many write requests (POST|PUT|PATCH|DELETE) per second do the apiservers get by code?",
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 100,
                         "stacking": {
                            "mode": "normal"
                         }
                      },
                      "unit": "reqps"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/2../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#56A64B"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/3../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#F2CC0C"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/4../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#3274D9"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/5../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#E02F44"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 6,
                   "y": 16
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\"write\", cluster=\"$cluster\"})",
                      "legendFormat": "{{ code }}"
                   }
                ],
                "title": "Write SLI - Requests",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many percent of write requests (POST|PUT|PATCH|DELETE) per second are returned with errors (5xx)?",
                "fieldConfig": {
                   "defaults": {
                      "min": 0,
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 12,
                   "y": 16
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"write\",code=~\"5..\", cluster=\"$cluster\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"write\", cluster=\"$cluster\"})",
                      "legendFormat": "{{ resource }}"
                   }
                ],
                "title": "Write SLI - Errors",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many seconds is the 99th percentile for writing (POST|PUT|PATCH|DELETE) a given resource?",
                "fieldConfig": {
                   "defaults": {
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 18,
                   "y": 16
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile{verb=\"write\", cluster=\"$cluster\"}",
                      "legendFormat": "{{ resource }}"
                   }
                ],
                "title": "Write SLI - Duration",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "min": 0,
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 23
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": false
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(workqueue_adds_total{job=\"integrations/kubernetes/apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])) by (instance, name)",
                      "legendFormat": "{{instance}} {{name}}"
                   }
                ],
                "title": "Work Queue Add Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "min": 0,
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 23
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": false
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(workqueue_depth{job=\"integrations/kubernetes/apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])) by (instance, name)",
                      "legendFormat": "{{instance}} {{name}}"
                   }
                ],
                "title": "Work Queue Depth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "min": 0,
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 30
                },
                "id": 14,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{job=\"integrations/kubernetes/apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])) by (instance, name, le))",
                      "legendFormat": "{{instance}} {{name}}"
                   }
                ],
                "title": "Work Queue Latency",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "bytes"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 37
                },
                "id": 15,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "process_resident_memory_bytes{job=\"integrations/kubernetes/apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Memory",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "min": 0,
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 8,
                   "y": 37
                },
                "id": 16,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "rate(process_cpu_seconds_total{job=\"integrations/kubernetes/apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "CPU usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 16,
                   "y": 37
                },
                "id": 17,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "go_goroutines{job=\"integrations/kubernetes/apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Goroutines",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 36,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/apiserver\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "name": "instance",
                   "query": "label_values(up{job=\"integrations/kubernetes/apiserver\", cluster=\"$cluster\"}, instance)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / API server",
          "uid": "09ec8aa1e996d6ffcd6817bbaff4db1b"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: apiserver.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  cluster-total.json: |-
    {
          "editable": false,
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Current Rate of Bytes Received",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Current Rate of Bytes Transmitted",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Bytes/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "binBps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Packets/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "pps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Namespace"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down",
                                     "url": "/d/8b7a8b326d7a6f1f04244066368c67af/kubernetes-networking-namespace-pods?${datasource:queryparam}&var-cluster=${cluster}&var-namespace=${__data.fields.Namespace}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 9,
                   "w": 24,
                   "x": 0,
                   "y": 9
                },
                "id": 3,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "avg by (namespace) (rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "avg by (namespace) (rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Status",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "namespace",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "Time 7": true,
                            "Time 8": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Time 7": 6,
                            "Time 8": 7,
                            "Value #A": 9,
                            "Value #B": 10,
                            "Value #C": 11,
                            "Value #D": 12,
                            "Value #E": 13,
                            "Value #F": 14,
                            "Value #G": 15,
                            "Value #H": 16,
                            "namespace": 8
                         },
                         "renameByName": {
                            "Value #A": "Rx Bytes",
                            "Value #B": "Tx Bytes",
                            "Value #C": "Rx Bytes (Avg)",
                            "Value #D": "Tx Bytes (Avg)",
                            "Value #E": "Rx Packets",
                            "Value #F": "Tx Packets",
                            "Value #G": "Rx Packets Dropped",
                            "Value #H": "Tx Packets Dropped",
                            "namespace": "Namespace"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 18
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "avg by (namespace) (rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Rate of Bytes Received",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 18
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "avg by (namespace) (rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Rate of Bytes Transmitted",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 27
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 27
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 36
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 36
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 45
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 45
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 54
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (instance) (rate(node_netstat_Tcp_RetransSegs{cluster=\"$cluster\"}[$__rate_interval]) / rate(node_netstat_Tcp_OutSegs{cluster=\"$cluster\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of TCP Retransmits out of all sent segments",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 54
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (instance) (rate(node_netstat_TcpExt_TCPSynRetrans{cluster=\"$cluster\"}[$__rate_interval]) / rate(node_netstat_Tcp_RetransSegs{cluster=\"$cluster\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of TCP SYN Retransmits out of all retransmits",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 36,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/cadvisor\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Networking / Cluster",
          "uid": "ff635a025bcfea7bc3dd4f508990a3e9"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: cluster-total.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  controller-manager.json: |-
    {
          "editable": false,
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(up{cluster=\"$cluster\", job=\"kube-controller-manager\"})",
                      "instant": true
                   }
                ],
                "title": "Up",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 20,
                   "x": 4,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(workqueue_adds_total{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, name)",
                      "legendFormat": "{{cluster}} {{instance}} {{name}}"
                   }
                ],
                "title": "Work Queue Add Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 7
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(workqueue_depth{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, name)",
                      "legendFormat": "{{cluster}} {{instance}} {{name}}"
                   }
                ],
                "title": "Work Queue Depth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 14
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, name, le))",
                      "legendFormat": "{{cluster}} {{instance}} {{name}}"
                   }
                ],
                "title": "Work Queue Latency",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 21
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                      "legendFormat": "2xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                      "legendFormat": "3xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                      "legendFormat": "4xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                      "legendFormat": "5xx"
                   }
                ],
                "title": "Kube API Request Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 16,
                   "x": 8,
                   "y": 21
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\", verb=\"POST\"}[$__rate_interval])) by (verb, url, le))",
                      "legendFormat": "{{verb}} {{url}}"
                   }
                ],
                "title": "Post Request Latency 99th Quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 28
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\", verb=\"GET\"}[$__rate_interval])) by (verb, url, le))",
                      "legendFormat": "{{verb}} {{url}}"
                   }
                ],
                "title": "Get Request Latency 99th Quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 35
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "process_resident_memory_bytes{cluster=\"$cluster\", job=\"kube-controller-manager\",instance=~\"$instance\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Memory",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 8,
                   "y": 35
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\", job=\"kube-controller-manager\",instance=~\"$instance\"}[$__rate_interval])",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "CPU usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 16,
                   "y": 35
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "go_goroutines{cluster=\"$cluster\", job=\"kube-controller-manager\",instance=~\"$instance\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Goroutines",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 36,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"kube-controller-manager\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "instance",
                   "name": "instance",
                   "query": "label_values(up{cluster=\"$cluster\", job=\"kube-controller-manager\"}, instance)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Controller Manager",
          "uid": "72e0e05bef5099e5f049b05fdc429ed4"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: controller-manager.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  go-runtime.json: |-
    {
          "annotations": {
             "list": [
                {
                   "builtIn": 1,
                   "datasource": "-- Grafana --",
                   "enable": true,
                   "hide": true,
                   "iconColor": "rgba(0, 211, 255, 1)",
                   "name": "Annotations & Alerts",
                   "type": "dashboard"
                }
             ]
          },
          "description": "Go runtime metrics",
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "id": 14,
          "iteration": 1623758038990,
          "links": [ ],
          "panels": [
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average total bytes of memory reserved across all process instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 0,
                   "y": 0
                },
                "hiddenSeries": false,
                "id": 16,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by(job)(go_memstats_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}} (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Total Reserved Memory",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "decbytes",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average stack memory usage across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 12,
                   "y": 0
                },
                "hiddenSeries": false,
                "id": 24,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job) (go_memstats_stack_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: stack inuse (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Stack Memory Use",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "decbytes",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average memory reservations by the runtime, not for stack or heap, across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 0,
                   "y": 8
                },
                "hiddenSeries": false,
                "id": 26,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job)(go_memstats_mspan_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{instance}}: mspan (avg)",
                      "refId": "B"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_mcache_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{instance}}: mcache (avg)",
                      "refId": "D"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_buck_hash_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{instance}}: buck hash (avg)",
                      "refId": "E"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_gc_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: gc (avg)",
                      "refId": "F"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Other Memory Reservations",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "decbytes",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average memory reserved, and actually in use, by the heap, across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 12,
                   "y": 8
                },
                "hiddenSeries": false,
                "id": 12,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job)(go_memstats_heap_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: heap reserved (avg)",
                      "refId": "B"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_heap_inuse_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: heap in use (avg)",
                      "refId": "A"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_heap_alloc_bytes{job=~\"tns_app\",instance=~\".*\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: heap alloc (avg)",
                      "refId": "C"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_heap_idle_bytes{job=~\"tns_app\",instance=~\".*\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: heap idle (avg)",
                      "refId": "D"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_heap_released_bytes{job=~\"tns_app\",instance=~\".*\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: heap released (avg)",
                      "refId": "E"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Heap Memory",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "decbytes",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average allocation rate in bytes per second, across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 0,
                   "y": 16
                },
                "hiddenSeries": false,
                "id": 14,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 1,
                "points": true,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job)(rate(go_memstats_alloc_bytes_total{job=\"$job\", instance=~\"$instance\"}[$__rate_interval]))",
                      "interval": "",
                      "legendFormat": "{{job}}: bytes malloced/s (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Allocation Rate, Bytes",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average rate of heap object allocation, across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 12,
                   "y": 16
                },
                "hiddenSeries": false,
                "id": 20,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "rate(go_memstats_mallocs_total{job=\"$job\", instance=~\"$instance\"}[$__rate_interval])",
                      "interval": "",
                      "legendFormat": "{{job}}: obj mallocs/s (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Heap Object Allocation Rate",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average number of live memory objects across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 0,
                   "y": 24
                },
                "hiddenSeries": false,
                "id": 22,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by(job)(go_memstats_mallocs_total{job=\"$job\", instance=~\"$instance\"} - go_memstats_frees_total{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: object count (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Number of Live Objects",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average number of goroutines across instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 12,
                   "y": 24
                },
                "hiddenSeries": false,
                "id": 8,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job)(go_goroutines{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: goroutine count (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Goroutines",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "decimals": 0,
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 0,
                   "y": 32
                },
                "hiddenSeries": false,
                "id": 4,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job)(go_gc_duration_seconds{quantile=\"0\", job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: min gc time (avg)",
                      "refId": "A"
                   },
                   {
                      "expr": "avg by (job)(go_gc_duration_seconds{quantile=\"1\", job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: max gc time (avg)",
                      "refId": "B"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "GC min & max duration",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "ms",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "The number used bytes at which the runtime plans to perform the next GC, averaged across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 12,
                   "y": 32
                },
                "hiddenSeries": false,
                "id": 27,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job)(go_memstats_next_gc_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}} next gc bytes (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Next GC, Bytes",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "decbytes",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             }
          ],
          "refresh": "30s",
          "schemaVersion": 30,
          "style": "dark",
          "tags": [
             "go-runtime"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": false,
                      "text": "MONITORING",
                      "value": "MONITORING"
                   },
                   "description": null,
                   "error": null,
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "queryValue": "",
                   "refresh": 1,
                   "regex": "",
                   "skipUrlSync": false,
                   "type": "datasource"
                },
                {
                   "allValue": null,
                   "current": {
                      "selected": false,
                      "text": "pilot",
                      "value": "pilot"
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(go_info, job)",
                   "description": null,
                   "error": null,
                   "hide": 0,
                   "includeAll": false,
                   "label": "job",
                   "multi": false,
                   "name": "job",
                   "options": [ ],
                   "query": {
                      "query": "label_values(go_info, job)",
                      "refId": "MONITORING-job-Variable-Query"
                   },
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 0,
                   "tagValuesQuery": "",
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": "",
                   "current": {
                      "selected": false,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(go_info{job=\"$job\"}, instance)",
                   "description": null,
                   "error": null,
                   "hide": 0,
                   "includeAll": true,
                   "label": "instance",
                   "multi": true,
                   "name": "instance",
                   "options": [ ],
                   "query": {
                      "query": "label_values(go_info{job=\"$job\"}, instance)",
                      "refId": "MONITORING-instance-Variable-Query"
                   },
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 0,
                   "tagValuesQuery": "",
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-30m",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "browser",
          "title": "Go runtime metrics",
          "uid": "T4sSTLBGzgp",
          "version": 1
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Go - Runtime
  labels:
    grafana_dashboard: "1"
  name: go-runtime.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  k8s-resources-cluster.json: |-
    {
          "editable": false,
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 4,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "cluster:node_cpu:ratio_rate5m{cluster=\"$cluster\"}",
                      "instant": true
                   }
                ],
                "title": "CPU Utilisation",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 4,
                   "x": 4,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"integrations/kubernetes/kube-state-metrics\",resource=\"cpu\",cluster=\"$cluster\"})",
                      "instant": true
                   }
                ],
                "title": "CPU Requests Commitment",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 4,
                   "x": 8,
                   "y": 0
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"integrations/kubernetes/kube-state-metrics\",resource=\"cpu\",cluster=\"$cluster\"})",
                      "instant": true
                   }
                ],
                "title": "CPU Limits Commitment",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 4,
                   "x": 12,
                   "y": 0
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "1 - sum(:node_memory_MemAvailable_bytes:sum{cluster=\"$cluster\"}) / sum(node_memory_MemTotal_bytes{job=\"integrations/kubernetes/node-exporter\",cluster=\"$cluster\"})",
                      "instant": true
                   }
                ],
                "title": "Memory Utilisation",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 4,
                   "x": 16,
                   "y": 0
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"integrations/kubernetes/kube-state-metrics\",resource=\"memory\",cluster=\"$cluster\"})",
                      "instant": true
                   }
                ],
                "title": "Memory Requests Commitment",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 4,
                   "x": 20,
                   "y": 0
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"integrations/kubernetes/kube-state-metrics\",resource=\"memory\",cluster=\"$cluster\"})",
                      "instant": true
                   }
                ],
                "title": "Memory Limits Commitment",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      }
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 6
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\"}) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "CPU Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Namespace"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 12
                },
                "id": 8,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(kube_pod_owner{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\"}) by (namespace) / sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\"}) by (namespace) / sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "CPU Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "namespace",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "Time 7": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Time 7": 6,
                            "Value #A": 8,
                            "Value #B": 9,
                            "Value #C": 10,
                            "Value #D": 11,
                            "Value #E": 12,
                            "Value #F": 13,
                            "Value #G": 14,
                            "namespace": 7
                         },
                         "renameByName": {
                            "Value #A": "Pods",
                            "Value #B": "Workloads",
                            "Value #C": "CPU Usage",
                            "Value #D": "CPU Requests",
                            "Value #E": "CPU Requests %",
                            "Value #F": "CPU Limits",
                            "Value #G": "CPU Limits %",
                            "namespace": "Namespace"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 18
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_rss{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Memory",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Memory Usage"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "bytes"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Memory Requests"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "bytes"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Memory Limits"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "bytes"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Namespace"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 24
                },
                "id": 10,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(kube_pod_owner{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_rss{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_rss{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace) / sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_rss{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace) / sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Memory Requests by Namespace",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "namespace",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "Time 7": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Time 7": 6,
                            "Value #A": 8,
                            "Value #B": 9,
                            "Value #C": 10,
                            "Value #D": 11,
                            "Value #E": 12,
                            "Value #F": 13,
                            "Value #G": 14,
                            "namespace": 7
                         },
                         "renameByName": {
                            "Value #A": "Pods",
                            "Value #B": "Workloads",
                            "Value #C": "Memory Usage",
                            "Value #D": "Memory Requests",
                            "Value #E": "Memory Requests %",
                            "Value #F": "Memory Limits",
                            "Value #G": "Memory Limits %",
                            "namespace": "Namespace"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Bandwidth/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Packets/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "pps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Namespace"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 30
                },
                "id": 11,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Network Usage",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "namespace",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "namespace": 6
                         },
                         "renameByName": {
                            "Value #A": "Current Receive Bandwidth",
                            "Value #B": "Current Transmit Bandwidth",
                            "Value #C": "Rate of Received Packets",
                            "Value #D": "Rate of Transmitted Packets",
                            "Value #E": "Rate of Received Packets Dropped",
                            "Value #F": "Rate of Transmitted Packets Dropped",
                            "namespace": "Namespace"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 36
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 42
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 48
                },
                "id": 14,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "avg(irate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Container Bandwidth by Namespace: Received",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 54
                },
                "id": 15,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "avg(irate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Container Bandwidth by Namespace: Transmitted",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 60
                },
                "id": 16,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 66
                },
                "id": 17,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 72
                },
                "id": 18,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 78
                },
                "id": 19,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "iops"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 84
                },
                "id": 20,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "ceil(sum by(namespace) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval])))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "IOPS(Reads+Writes)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 90
                },
                "id": 21,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "ThroughPut(Read+Write)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/IOPS/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "iops"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Throughput/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Namespace"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 96
                },
                "id": 22,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Storage IO",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "namespace",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "namespace": 6
                         },
                         "renameByName": {
                            "Value #A": "IOPS(Reads)",
                            "Value #B": "IOPS(Writes)",
                            "Value #C": "IOPS(Reads + Writes)",
                            "Value #D": "Throughput(Read)",
                            "Value #E": "Throughput(Write)",
                            "Value #F": "Throughput(Read + Write)",
                            "namespace": "Namespace"
                         }
                      }
                   }
                ],
                "type": "table"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 36,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/cadvisor\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Compute Resources / Cluster",
          "uid": "efa86fd1d0c121a26444b636a3f509a8"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: k8s-resources-cluster.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  k8s-resources-namespace.json: |-
    {
          "editable": false,
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 6,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}) / sum(kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"})",
                      "instant": true
                   }
                ],
                "title": "CPU Utilisation (from requests)",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 6,
                   "x": 6,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}) / sum(kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"})",
                      "instant": true
                   }
                ],
                "title": "CPU Utilisation (from limits)",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 6,
                   "x": 12,
                   "y": 0
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) / sum(kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"})",
                      "instant": true
                   }
                ],
                "title": "Memory Utilisation (from requests)",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 6,
                   "x": 18,
                   "y": 0
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) / sum(kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"})",
                      "instant": true
                   }
                ],
                "title": "Memory Utilisation (from limits)",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      }
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "B"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "C"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "orange",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 7
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "legendFormat": "__auto"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.cpu\"})",
                      "legendFormat": "quota - requests"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.cpu\"})",
                      "legendFormat": "quota - limits"
                   }
                ],
                "title": "CPU Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 14
                },
                "id": 6,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "CPU Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Value #A": 6,
                            "Value #B": 7,
                            "Value #C": 8,
                            "Value #D": 9,
                            "Value #E": 10,
                            "pod": 5
                         },
                         "renameByName": {
                            "Value #A": "CPU Usage",
                            "Value #B": "CPU Requests",
                            "Value #C": "CPU Requests %",
                            "Value #D": "CPU Limits",
                            "Value #E": "CPU Limits %",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "B"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "C"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "orange",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 21
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}) by (pod)",
                      "legendFormat": "__auto"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.memory\"})",
                      "legendFormat": "quota - requests"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.memory\"})",
                      "legendFormat": "quota - limits"
                   }
                ],
                "title": "Memory Usage (w/o cache)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 28
                },
                "id": 8,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_rss{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_cache{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_swap{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Memory Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "Time 7": true,
                            "Time 8": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Time 7": 6,
                            "Time 8": 7,
                            "Value #A": 9,
                            "Value #B": 10,
                            "Value #C": 11,
                            "Value #D": 12,
                            "Value #E": 13,
                            "Value #F": 14,
                            "Value #G": 15,
                            "Value #H": 16,
                            "pod": 8
                         },
                         "renameByName": {
                            "Value #A": "Memory Usage",
                            "Value #B": "Memory Requests",
                            "Value #C": "Memory Requests %",
                            "Value #D": "Memory Limits",
                            "Value #E": "Memory Limits %",
                            "Value #F": "Memory Usage (RSS)",
                            "Value #G": "Memory Usage (Cache)",
                            "Value #H": "Memory Usage (Swap)",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Bandwidth/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Packets/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "pps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 35
                },
                "id": 9,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Network Usage",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "pod": 6
                         },
                         "renameByName": {
                            "Value #A": "Current Receive Bandwidth",
                            "Value #B": "Current Transmit Bandwidth",
                            "Value #C": "Rate of Received Packets",
                            "Value #D": "Rate of Transmitted Packets",
                            "Value #E": "Rate of Received Packets Dropped",
                            "Value #F": "Rate of Transmitted Packets Dropped",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 42
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 42
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 49
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 49
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 56
                },
                "id": 14,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 56
                },
                "id": 15,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "iops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 63
                },
                "id": 16,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "ceil(sum by(pod) (rate(container_fs_reads_total{container!=\"\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_total{container!=\"\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "IOPS(Reads+Writes)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 63
                },
                "id": 17,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{container!=\"\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{container!=\"\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "ThroughPut(Read+Write)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/IOPS/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "iops"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Throughput/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 70
                },
                "id": 18,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Storage IO",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "pod": 6
                         },
                         "renameByName": {
                            "Value #A": "IOPS(Reads)",
                            "Value #B": "IOPS(Writes)",
                            "Value #C": "IOPS(Reads + Writes)",
                            "Value #D": "Throughput(Read)",
                            "Value #E": "Throughput(Write)",
                            "Value #F": "Throughput(Read + Write)",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 36,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/kube-state-metrics\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "namespace",
                   "name": "namespace",
                   "query": "label_values(kube_namespace_status_phase{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Compute Resources / Namespace (Pods)",
          "uid": "85a562078cdf77779eaa1add43ccec1e"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: k8s-resources-namespace.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  k8s-resources-node.json: |-
    {
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "hideControls": false,
          "links": [ ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 10,
                      "id": 1,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 0,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [
                         {
                            "alias": "max capacity",
                            "color": "#F2495C",
                            "dashes": true,
                            "fill": 0,
                            "hiddenSeries": true,
                            "hideTooltip": true,
                            "legend": true,
                            "linewidth": 2,
                            "stack": false
                         }
                      ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(kube_node_status_capacity{cluster=\"$cluster\", node=~\"$node\", resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "max capacity",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "CPU Usage",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "CPU Usage",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "CPU Usage",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "CPU Requests",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #B",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "CPU Requests %",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #C",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "percentunit"
                         },
                         {
                            "alias": "CPU Limits",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #D",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "CPU Limits %",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #E",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "percentunit"
                         },
                         {
                            "alias": "Pod",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "pod",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         },
                         {
                            "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", node=~\"$node\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "C"
                         },
                         {
                            "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "D"
                         },
                         {
                            "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", node=~\"$node\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "E"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "CPU Quota",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "CPU Quota",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 10,
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 0,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [
                         {
                            "alias": "max capacity",
                            "color": "#F2495C",
                            "dashes": true,
                            "fill": 0,
                            "hiddenSeries": true,
                            "hideTooltip": true,
                            "legend": true,
                            "linewidth": 2,
                            "stack": false
                         }
                      ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(kube_node_status_capacity{cluster=\"$cluster\", node=~\"$node\", resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "max capacity",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\", container!=\"\"}) by (pod)",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Memory Usage (w/o cache)",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "bytes",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Memory Usage",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 4,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "Memory Usage",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "bytes"
                         },
                         {
                            "alias": "Memory Requests",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #B",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "bytes"
                         },
                         {
                            "alias": "Memory Requests %",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #C",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "percentunit"
                         },
                         {
                            "alias": "Memory Limits",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #D",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "bytes"
                         },
                         {
                            "alias": "Memory Limits %",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #E",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "percentunit"
                         },
                         {
                            "alias": "Memory Usage (RSS)",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #F",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "bytes"
                         },
                         {
                            "alias": "Memory Usage (Cache)",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #G",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "bytes"
                         },
                         {
                            "alias": "Memory Usage (Swap)",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #H",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "bytes"
                         },
                         {
                            "alias": "Pod",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "pod",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         },
                         {
                            "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "C"
                         },
                         {
                            "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "D"
                         },
                         {
                            "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "E"
                         },
                         {
                            "expr": "sum(node_namespace_pod_container:container_memory_rss{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "F"
                         },
                         {
                            "expr": "sum(node_namespace_pod_container:container_memory_cache{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "G"
                         },
                         {
                            "expr": "sum(node_namespace_pod_container:container_memory_swap{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "H"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Memory Quota",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Memory Quota",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "",
                      "value": ""
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(up{job=\"integrations/kubernetes/kube-state-metrics\"}, cluster)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "",
                      "value": ""
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": true,
                   "name": "node",
                   "options": [ ],
                   "query": "label_values(kube_node_info{cluster=\"$cluster\"}, node)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "browser",
          "title": "Kubernetes / Compute Resources / Node (Pods)",
          "uid": "200ac8fdbfbb74b39aff88118e4d1c2c",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: k8s-resources-node.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  k8s-resources-pod.json: |-
    {
          "editable": false,
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      }
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "B"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "C"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "orange",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{namespace=\"$namespace\", pod=\"$pod\", cluster=\"$cluster\", container!=\"\"}) by (container)",
                      "legendFormat": "__auto"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"}\n)\n",
                      "legendFormat": "requests"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"}\n)\n",
                      "legendFormat": "limits"
                   }
                ],
                "title": "CPU Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "axisColorMode": "thresholds",
                         "axisSoftMax": 1,
                         "axisSoftMin": 0,
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true,
                         "thresholdsStyle": {
                            "mode": "dashed+area"
                         }
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "A"
                         },
                         "properties": [
                            {
                               "id": "thresholds",
                               "value": {
                                  "mode": "absolute",
                                  "steps": [
                                     {
                                        "color": "green",
                                        "value": null
                                     },
                                     {
                                        "color": "red",
                                        "value": 0.25
                                     }
                                  ]
                               }
                            },
                            {
                               "id": "color",
                               "value": {
                                  "mode": "thresholds",
                                  "seriesBy": "lastNotNull"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 7
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(increase(container_cpu_cfs_throttled_periods_total{job=\"integrations/kubernetes/cadvisor\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", cluster=\"$cluster\"}[$__rate_interval])) by (container) /sum(increase(container_cpu_cfs_periods_total{job=\"integrations/kubernetes/cadvisor\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", cluster=\"$cluster\"}[$__rate_interval])) by (container)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "CPU Throttling",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 14
                },
                "id": 3,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "CPU Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "container",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Value #A": 6,
                            "Value #B": 7,
                            "Value #C": 8,
                            "Value #D": 9,
                            "Value #E": 10,
                            "container": 5
                         },
                         "renameByName": {
                            "Value #A": "CPU Usage",
                            "Value #B": "CPU Requests",
                            "Value #C": "CPU Requests %",
                            "Value #D": "CPU Limits",
                            "Value #E": "CPU Limits %",
                            "container": "Container"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "B"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "C"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "orange",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 21
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container)",
                      "legendFormat": "__auto"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"}\n)\n",
                      "legendFormat": "requests"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"}\n)\n",
                      "legendFormat": "limits"
                   }
                ],
                "title": "Memory Usage (WSS)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 28
                },
                "id": 5,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", image!=\"\"}) by (container) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_rss{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_cache{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_swap{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Memory Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "container",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "Time 7": true,
                            "Time 8": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Time 7": 6,
                            "Time 8": 7,
                            "Value #A": 9,
                            "Value #B": 10,
                            "Value #C": 11,
                            "Value #D": 12,
                            "Value #E": 13,
                            "Value #F": 14,
                            "Value #G": 15,
                            "Value #H": 16,
                            "container": 8
                         },
                         "renameByName": {
                            "Value #A": "Memory Usage",
                            "Value #B": "Memory Requests",
                            "Value #C": "Memory Requests %",
                            "Value #D": "Memory Limits",
                            "Value #E": "Memory Limits %",
                            "Value #F": "Memory Usage (RSS)",
                            "Value #G": "Memory Usage (Cache)",
                            "Value #H": "Memory Usage (Swap)",
                            "container": "Container"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 35
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 35
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 42
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 42
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 49
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 49
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "iops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 56
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "ceil(sum by(pod) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])))",
                      "legendFormat": "Reads"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "ceil(sum by(pod) (rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\",namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])))",
                      "legendFormat": "Writes"
                   }
                ],
                "title": "IOPS (Pod)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 56
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                      "legendFormat": "Reads"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                      "legendFormat": "Writes"
                   }
                ],
                "title": "ThroughPut (Pod)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "iops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 63
                },
                "id": 14,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "ceil(sum by(container) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval])))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "IOPS (Containers)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 63
                },
                "id": 15,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "ThroughPut (Containers)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/IOPS/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "iops"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Throughput/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 70
                },
                "id": 16,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\",device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Storage IO",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "container",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "container": 6
                         },
                         "renameByName": {
                            "Value #A": "IOPS(Reads)",
                            "Value #B": "IOPS(Writes)",
                            "Value #C": "IOPS(Reads + Writes)",
                            "Value #D": "Throughput(Read)",
                            "Value #E": "Throughput(Write)",
                            "Value #F": "Throughput(Read + Write)",
                            "container": "Container"
                         }
                      }
                   }
                ],
                "type": "table"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 36,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/kube-state-metrics\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "namespace",
                   "name": "namespace",
                   "query": "label_values(kube_namespace_status_phase{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "pod",
                   "name": "pod",
                   "query": "label_values(kube_pod_info{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\"}, pod)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Compute Resources / Pod",
          "uid": "6581e46e4e5c7ba40a07646395ef7b23"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: k8s-resources-pod.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  k8s-resources-workload.json: |-
    {
          "editable": false,
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      }
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "CPU Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 7
                },
                "id": 2,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "CPU Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Value #A": 6,
                            "Value #B": 7,
                            "Value #C": 8,
                            "Value #D": 9,
                            "Value #E": 10,
                            "pod": 5
                         },
                         "renameByName": {
                            "Value #A": "CPU Usage",
                            "Value #B": "CPU Requests",
                            "Value #C": "CPU Requests %",
                            "Value #D": "CPU Limits",
                            "Value #E": "CPU Limits %",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 14
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Memory Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 21
                },
                "id": 4,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Memory Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Value #A": 9,
                            "Value #B": 10,
                            "Value #C": 11,
                            "Value #D": 12,
                            "Value #E": 13,
                            "pod": 8
                         },
                         "renameByName": {
                            "Value #A": "Memory Usage",
                            "Value #B": "Memory Requests",
                            "Value #C": "Memory Requests %",
                            "Value #D": "Memory Limits",
                            "Value #E": "Memory Limits %",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Bandwidth/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Packets/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "pps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 28
                },
                "id": 5,
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Network Usage",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "pod": 6
                         },
                         "renameByName": {
                            "Value #A": "Current Receive Bandwidth",
                            "Value #B": "Current Transmit Bandwidth",
                            "Value #C": "Rate of Received Packets",
                            "Value #D": "Rate of Transmitted Packets",
                            "Value #E": "Rate of Received Packets Dropped",
                            "Value #F": "Rate of Transmitted Packets Dropped",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 35
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 35
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 42
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(avg(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Container Bandwidth by Pod: Received",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 42
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(avg(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Container Bandwidth by Pod: Transmitted",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 49
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 49
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 56
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 56
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v10.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 36,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/kube-state-metrics\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "namespace",
                   "name": "namespace",
                   "query": "label_values(kube_namespace_status_phase{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "workload_type",
                   "name": "type",
                   "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\"}, workload_type)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "workload",
                   "name": "workload",
                   "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}, workload)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Compute Resources / Workload",
          "uid": "a164a7f0339f99e89cea5cb47e9be617"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: k8s-resources-workload.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  k8s-resources-workloads-namespace.json: |-
    {
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "hideControls": false,
          "links": [ ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 10,
                      "id": 1,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 0,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [
                         {
                            "alias": "quota - requests",
                            "color": "#F2495C",
                            "dashes": true,
                            "fill": 0,
                            "hiddenSeries": true,
                            "hideTooltip": true,
                            "legend": true,
                            "linewidth": 2,
                            "stack": false
                         },
                         {
                            "alias": "quota - limits",
                            "color": "#FF9830",
                            "dashes": true,
                            "fill": 0,
                            "hiddenSeries": true,
                            "hideTooltip": true,
                            "legend": true,
                            "linewidth": 2,
                            "stack": false
                         }
                      ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                            "format": "time_series",
                            "legendFormat": "{{workload}} - {{workload_type}}",
                            "legendLink": null
                         },
                         {
                            "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.cpu\"})",
                            "format": "time_series",
                            "legendFormat": "quota - requests",
                            "legendLink": null
                         },
                         {
                            "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.cpu\"})",
                            "format": "time_series",
                            "legendFormat": "quota - limits",
                            "legendLink": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "CPU Usage",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "CPU Usage",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "Running Pods",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 0,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "CPU Usage",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #B",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "CPU Requests",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #C",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "CPU Requests %",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #D",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "percentunit"
                         },
                         {
                            "alias": "CPU Limits",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #E",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "CPU Limits %",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #F",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "percentunit"
                         },
                         {
                            "alias": "Workload",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": true,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$__cell_2",
                            "pattern": "workload",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "Workload Type",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "workload_type",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload, workload_type)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         },
                         {
                            "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(\n  kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "C"
                         },
                         {
                            "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "D"
                         },
                         {
                            "expr": "sum(\n  kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "E"
                         },
                         {
                            "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "F"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "CPU Quota",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "CPU Quota",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 10,
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 0,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [
                         {
                            "alias": "quota - requests",
                            "color": "#F2495C",
                            "dashes": true,
                            "fill": 0,
                            "hiddenSeries": true,
                            "hideTooltip": true,
                            "legend": true,
                            "linewidth": 2,
                            "stack": false
                         },
                         {
                            "alias": "quota - limits",
                            "color": "#FF9830",
                            "dashes": true,
                            "fill": 0,
                            "hiddenSeries": true,
                            "hideTooltip": true,
                            "legend": true,
                            "linewidth": 2,
                            "stack": false
                         }
                      ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(\n    container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                            "format": "time_series",
                            "legendFormat": "{{workload}} - {{workload_type}}",
                            "legendLink": null
                         },
                         {
                            "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.memory\"})",
                            "format": "time_series",
                            "legendFormat": "quota - requests",
                            "legendLink": null
                         },
                         {
                            "expr": "scalar(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.memory\"})",
                            "format": "time_series",
                            "legendFormat": "quota - limits",
                            "legendLink": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Memory Usage",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "bytes",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Memory Usage",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 4,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "Running Pods",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 0,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "Memory Usage",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #B",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "bytes"
                         },
                         {
                            "alias": "Memory Requests",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #C",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "bytes"
                         },
                         {
                            "alias": "Memory Requests %",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #D",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "percentunit"
                         },
                         {
                            "alias": "Memory Limits",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #E",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "bytes"
                         },
                         {
                            "alias": "Memory Limits %",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #F",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "percentunit"
                         },
                         {
                            "alias": "Workload",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": true,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$__cell_2",
                            "pattern": "workload",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "Workload Type",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "workload_type",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload, workload_type)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         },
                         {
                            "expr": "sum(\n    container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(\n  kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "C"
                         },
                         {
                            "expr": "sum(\n    container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "D"
                         },
                         {
                            "expr": "sum(\n  kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "E"
                         },
                         {
                            "expr": "sum(\n    container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "F"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Memory Quota",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Memory Quota",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 5,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "Current Receive Bandwidth",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "Bps"
                         },
                         {
                            "alias": "Current Transmit Bandwidth",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #B",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "Bps"
                         },
                         {
                            "alias": "Rate of Received Packets",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #C",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "pps"
                         },
                         {
                            "alias": "Rate of Transmitted Packets",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #D",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "pps"
                         },
                         {
                            "alias": "Rate of Received Packets Dropped",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #E",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "pps"
                         },
                         {
                            "alias": "Rate of Transmitted Packets Dropped",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #F",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "pps"
                         },
                         {
                            "alias": "Workload",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": true,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down to pods",
                            "linkUrl": "/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$type",
                            "pattern": "workload",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "Workload Type",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "workload_type",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "(sum(irate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         },
                         {
                            "expr": "(sum(irate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "B"
                         },
                         {
                            "expr": "(sum(irate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "C"
                         },
                         {
                            "expr": "(sum(irate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "D"
                         },
                         {
                            "expr": "(sum(irate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "E"
                         },
                         {
                            "expr": "(sum(irate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "F"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Current Network Usage",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Current Network Usage",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 10,
                      "id": 6,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 0,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 6,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "(sum(irate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "legendFormat": "{{workload}}",
                            "legendLink": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Receive Bandwidth",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 10,
                      "id": 7,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 0,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 6,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "(sum(irate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "legendFormat": "{{workload}}",
                            "legendLink": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Transmit Bandwidth",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Bandwidth",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 10,
                      "id": 8,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 0,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 6,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "(avg(irate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "legendFormat": "{{workload}}",
                            "legendLink": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Average Container Bandwidth by Workload: Received",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 10,
                      "id": 9,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 0,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 6,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "(avg(irate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "legendFormat": "{{workload}}",
                            "legendLink": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Average Container Bandwidth by Workload: Transmitted",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Average Container Bandwidth by Workload",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 10,
                      "id": 10,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 0,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 6,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "(sum(irate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "legendFormat": "{{workload}}",
                            "legendLink": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Received Packets",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 10,
                      "id": 11,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 0,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 6,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "(sum(irate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "legendFormat": "{{workload}}",
                            "legendLink": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Transmitted Packets",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Rate of Packets",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 10,
                      "id": 12,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 0,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 6,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "(sum(irate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "legendFormat": "{{workload}}",
                            "legendLink": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Received Packets Dropped",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 10,
                      "id": 13,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 0,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 6,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "(sum(irate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "legendFormat": "{{workload}}",
                            "legendLink": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Transmitted Packets Dropped",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Rate of Packets Dropped",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "",
                      "value": ""
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(up{job=\"integrations/kubernetes/kube-state-metrics\"}, cluster)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "",
                      "value": ""
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(kube_pod_info{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "",
                      "value": ""
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\"}, workload_type)",
                   "hide": 0,
                   "includeAll": true,
                   "label": null,
                   "multi": false,
                   "name": "type",
                   "options": [ ],
                   "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\"}, workload_type)",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 0,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "browser",
          "title": "Kubernetes / Compute Resources / Namespace (Workloads)",
          "uid": "a87fb0d919ec0ea5f6543124e16c42a5",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: k8s-resources-workloads-namespace.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  kubelet.json: |-
    {
          "__inputs": [ ],
          "__requires": [ ],
          "annotations": {
             "list": [ ]
          },
          "editable": false,
          "gnetId": null,
          "graphTooltip": 0,
          "hideControls": false,
          "id": null,
          "links": [ ],
          "panels": [
             {
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ],
                      "mappings": [ ],
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [ ]
                      },
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 0,
                   "y": 0
                },
                "id": 2,
                "links": [ ],
                "options": {
                   "colorMode": "value",
                   "graphMode": "area",
                   "justifyMode": "auto",
                   "orientation": "auto",
                   "reduceOptions": {
                      "calcs": [
                         "lastNotNull"
                      ],
                      "fields": "",
                      "values": false
                   },
                   "textMode": "auto"
                },
                "pluginVersion": "7",
                "targets": [
                   {
                      "expr": "sum(kubelet_node_name{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\"})",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "A"
                   }
                ],
                "title": "Running Kubelets",
                "transparent": false,
                "type": "stat"
             },
             {
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ],
                      "mappings": [ ],
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [ ]
                      },
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 4,
                   "y": 0
                },
                "id": 3,
                "links": [ ],
                "options": {
                   "colorMode": "value",
                   "graphMode": "area",
                   "justifyMode": "auto",
                   "orientation": "auto",
                   "reduceOptions": {
                      "calcs": [
                         "lastNotNull"
                      ],
                      "fields": "",
                      "values": false
                   },
                   "textMode": "auto"
                },
                "pluginVersion": "7",
                "targets": [
                   {
                      "expr": "sum(kubelet_running_pods{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}) OR sum(kubelet_running_pod_count{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"})",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}}",
                      "refId": "A"
                   }
                ],
                "title": "Running Pods",
                "transparent": false,
                "type": "stat"
             },
             {
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ],
                      "mappings": [ ],
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [ ]
                      },
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 8,
                   "y": 0
                },
                "id": 4,
                "links": [ ],
                "options": {
                   "colorMode": "value",
                   "graphMode": "area",
                   "justifyMode": "auto",
                   "orientation": "auto",
                   "reduceOptions": {
                      "calcs": [
                         "lastNotNull"
                      ],
                      "fields": "",
                      "values": false
                   },
                   "textMode": "auto"
                },
                "pluginVersion": "7",
                "targets": [
                   {
                      "expr": "sum(kubelet_running_containers{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}) OR sum(kubelet_running_container_count{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"})",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}}",
                      "refId": "A"
                   }
                ],
                "title": "Running Containers",
                "transparent": false,
                "type": "stat"
             },
             {
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ],
                      "mappings": [ ],
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [ ]
                      },
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 12,
                   "y": 0
                },
                "id": 5,
                "links": [ ],
                "options": {
                   "colorMode": "value",
                   "graphMode": "area",
                   "justifyMode": "auto",
                   "orientation": "auto",
                   "reduceOptions": {
                      "calcs": [
                         "lastNotNull"
                      ],
                      "fields": "",
                      "values": false
                   },
                   "textMode": "auto"
                },
                "pluginVersion": "7",
                "targets": [
                   {
                      "expr": "sum(volume_manager_total_volumes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\", state=\"actual_state_of_world\"})",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}}",
                      "refId": "A"
                   }
                ],
                "title": "Actual Volume Count",
                "transparent": false,
                "type": "stat"
             },
             {
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ],
                      "mappings": [ ],
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [ ]
                      },
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 16,
                   "y": 0
                },
                "id": 6,
                "links": [ ],
                "options": {
                   "colorMode": "value",
                   "graphMode": "area",
                   "justifyMode": "auto",
                   "orientation": "auto",
                   "reduceOptions": {
                      "calcs": [
                         "lastNotNull"
                      ],
                      "fields": "",
                      "values": false
                   },
                   "textMode": "auto"
                },
                "pluginVersion": "7",
                "targets": [
                   {
                      "expr": "sum(volume_manager_total_volumes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\",state=\"desired_state_of_world\"})",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}}",
                      "refId": "A"
                   }
                ],
                "title": "Desired Volume Count",
                "transparent": false,
                "type": "stat"
             },
             {
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ],
                      "mappings": [ ],
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [ ]
                      },
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 20,
                   "y": 0
                },
                "id": 7,
                "links": [ ],
                "options": {
                   "colorMode": "value",
                   "graphMode": "area",
                   "justifyMode": "auto",
                   "orientation": "auto",
                   "reduceOptions": {
                      "calcs": [
                         "lastNotNull"
                      ],
                      "fields": "",
                      "values": false
                   },
                   "textMode": "auto"
                },
                "pluginVersion": "7",
                "targets": [
                   {
                      "expr": "sum(rate(kubelet_node_config_error{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}[$__rate_interval]))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}}",
                      "refId": "A"
                   }
                ],
                "title": "Config Error Count",
                "transparent": false,
                "type": "stat"
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 7
                },
                "id": 8,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(kubelet_runtime_operations_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (operation_type, instance)",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}} {{operation_type}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Operation Rate",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 7
                },
                "id": 9,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(kubelet_runtime_operations_errors_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type)",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}} {{operation_type}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Operation Error Rate",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 14
                },
                "id": 10,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "histogram_quantile(0.99, sum(rate(kubelet_runtime_operations_duration_seconds_bucket{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type, le))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}} {{operation_type}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Operation duration 99th quantile",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 21
                },
                "id": 11,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(kubelet_pod_start_duration_seconds_count{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance)",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}} pod",
                      "refId": "A"
                   },
                   {
                      "expr": "sum(rate(kubelet_pod_worker_duration_seconds_count{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance)",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}} worker",
                      "refId": "B"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Pod Start Rate",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 21
                },
                "id": 12,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "histogram_quantile(0.99, sum(rate(kubelet_pod_start_duration_seconds_bucket{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}} pod",
                      "refId": "A"
                   },
                   {
                      "expr": "histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}} worker",
                      "refId": "B"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Pod Start Duration",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 28
                },
                "id": 13,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(storage_operation_duration_seconds_count{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_name, volume_plugin)",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Storage Operation Rate",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 28
                },
                "id": 14,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(storage_operation_errors_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_name, volume_plugin)",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Storage Operation Error Rate",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 35
                },
                "id": 15,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "histogram_quantile(0.99, sum(rate(storage_operation_duration_seconds_bucket{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_name, volume_plugin, le))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Storage Operation Duration 99th quantile",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 42
                },
                "id": 16,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(kubelet_cgroup_manager_duration_seconds_count{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type)",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{operation_type}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Cgroup manager operation rate",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 42
                },
                "id": 17,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "histogram_quantile(0.99, sum(rate(kubelet_cgroup_manager_duration_seconds_bucket{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type, le))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}} {{operation_type}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Cgroup manager 99th quantile",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Pod lifecycle event generator",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 49
                },
                "id": 18,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(kubelet_pleg_relist_duration_seconds_count{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}[$__rate_interval])) by (instance)",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "PLEG relist rate",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 49
                },
                "id": 19,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_interval_seconds_bucket{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "PLEG relist interval",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 56
                },
                "id": 20,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "PLEG relist duration",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 63
                },
                "id": 21,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "2xx",
                      "refId": "A"
                   },
                   {
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "3xx",
                      "refId": "B"
                   },
                   {
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "4xx",
                      "refId": "C"
                   },
                   {
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "5xx",
                      "refId": "D"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "RPC Rate",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "ops",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 70
                },
                "id": 22,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": true
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}[$__rate_interval])) by (instance, verb, url, le))",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}} {{verb}} {{url}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Request duration 99th quantile",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 77
                },
                "id": 23,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "process_resident_memory_bytes{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Memory",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "bytes",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "bytes",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 8,
                   "y": 77
                },
                "id": 24,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "CPU usage",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 16,
                   "y": 77
                },
                "id": 25,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "go_goroutines{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}",
                      "format": "time_series",
                      "intervalFactor": 2,
                      "legendFormat": "{{instance}}",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Goroutines",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ]
             }
          ],
          "refresh": "10s",
          "rows": [ ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(up{job=\"integrations/kubernetes/kubelet\"}, cluster)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "instance",
                   "multi": false,
                   "name": "instance",
                   "options": [ ],
                   "query": "label_values(up{job=\"integrations/kubernetes/kubelet\",cluster=\"$cluster\"}, instance)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "browser",
          "title": "Kubernetes / Kubelet",
          "uid": "3138fa155d5915769fbded898ac09fd9",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: kubelet.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-alertmanager-resources.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|alertmanager)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|alertmanager)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|alertmanager)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|alertmanager)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|alertmanager)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|alertmanager)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|alertmanager)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|alertmanager)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alertmanager",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|alertmanager|mimir-backend).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|alertmanager|mimir-backend).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Network",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_written_bytes_total[$__rate_interval]\n  )\n)\n+\nignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"(mimir|alertmanager)\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk writes",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_read_bytes_total[$__rate_interval]\n  )\n) + ignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"(mimir|alertmanager)\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk reads",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Disk",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "max by(persistentvolumeclaim) (\n  kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} /\n  kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\nand\ncount by(persistentvolumeclaim) (\n  kube_persistentvolumeclaim_labels{\n    cluster=~\"$cluster\", namespace=~\"$namespace\",\n    label_name=~\"((mimir|alertmanager)).*\"\n  }\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{persistentvolumeclaim}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk space utilization",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Alertmanager resources",
          "uid": "a6883fb22799ac74479c7db872451092",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-alertmanager-resources.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-alertmanager.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "100px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 1,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cluster_job_pod:cortex_alertmanager_alerts:sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Total alerts",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cluster_job_pod:cortex_alertmanager_silences:sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Total silences",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "max(cortex_alertmanager_tenants_discovered{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Tenants",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Headlines",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "QPS",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alertmanager Distributor",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "sum(cluster_job:cortex_alertmanager_alerts_received_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})\n-\nsum(cluster_job:cortex_alertmanager_alerts_invalid_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(cluster_job:cortex_alertmanager_alerts_invalid_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "APS",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alerts received",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "cortex_alertmanager_dispatcher_aggregation_groups{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "per pod Active Aggregation Groups",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alerts grouping",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(cluster_job_integration:cortex_alertmanager_notifications_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})\n-\nsum(cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})\n",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "NPS",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "(\nsum(cluster_job_integration:cortex_alertmanager_notifications_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}) by(integration)\n-\nsum(cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}) by(integration)\n) > 0\nor on () vector(0)\n",
                            "format": "time_series",
                            "legendFormat": "success - {{ integration }}",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}) by(integration)",
                            "format": "time_series",
                            "legendFormat": "failed - {{ integration }}",
                            "legendLink": null
                         }
                      ],
                      "title": "NPS by integration",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_alertmanager_notification_latency_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_alertmanager_notification_latency_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_notification_latency_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_alertmanager_notification_latency_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alert notifications",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Operations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"attributes\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Attributes",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"exists\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Exists",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alertmanager Configuration Object Store (Alertmanager accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Get",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: GetRange",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Upload",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"delete\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Delete",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (cortex_alertmanager_tenants_owned{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod tenants",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (cluster_job_pod:cortex_alertmanager_alerts:sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod alerts",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (cluster_job_pod:cortex_alertmanager_silences:sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod silences",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Replication",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 22,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_alertmanager_sync_configs_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_alertmanager_sync_configs_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_sync_configs_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Syncs/sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(reason) (rate(cortex_alertmanager_sync_configs_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{reason}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Syncs/sec (by reason)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum (rate(cortex_alertmanager_ring_check_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "errors",
                            "legendLink": null
                         }
                      ],
                      "title": "Ring check errors/sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Tenant configuration sync",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(outcome) (rate(cortex_alertmanager_state_initial_sync_completed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "interval": "1m",
                            "legendFormat": "{{outcome}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Initial syncs /sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_alertmanager_state_initial_sync_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "interval": "1m",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_alertmanager_state_initial_sync_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "interval": "1m",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_state_initial_sync_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_alertmanager_state_initial_sync_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "interval": "1m",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Initial sync duration",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 27,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_alertmanager_state_fetch_replica_state_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_alertmanager_state_fetch_replica_state_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "interval": "1m",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_state_fetch_replica_state_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "interval": "1m",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Fetch state from other alertmanagers /sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Sharding initial state sync",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 28,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(cluster_job:cortex_alertmanager_state_replication_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})\n-\nsum(cluster_job:cortex_alertmanager_state_replication_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(cluster_job:cortex_alertmanager_state_replication_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Replicate state to other alertmanagers /sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 29,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(cluster_job:cortex_alertmanager_partial_state_merges_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})\n-\nsum(cluster_job:cortex_alertmanager_partial_state_merges_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(cluster_job:cortex_alertmanager_partial_state_merges_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Merge state from other alertmanagers /sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 30,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_alertmanager_state_persist_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_alertmanager_state_persist_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_state_persist_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Persist state to remote storage /sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Sharding runtime state sync",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Alertmanager",
          "uid": "b0d38d318bbddd80476246d4930f9e55",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-alertmanager.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-compactor-resources.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|compactor|mimir-backend)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|compactor|mimir-backend)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|compactor|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|compactor|mimir-backend)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|compactor|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "CPU and memory",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_rss{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|compactor|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|compactor|mimir-backend)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|compactor|mimir-backend)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (RSS)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|compactor|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|compactor|mimir-backend)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|compactor|mimir-backend)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|compactor|mimir-backend).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|compactor|mimir-backend).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Network",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_written_bytes_total[$__rate_interval]\n  )\n)\n+\nignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"(mimir|compactor|mimir-backend)\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk writes",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_read_bytes_total[$__rate_interval]\n  )\n) + ignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"(mimir|compactor|mimir-backend)\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk reads",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(persistentvolumeclaim) (\n  kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} /\n  kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\nand\ncount by(persistentvolumeclaim) (\n  kube_persistentvolumeclaim_labels{\n    cluster=~\"$cluster\", namespace=~\"$namespace\",\n    label_name=~\"((mimir|compactor|mimir-backend)).*\"\n  }\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{persistentvolumeclaim}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk space utilization",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Disk",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Compactor resources",
          "uid": "09a5c49e9cdb2f2b24c6d184574a07fd",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-compactor-resources.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-compactor.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Per-instance runs\nNumber of times a compactor instance triggers a compaction across all tenants that it manages.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "bars",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "completed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "started"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#34CCEB",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_compactor_runs_started_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "started",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_compactor_runs_completed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "completed",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_compactor_runs_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Per-instance runs / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Tenants compaction progress\nIn a multi-tenant cluster, display the progress of tenants that are compacted while compaction is running.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "noValue": 1,
                            "unit": "percentunit"
                         }
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "(\n  cortex_compactor_tenants_processing_succeeded{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"} +\n  cortex_compactor_tenants_processing_failed{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"} +\n  cortex_compactor_tenants_skipped{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}\n)\n/\ncortex_compactor_tenants_discovered{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"} > 0\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Tenants compaction progress",
                      "type": "timeseries"
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Longest time since last successful run\nDisplays the amount of time since the most recent successful execution\nof the compactor.\nThe value shown will be for the compactor replica that has the longest time since its\nlast successful run.\nThe table to the right shows a summary for all compactor replicas.\n\nIf there is no time value, one of the following messages might appear:\n\n- If you see \"No compactor data\" in this panel, that means that no compactors are active yet.\n\n- If you see \"No successful runs\" in this panel, that means that compactors are active, but none\n  of them were successfully executed yet.\n\nThese might be expected - for example, if you just recently restarted your compactors,\nthey might not have had a chance to complete their first compaction run.\nHowever, if these messages persist, you should check the health of your compactors.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "color": {
                               "mode": "thresholds"
                            },
                            "decimals": 1,
                            "noValue": "No compactor data",
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Last run"
                               },
                               "properties": [
                                  {
                                     "id": "custom.width",
                                     "value": 74
                                  },
                                  {
                                     "id": "mappings",
                                     "value": [
                                        {
                                           "options": {
                                              "from": "-Infinity",
                                              "result": {
                                                 "color": "text",
                                                 "text": "No successful runs since startup yet"
                                              },
                                              "to": 0
                                           },
                                           "type": "range"
                                        }
                                     ]
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "mode": "thresholds"
                                     }
                                  },
                                  {
                                     "id": "thresholds",
                                     "value": {
                                        "mode": "absolute",
                                        "steps": [
                                           {
                                              "color": "green",
                                              "value": 0
                                           },
                                           {
                                              "color": "yellow",
                                              "value": 7200
                                           },
                                           {
                                              "color": "orange",
                                              "value": 21600
                                           },
                                           {
                                              "color": "red",
                                              "value": 43200
                                           }
                                        ]
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "fill": 1,
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "reduceOptions": {
                            "calcs": [
                               "first"
                            ],
                            "fields": "/^Last run$/",
                            "values": false
                         },
                         "textMode": "value"
                      },
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 3,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "max by(pod)\n(\n  (time() * (max_over_time(cortex_compactor_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[1h]) !=bool 0))\n  -\n  max_over_time(cortex_compactor_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[1h])\n)\n",
                            "format": "table",
                            "instant": true,
                            "interval": "",
                            "intervalFactor": null,
                            "legendFormat": "",
                            "legendLink": null,
                            "step": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Longest time since last successful run",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transformations": [
                         {
                            "id": "organize",
                            "options": {
                               "renameByName": {
                                  "Value": "Last run",
                                  "pod": "Compactor"
                               }
                            }
                         },
                         {
                            "id": "sortBy",
                            "options": {
                               "sort": [
                                  {
                                     "desc": true,
                                     "field": "Last run"
                                  }
                               ]
                            }
                         }
                      ],
                      "type": "stat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Last successful run per-compactor replica\nDisplays the compactor replicas, and for each, shows how long it has been since\nits last successful compaction run.\n\nThe value in the status column is based on how long it has been since the last successful compaction.\n\n- Okay: less than 2 hours\n- Delayed: more than 2 hours\n- Late: more than 6 hours\n- Very late: more than 12 hours\n\nIf the status of any compactor replicas are *Late* or *Very late*, check their health.\n\n",
                      "fieldConfig": {
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Status"
                               },
                               "properties": [
                                  {
                                     "id": "custom.displayMode",
                                     "value": "color-background"
                                  },
                                  {
                                     "id": "mappings",
                                     "value": [
                                        {
                                           "options": {
                                              "from": "-Infinity",
                                              "result": {
                                                 "color": "transparent",
                                                 "text": "N/A"
                                              },
                                              "to": 0
                                           },
                                           "type": "range"
                                        },
                                        {
                                           "options": {
                                              "from": 0,
                                              "result": {
                                                 "color": "green",
                                                 "text": "Ok"
                                              },
                                              "to": 7200
                                           },
                                           "type": "range"
                                        },
                                        {
                                           "options": {
                                              "from": 7200,
                                              "result": {
                                                 "color": "yellow",
                                                 "text": "Delayed"
                                              },
                                              "to": 21600
                                           },
                                           "type": "range"
                                        },
                                        {
                                           "options": {
                                              "from": 21600,
                                              "result": {
                                                 "color": "orange",
                                                 "text": "Late"
                                              },
                                              "to": 43200
                                           },
                                           "type": "range"
                                        },
                                        {
                                           "options": {
                                              "from": 43200,
                                              "result": {
                                                 "color": "red",
                                                 "text": "Very late"
                                              },
                                              "to": "Infinity"
                                           },
                                           "type": "range"
                                        },
                                        {
                                           "options": {
                                              "match": "null+nan",
                                              "result": {
                                                 "color": "transparent",
                                                 "text": "Unknown"
                                              }
                                           },
                                           "type": "special"
                                        }
                                     ]
                                  },
                                  {
                                     "id": "custom.width",
                                     "value": 86
                                  },
                                  {
                                     "id": "custom.align",
                                     "value": "center"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Last run"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "s"
                                  },
                                  {
                                     "id": "custom.width",
                                     "value": 74
                                  },
                                  {
                                     "id": "mappings",
                                     "value": [
                                        {
                                           "options": {
                                              "from": "-Infinity",
                                              "result": {
                                                 "text": "Never"
                                              },
                                              "to": 0
                                           },
                                           "type": "range"
                                        }
                                     ]
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "max by(pod)\n(\n  (time() * (max_over_time(cortex_compactor_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[1h]) !=bool 0))\n  -\n  max_over_time(cortex_compactor_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[1h])\n)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "Last run",
                            "legendLink": null
                         }
                      ],
                      "title": "Last successful run per-compactor replica",
                      "transformations": [
                         {
                            "id": "organize",
                            "options": {
                               "renameByName": {
                                  "Value": "Last run",
                                  "pod": "Compactor"
                               }
                            }
                         },
                         {
                            "id": "sortBy",
                            "options": {
                               "sort": [
                                  {
                                     "desc": true,
                                     "field": "Last run"
                                  }
                               ]
                            }
                         },
                         {
                            "id": "calculateField",
                            "options": {
                               "alias": "One",
                               "binary": {
                                  "left": "Last run",
                                  "operator": "/",
                                  "right": "Last run"
                               },
                               "mode": "binary",
                               "replaceFields": false
                            }
                         },
                         {
                            "id": "calculateField",
                            "options": {
                               "alias": "Status",
                               "binary": {
                                  "left": "Last run",
                                  "operator": "*",
                                  "right": "One"
                               },
                               "mode": "binary",
                               "replaceFields": false
                            }
                         },
                         {
                            "id": "filterFieldsByName",
                            "options": {
                               "include": {
                                  "names": [
                                     "Compactor",
                                     "Last run",
                                     "Status"
                                  ]
                               }
                            }
                         }
                      ],
                      "type": "table"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Summary",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Estimated Compaction Jobs\nEstimated number of compaction jobs based on latest version of bucket index. Ingesters upload new blocks every 2 hours (shortly after 01:00 UTC, 03:00 UTC, 05:00 UTC, etc.),\nand compactors should process all of them within 2h interval. If this graph regularly goes to zero (or close to zero) in 2 hour intervals, then compaction works as designed.\n\nMetric with number of compaction jobs is computed from blocks in bucket index, which is updated regularly. Metric doesn't change between bucket index updates, even if\nthere were compaction jobs finished in this time. When computing compaction jobs, only jobs that can be executed at given moment are counted. There can be more\njobs, but if they are blocked, they are not counted in the metric. For example if there is a split compaction job pending for some time range, no merge job\ncovering the same time range can run. In this case only split compaction job is counted toward the metric, but merge job isn't.\n\nIn other words, computed number of compaction jobs is the minimum number of compaction jobs based on latest version of bucket index.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(cortex_bucket_index_estimated_compaction_jobs{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}) and (sum(rate(cortex_bucket_index_estimated_compaction_jobs_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval])) == 0)",
                            "format": "time_series",
                            "legendFormat": "Jobs",
                            "legendLink": null
                         }
                      ],
                      "title": "Estimated Compaction Jobs",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### TSDB compactions / sec\nRate of TSDB compactions. Single TSDB compaction takes one or more input blocks and produces one or more (during \"split\" phase) output blocks.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(prometheus_tsdb_compactions_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "compactions",
                            "legendLink": null
                         }
                      ],
                      "title": "TSDB compactions / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### TSDB compaction duration\nDisplay the amount of time that it has taken to run a single TSDB compaction.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(prometheus_tsdb_compaction_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(prometheus_tsdb_compaction_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(prometheus_tsdb_compaction_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(prometheus_tsdb_compaction_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "TSDB compaction duration",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "avg(max by(user) (cortex_bucket_blocks_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         }
                      ],
                      "title": "Average blocks / tenant",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Tenants with largest number of blocks\nThe 10 tenants with the largest number of blocks.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "topk(10, max by(user) (cortex_bucket_blocks_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Tenants with largest number of blocks",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_compactor_blocks_marked_for_deletion_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "blocks",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks marked for deletion / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_compactor_blocks_cleaned_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_compactor_block_cleanup_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks deletions / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Garbage collector",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_compactor_meta_syncs_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_compactor_meta_sync_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_compactor_meta_sync_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Metadata syncs / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_compactor_meta_sync_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_compactor_meta_sync_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_compactor_meta_sync_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_compactor_meta_sync_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Metadata sync duration",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Metadata sync",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Operations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"attributes\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Attributes",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"exists\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Exists",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Object Store",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Get",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: GetRange",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Upload",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 21,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"delete\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Delete",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 22,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 23,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Key-value store for compactors ring",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Compactor",
          "uid": "1b3443aea86db629e6efdb7d05c53823",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-compactor.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-config.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "instances"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "count(cortex_config_hash{cluster=~\"$cluster\", namespace=~\"$namespace\"}) by (sha256)",
                            "format": "time_series",
                            "legendFormat": "sha256:{{sha256}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Startup config file hashes",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Startup config file",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "instances"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "count(cortex_runtime_config_hash{cluster=~\"$cluster\", namespace=~\"$namespace\"}) by (sha256)",
                            "format": "time_series",
                            "legendFormat": "sha256:{{sha256}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Runtime config file hashes",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Runtime config file",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Config",
          "uid": "5d9d0b4724c0f80d68467088ec61e003",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-config.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-object-store.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(component) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{component}}",
                            "legendLink": null
                         }
                      ],
                      "title": "RPS / component",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(component) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) / sum by(component) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{component}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate / component",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Components",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "RPS / operation",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate / operation",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Operations",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Op: Get",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Op: GetRange",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"exists\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Op: Exists",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"attributes\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Op: Attributes",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Op: Upload",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"delete\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Op: Delete",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Object Store",
          "uid": "e1324ee2a434f4158c00a9ee279d3292",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-object-store.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-overrides.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "${datasource}",
                      "id": 1,
                      "span": 12,
                      "targets": [
                         {
                            "expr": "max by(limit_name) (cortex_limits_defaults{cluster=~\"$cluster\",namespace=~\"$namespace\"})",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "title": "Defaults",
                      "transformations": [
                         {
                            "id": "labelsToFields",
                            "options": { }
                         },
                         {
                            "id": "merge",
                            "options": { }
                         },
                         {
                            "id": "organize",
                            "options": {
                               "excludeByName": {
                                  "Time": true
                               },
                               "indexByName": {
                                  "Value": 1,
                                  "limit_name": 0
                               }
                            }
                         },
                         {
                            "id": "sortBy",
                            "options": {
                               "fields": { },
                               "sort": [
                                  {
                                     "field": "limit_name"
                                  }
                               ]
                            }
                         }
                      ],
                      "type": "table"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "${datasource}",
                      "id": 2,
                      "span": 12,
                      "targets": [
                         {
                            "expr": "max by(user, limit_name) (cortex_limits_overrides{cluster=~\"$cluster\",namespace=~\"$namespace\",user=~\"${tenant_id}\"})",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "title": "Per-tenant overrides",
                      "transformations": [
                         {
                            "id": "labelsToFields",
                            "options": {
                               "mode": "columns",
                               "valueLabel": "limit_name"
                            }
                         },
                         {
                            "id": "merge",
                            "options": { }
                         },
                         {
                            "id": "organize",
                            "options": {
                               "excludeByName": {
                                  "Time": true
                               },
                               "indexByName": {
                                  "user": 0
                               }
                            }
                         }
                      ],
                      "type": "table"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "current": {
                      "selected": true,
                      "text": ".*",
                      "value": ".*"
                   },
                   "hide": 0,
                   "label": "Tenant ID",
                   "name": "tenant_id",
                   "options": [
                      {
                         "selected": true,
                         "text": ".*",
                         "value": ".*"
                      }
                   ],
                   "query": ".*",
                   "type": "textbox"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Overrides",
          "uid": "1e2c358600ac53f09faea133f811b5bb",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-overrides.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-overview-networking.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Writes",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Reads",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Backend",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Overview networking",
          "uid": "e15c71d372cc541367a088f10d9fcd92",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-overview-networking.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-overview-resources.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-write|distributor|ingester)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-write|distributor|ingester)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-write|distributor|ingester)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Writes",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_written_bytes_total[$__rate_interval]\n  )\n)\n+\nignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"(mimir|mimir-write|distributor|ingester)\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk writes",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_read_bytes_total[$__rate_interval]\n  )\n) + ignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"(mimir|mimir-write|distributor|ingester)\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk reads",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(persistentvolumeclaim) (\n  kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} /\n  kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\nand\ncount by(persistentvolumeclaim) (\n  kube_persistentvolumeclaim_labels{\n    cluster=~\"$cluster\", namespace=~\"$namespace\",\n    label_name=~\"((mimir|mimir-write|distributor|ingester)).*\"\n  }\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{persistentvolumeclaim}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk space utilization",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Reads",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Backend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_written_bytes_total[$__rate_interval]\n  )\n)\n+\nignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter)\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk writes",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_read_bytes_total[$__rate_interval]\n  )\n) + ignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter)\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk reads",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(persistentvolumeclaim) (\n  kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} /\n  kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\nand\ncount by(persistentvolumeclaim) (\n  kube_persistentvolumeclaim_labels{\n    cluster=~\"$cluster\", namespace=~\"$namespace\",\n    label_name=~\"((mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter)).*\"\n  }\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{persistentvolumeclaim}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk space utilization",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Overview resources",
          "uid": "a9b92d3c4d1af325d872a9e9a7083d71",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-overview-resources.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-overview.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "content": "The 'Status' panel shows an overview on the cluster health over the time.\nTo investigate failures, see a specific dashboard:\n\n- <a target=\"_blank\" href=\"./d/8280707b8f16e7b87b840fc1cc92d4c5/mimir-writes?${__url_time_range}&${__all_variables}\">Writes</a>\n- <a target=\"_blank\" href=\"./d/e327503188913dc38ad571c647eef643/mimir-reads?${__url_time_range}&${__all_variables}\">Reads</a>\n- <a target=\"_blank\" href=\"./d/631e15d5d85afb2ca8e35d62984eeaa0/mimir-ruler?${__url_time_range}&${__all_variables}\">Rule evaluations</a>\n- <a target=\"_blank\" href=\"./d/b0d38d318bbddd80476246d4930f9e55/mimir-alertmanager?${__url_time_range}&${__all_variables}\">Alerting notifications</a>\n- <a target=\"_blank\" href=\"./d/e1324ee2a434f4158c00a9ee279d3292/mimir-object-store?${__url_time_range}&${__all_variables}\">Object storage</a>\n",
                      "datasource": null,
                      "description": "",
                      "id": 1,
                      "mode": "markdown",
                      "span": 3,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   },
                   {
                      "fieldConfig": {
                         "defaults": {
                            "color": {
                               "mode": "thresholds"
                            },
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [
                                  {
                                     "color": "#7EB26D",
                                     "value": null
                                  },
                                  {
                                     "color": "#EAB839",
                                     "value": 0.01
                                  },
                                  {
                                     "color": "#E24D42",
                                     "value": 0.050000000000000003
                                  }
                               ]
                            }
                         }
                      },
                      "id": 2,
                      "options": {
                         "showValue": "never"
                      },
                      "span": 6,
                      "targets": [
                         {
                            "datasource": {
                               "uid": "$datasource"
                            },
                            "exemplar": false,
                            "expr": "(\n    # gRPC errors are not tracked as 5xx but \"error\".\n    sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\",status_code=~\"5.*|error\"}[$__rate_interval]))\n    or\n    # Handle the case no failure has been tracked yet.\n    vector(0)\n)\n/\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]))\n",
                            "instant": false,
                            "legendFormat": "Writes",
                            "range": true
                         },
                         {
                            "datasource": {
                               "uid": "$datasource"
                            },
                            "exemplar": false,
                            "expr": "(\n    sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\",status_code=~\"5.*\"}[$__rate_interval]))\n    or\n    # Handle the case no failure has been tracked yet.\n    vector(0)\n)\n/\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]))\n",
                            "instant": false,
                            "legendFormat": "Reads",
                            "range": true
                         },
                         {
                            "datasource": {
                               "uid": "$datasource"
                            },
                            "exemplar": false,
                            "expr": "(\n  (\n      sum(rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n      +\n      # Consider missed evaluations as failures.\n      sum(rate(cortex_prometheus_rule_group_iterations_missed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n  )\n  or\n  # Handle the case no failure has been tracked yet.\n  vector(0)\n)\n/\nsum(rate(cortex_prometheus_rule_evaluations_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "instant": false,
                            "legendFormat": "Rule evaluations",
                            "range": true
                         },
                         {
                            "datasource": {
                               "uid": "$datasource"
                            },
                            "exemplar": false,
                            "expr": "(\n  # Failed notifications from ruler to Alertmanager (handling the case the ruler metrics are missing).\n  ((sum(rate(cortex_prometheus_notifications_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n) or vector(0))\n  +\n  # Failed notifications from Alertmanager to receivers (handling the case the alertmanager metrics are missing).\n  ((sum(cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})\n) or vector(0))\n)\n/\n(\n  # Total notifications from ruler to Alertmanager (handling the case the ruler metrics are missing).\n  ((sum(rate(cortex_prometheus_notifications_sent_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n) or vector(0))\n  +\n  # Total notifications from Alertmanager to receivers (handling the case the alertmanager metrics are missing).\n  ((sum(cluster_job_integration:cortex_alertmanager_notifications_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\"})\n) or vector(0))\n)\n",
                            "instant": false,
                            "legendFormat": "Alerting notifications",
                            "range": true
                         },
                         {
                            "datasource": {
                               "uid": "$datasource"
                            },
                            "exemplar": false,
                            "expr": "sum(rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))\n/\nsum(rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))\n",
                            "instant": false,
                            "legendFormat": "Object storage",
                            "range": true
                         }
                      ],
                      "title": "Status",
                      "type": "state-timeline"
                   },
                   {
                      "id": 3,
                      "options": {
                         "alertInstanceLabelFilter": "cluster=~\"$cluster\", namespace=~\"$namespace\"",
                         "alertName": "Mimir",
                         "dashboardAlerts": false,
                         "maxItems": 100,
                         "sortOrder": 3,
                         "stateFilter": {
                            "error": true,
                            "firing": true,
                            "noData": false,
                            "normal": false,
                            "pending": false
                         }
                      },
                      "span": 3,
                      "title": "Firing alerts",
                      "type": "alertlist"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Mimir cluster health",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "content": "These panels show an overview on the write path. \nTo examine the write path in detail, see a specific dashboard:\n\n- <a target=\"_blank\" href=\"./d/8280707b8f16e7b87b840fc1cc92d4c5/mimir-writes?${__url_time_range}&${__all_variables}\">Writes</a>\n- <a target=\"_blank\" href=\"./d/bc9160e50b52e89e0e49c840fea3d379/mimir-writes-resources?${__url_time_range}&${__all_variables}\">Writes resources</a>\n- <a target=\"_blank\" href=\"./d/978c1cb452585c96697a238eaac7fe2d/mimir-writes-networking?${__url_time_range}&${__all_variables}\">Writes networking</a>\n- <a target=\"_blank\" href=\"./d/a9b92d3c4d1af325d872a9e9a7083d71/mimir-overview-resources?${__url_time_range}&${__all_variables}\">Overview resources</a>\n- <a target=\"_blank\" href=\"./d/e15c71d372cc541367a088f10d9fcd92/mimir-overview-networking?${__url_time_range}&${__all_variables}\">Overview networking</a>\n",
                      "datasource": null,
                      "description": "",
                      "id": 4,
                      "mode": "markdown",
                      "span": 3,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Write requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Write latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "cps"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(cluster_namespace_job:cortex_distributor_received_samples:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "samples / sec",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(cluster_namespace_job:cortex_distributor_received_exemplars:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "exemplars / sec",
                            "legendLink": null
                         }
                      ],
                      "title": "Ingestion / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Writes",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "content": "These panels show an overview on the read path. \nTo examine the read path in detail, see a specific dashboard:\n\n- <a target=\"_blank\" href=\"./d/e327503188913dc38ad571c647eef643/mimir-reads?${__url_time_range}&${__all_variables}\">Reads</a>\n- <a target=\"_blank\" href=\"./d/cc86fd5aa9301c6528986572ad974db9/mimir-reads-resources?${__url_time_range}&${__all_variables}\">Reads resources</a>\n- <a target=\"_blank\" href=\"./d/54b2a0a4748b3bd1aefa92ce5559a1c2/mimir-reads-networking?${__url_time_range}&${__all_variables}\">Reads networking</a>\n- <a target=\"_blank\" href=\"./d/a9b92d3c4d1af325d872a9e9a7083d71/mimir-overview-resources?${__url_time_range}&${__all_variables}\">Overview resources</a>\n- <a target=\"_blank\" href=\"./d/e15c71d372cc541367a088f10d9fcd92/mimir-overview-networking?${__url_time_range}&${__all_variables}\">Overview networking</a>\n- <a target=\"_blank\" href=\"./d/b3abe8d5c040395cc36615cb4334c92d/mimir-queries?${__url_time_range}&${__all_variables}\">Queries</a>\n- <a target=\"_blank\" href=\"./d/1b3443aea86db629e6efdb7d05c53823/mimir-compactor?${__url_time_range}&${__all_variables}\">Compactor</a>\n",
                      "datasource": null,
                      "description": "",
                      "id": 8,
                      "mode": "markdown",
                      "span": 3,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Read requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Read latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "seriesOverrides": [
                         {
                            "alias": "instant queries",
                            "color": "#429D48"
                         },
                         {
                            "alias": "range queries",
                            "color": "#F1C731"
                         },
                         {
                            "alias": "\"label names\" queries",
                            "color": "#2A66CF"
                         },
                         {
                            "alias": "\"label values\" queries",
                            "color": "#9E44C1"
                         },
                         {
                            "alias": "series queries",
                            "color": "#FFAB57"
                         },
                         {
                            "alias": "remote read queries",
                            "color": "#C79424"
                         },
                         {
                            "alias": "metadata queries",
                            "color": "#84D586"
                         },
                         {
                            "alias": "exemplar queries",
                            "color": "#A1C4FC"
                         },
                         {
                            "alias": "\"active series\" queries",
                            "color": "#C788DE"
                         }
                      ],
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_query\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "instant queries",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_query_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "range queries",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_labels\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "\"label names\" queries",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_label_name_values\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "\"label values\" queries",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_series\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "series queries",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_read\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "remote read queries",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_metadata\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "metadata queries",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_query_exemplars\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "exemplar queries",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=\"prometheus_api_v1_cardinality_active_series\"}[$__rate_interval])) > 0",
                            "format": "time_series",
                            "legendFormat": "\"active series\" queries",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=\"prometheus_api_v1_cardinality_label_names\"}[$__rate_interval])) > 0",
                            "format": "time_series",
                            "legendFormat": "\"label name cardinality\" queries",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=\"prometheus_api_v1_cardinality_label_values\"}[$__rate_interval])) > 0",
                            "format": "time_series",
                            "legendFormat": "\"label value cardinality\" queries",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_.*\",route!~\".*(query|query_range|label.*|series|read|metadata|query_exemplars|cardinality_.*)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "other",
                            "legendLink": null
                         }
                      ],
                      "title": "Queries / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Reads",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "content": "These panels show an overview on the recording and alerting rules evaluation.\nTo examine the rules evaluation and alerts notifications in detail, see a specific dashboard:\n\n- <a target=\"_blank\" href=\"./d/631e15d5d85afb2ca8e35d62984eeaa0/mimir-ruler?${__url_time_range}&${__all_variables}\">Ruler</a>\n- <a target=\"_blank\" href=\"./d/b0d38d318bbddd80476246d4930f9e55/mimir-alertmanager?${__url_time_range}&${__all_variables}\">Alertmanager</a>\n- <a target=\"_blank\" href=\"./d/a6883fb22799ac74479c7db872451092/mimir-alertmanager-resources?${__url_time_range}&${__all_variables}\">Alertmanager resources</a>\n- <a target=\"_blank\" href=\"./d/a9b92d3c4d1af325d872a9e9a7083d71/mimir-overview-resources?${__url_time_range}&${__all_variables}\">Overview resources</a>\n- <a target=\"_blank\" href=\"./d/e15c71d372cc541367a088f10d9fcd92/mimir-overview-networking?${__url_time_range}&${__all_variables}\">Overview networking</a>\n",
                      "datasource": null,
                      "description": "",
                      "id": 12,
                      "mode": "markdown",
                      "span": 3,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_evaluations_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "success",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_group_iterations_missed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "missed",
                            "legendLink": null
                         }
                      ],
                      "title": "Rule evaluations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum (rate(cortex_prometheus_rule_evaluation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum (rate(cortex_prometheus_rule_evaluation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "average",
                            "legendLink": null
                         }
                      ],
                      "title": "Rule evaluations latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_prometheus_notifications_sent_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n  -\nsum(rate(cortex_prometheus_notifications_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_prometheus_notifications_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Alerting notifications sent to Alertmanager / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Recording and alerting rules",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "content": "These panels show an overview on the long-term storage (object storage).\nTo examine the storage in detail, see a specific dashboard:\n\n- <a target=\"_blank\" href=\"./d/e1324ee2a434f4158c00a9ee279d3292/mimir-object-store?${__url_time_range}&${__all_variables}\">Object store</a>\n- <a target=\"_blank\" href=\"./d/1b3443aea86db629e6efdb7d05c53823/mimir-compactor?${__url_time_range}&${__all_variables}\">Compactor</a>\n",
                      "datasource": null,
                      "description": "",
                      "id": 16,
                      "mode": "markdown",
                      "span": 3,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))\n-\nsum(rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "seriesOverrides": [
                         {
                            "alias": "attributes",
                            "color": "#429D48"
                         },
                         {
                            "alias": "delete",
                            "color": "#F1C731"
                         },
                         {
                            "alias": "exists",
                            "color": "#2A66CF"
                         },
                         {
                            "alias": "get",
                            "color": "#9E44C1"
                         },
                         {
                            "alias": "get_range",
                            "color": "#FFAB57"
                         },
                         {
                            "alias": "iter",
                            "color": "#C79424"
                         },
                         {
                            "alias": "upload",
                            "color": "#84D586"
                         }
                      ],
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Operations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(max by(user) (max_over_time(cortex_bucket_blocks_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[15m])))",
                            "format": "time_series",
                            "legendFormat": "blocks",
                            "legendLink": null
                         }
                      ],
                      "title": "Total number of blocks in the storage",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Long-term storage (object storage)",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Overview",
          "uid": "ffcd83628d7d4b5a03d1cafd159e6c9c",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-overview.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-queries.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_query_frontend_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_query_frontend_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_query_frontend_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_query_frontend_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Queue duration",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_query_frontend_retries_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_query_frontend_retries_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_query_frontend_retries_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_query_frontend_retries_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Retries",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (cortex_query_frontend_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": "0",
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(user) (cortex_query_frontend_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}) > 0",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length (per user)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Queue duration",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": "0",
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(user) (cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}) > 0",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length (per user)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Intervals per query\nThe average number of split queries (partitioned by time) executed a single input query.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_frontend_split_queries_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])) / sum(rate(cortex_frontend_query_range_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", method=\"split_by_interval_and_results_cache\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "splitting rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Intervals per query",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "# Query the new metric introduced in Mimir 2.10.\n(\n  sum by(request_type) (rate(cortex_frontend_query_result_cache_hits_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval]))\n  /\n  sum by(request_type) (rate(cortex_frontend_query_result_cache_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval]))\n)\n# Otherwise fallback to the previous general-purpose metrics.\nor\n(\n  label_replace(\n    # Query metrics before and after dskit cache refactor.\n    sum (\n      rate(thanos_cache_memcached_hits_total{name=\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])\n      or ignoring(backend)\n      rate(thanos_cache_hits_total{name=\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])\n    )\n    /\n    sum (\n      rate(thanos_cache_memcached_requests_total{name=~\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])\n      or ignoring(backend)\n      rate(thanos_cache_requests_total{name=~\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])\n    ),\n    \"request_type\", \"query_range\", \"\", \"\")\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{request_type}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Query results cache hit ratio",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Query results cache skipped\nThe % of queries whose results could not be cached.\nIt is tracked for each split query when the splitting by interval is enabled.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_frontend_query_result_cache_skipped_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (reason) /\nignoring (reason) group_left sum(rate(cortex_frontend_query_result_cache_attempted_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "{{reason}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Query results cache skipped",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend - query splitting and results cache",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Sharded queries ratio\nThe % of queries that have been successfully rewritten and executed in a shardable way.\nThis panel only takes into account the type of queries that are supported by query sharding (eg. range queries).\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_frontend_query_sharding_rewrites_succeeded_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])) /\nsum(rate(cortex_frontend_query_sharding_rewrites_attempted_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "sharded queries ratio",
                            "legendLink": null
                         }
                      ],
                      "title": "Sharded queries ratio",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Number of sharded queries per query\nThe number of sharded queries that have been executed for a single input query. It only tracks queries that\nhave been successfully rewritten in a shardable way.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_frontend_sharded_queries_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_frontend_sharded_queries_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_frontend_sharded_queries_per_query_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_frontend_sharded_queries_per_query_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Number of sharded queries per query",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend - query sharding",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job:cortex_ingester_queried_series_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"})) * 1",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job:cortex_ingester_queried_series_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"})) * 1",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1 * sum(cluster_job:cortex_ingester_queried_series_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}) / sum(cluster_job:cortex_ingester_queried_series_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Series per query",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job:cortex_ingester_queried_samples_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"})) * 1",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job:cortex_ingester_queried_samples_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"})) * 1",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1 * sum(cluster_job:cortex_ingester_queried_samples_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}) / sum(cluster_job:cortex_ingester_queried_samples_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Samples per query",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job:cortex_ingester_queried_exemplars_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"})) * 1",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job:cortex_ingester_queried_exemplars_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"})) * 1",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1 * sum(cluster_job:cortex_ingester_queried_exemplars_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}) / sum(cluster_job:cortex_ingester_queried_exemplars_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Exemplars per query",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_querier_storegateway_instances_hit_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_querier_storegateway_instances_hit_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_querier_storegateway_instances_hit_per_query_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_querier_storegateway_instances_hit_per_query_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Number of store-gateways hit per query",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_querier_storegateway_refetches_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_querier_storegateway_refetches_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_querier_storegateway_refetches_per_query_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_querier_storegateway_refetches_per_query_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Refetches of missing blocks per query",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Consistency checks failed\nRate of queries that had to run with consistency checks and those checks failed. A failed consistency check means that some of at least one block which had to be queried wasn't present in any of the store-gateways.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Failure Rate"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_querier_blocks_consistency_checks_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval])) / sum(rate(cortex_querier_blocks_consistency_checks_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Failure Rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Consistency checks failed",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Rejected queries\nThe proportion of all queries received by queriers that were rejected for some reason.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (reason) (rate(cortex_querier_queries_rejected_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval])) / ignoring (reason) group_left sum(rate(cortex_querier_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_query(_range)?\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{reason}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Rejected queries",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Querier",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max(cortex_bucket_index_loaded{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"})",
                            "format": "time_series",
                            "legendFormat": "Max",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_bucket_index_loaded{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"})",
                            "format": "time_series",
                            "legendFormat": "Min",
                            "legendLink": null
                         },
                         {
                            "expr": "avg(cortex_bucket_index_loaded{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "legendLink": null
                         }
                      ],
                      "title": "Bucket indexes loaded (per querier)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_bucket_index_loads_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval])) - sum(rate(cortex_bucket_index_load_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_bucket_index_load_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Bucket indexes load / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_bucket_index_load_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_bucket_index_load_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_bucket_index_load_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_bucket_index_load_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Bucket indexes load latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_bucket_store_series_blocks_queried_sum{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "blocks",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks queried / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "binBps"
                         },
                         "overrides": [ ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(data_type) (\n  # Exclude \"chunks refetched\".\n  rate(cortex_bucket_store_series_data_size_fetched_bytes_sum{component=\"store-gateway\", stage!=\"refetched\", cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{data_type}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Data fetched / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "binBps"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(data_type) (\n  # Exclude \"chunks processed\" to only count \"chunks returned\", other than postings and series.\n  rate(cortex_bucket_store_series_data_size_touched_bytes_sum{component=\"store-gateway\", stage!=\"processed\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{data_type}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Data touched / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Store-gateway",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(stage) (rate(cortex_bucket_store_series_request_stage_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n/\nsum by(stage) (rate(cortex_bucket_store_series_request_stage_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "{{stage}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Series request average latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 27,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by(stage, le) (rate(cortex_bucket_store_series_request_stage_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval])))\n",
                            "format": "time_series",
                            "legendFormat": "{{stage}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Series request 99th percentile latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Series batch preloading efficiency\nThis panel shows the % of time reduced by preloading, for Series() requests which have been\nsplit to 2+ batches. If a Series() request is served within a single batch, then preloading\nis not triggered, and thus not counted in this measurement.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 28,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "# Clamping min to 0 because if preloading not useful at all, then the actual value we get is\n# slightly negative because of the small overhead introduced by preloading.\nclamp_min(1 - (\n    sum(rate(cortex_bucket_store_series_batch_preloading_wait_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n    /\n    sum(rate(cortex_bucket_store_series_batch_preloading_load_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n), 0)\n",
                            "format": "time_series",
                            "legendFormat": "% of time reduced by preloading",
                            "legendLink": null
                         }
                      ],
                      "title": "Series batch preloading efficiency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Blocks currently owned\nThis panel shows the number of blocks owned by each store-gateway replica.\nFor each owned block, the store-gateway keeps its index-header on disk, and\neventually loaded in memory (if index-header lazy loading is disabled, or lazy loading\nis enabled and the index-header was loaded).\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 29,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "cortex_bucket_store_blocks_loaded{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks currently owned",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 30,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_bucket_store_block_loads_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval])) - sum(rate(cortex_bucket_store_block_load_failures_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_bucket_store_block_load_failures_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks loaded / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 31,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_bucket_store_block_drops_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval])) - sum(rate(cortex_bucket_store_block_drop_failures_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_bucket_store_block_drop_failures_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks dropped / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 32,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "cortex_bucket_store_indexheader_lazy_load_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"} - cortex_bucket_store_indexheader_lazy_unload_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Lazy loaded index-headers",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 33,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_bucket_store_indexheader_lazy_load_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_bucket_store_indexheader_lazy_load_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_bucket_store_indexheader_lazy_load_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_bucket_store_indexheader_lazy_load_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Index-header lazy load duration",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Index-header lazy load gate latency\nTime spent waiting for a turn to load an index header. This time is not included in \"Index-header lazy load duration.\"\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 34,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_bucket_stores_gate_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",gate=\"index_header\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_bucket_stores_gate_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",gate=\"index_header\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_bucket_stores_gate_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",gate=\"index_header\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_bucket_stores_gate_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",gate=\"index_header\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Index-header lazy load gate latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 35,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_bucket_store_series_hash_cache_hits_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n/\nsum(rate(cortex_bucket_store_series_hash_cache_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "hit ratio",
                            "legendLink": null
                         }
                      ],
                      "title": "Series hash cache hit ratio",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 36,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(thanos_store_index_cache_hits_total{item_type=\"ExpandedPostings\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n/\nsum(rate(thanos_store_index_cache_requests_total{item_type=\"ExpandedPostings\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "hit ratio",
                            "legendLink": null
                         }
                      ],
                      "title": "ExpandedPostings cache hit ratio",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 37,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_cache_memory_hits_total{name=\"chunks-attributes-cache\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n/\nsum(rate(cortex_cache_memory_requests_total{name=\"chunks-attributes-cache\",cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "hit ratio",
                            "legendLink": null
                         }
                      ],
                      "title": "Chunks attributes in-memory cache hit ratio",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Queries",
          "uid": "b3abe8d5c040395cc36615cb4334c92d",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-queries.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-reads-networking.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Summary",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-frontend|mimir-read).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-frontend|mimir-read).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-frontend|mimir-read).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-frontend|mimir-read).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-frontend|mimir-read).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-frontend|mimir-read).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-frontend|mimir-read).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-scheduler|mimir-backend).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-scheduler|mimir-backend).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-scheduler|mimir-backend).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-scheduler|mimir-backend).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-scheduler|mimir-backend).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-scheduler|mimir-backend).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|query-scheduler|mimir-backend).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|querier|mimir-read).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|querier|mimir-read).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|querier|mimir-read).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|querier|mimir-read).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|querier|mimir-read).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|querier|mimir-read).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|querier|mimir-read).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Querier",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|store-gateway|mimir-backend).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|store-gateway|mimir-backend).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|store-gateway|mimir-backend).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|store-gateway|mimir-backend).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|store-gateway|mimir-backend).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|store-gateway|mimir-backend).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|store-gateway|mimir-backend).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Store-gateway",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ruler|mimir-backend).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ruler|mimir-backend).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ruler|mimir-backend).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ruler|mimir-backend).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ruler|mimir-backend).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ruler|mimir-backend).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ruler|mimir-backend).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Reads networking",
          "uid": "54b2a0a4748b3bd1aefa92ce5559a1c2",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-reads-networking.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-reads-resources.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-read|query-frontend|querier|ruler-query-frontend|ruler-querier)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Summary",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-frontend|mimir-read)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-frontend|mimir-read)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-frontend|mimir-read)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-frontend|mimir-read)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-frontend|mimir-read)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-frontend|mimir-read)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-frontend|mimir-read)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-frontend|mimir-read)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-scheduler|mimir-backend)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-scheduler|mimir-backend)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-scheduler|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-scheduler|mimir-backend)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-scheduler|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-scheduler|mimir-backend)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-scheduler|mimir-backend)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|query-scheduler|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|querier|mimir-read)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|querier|mimir-read)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|querier|mimir-read)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|querier|mimir-read)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|querier|mimir-read)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|querier|mimir-read)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|querier|mimir-read)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|querier|mimir-read)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Querier",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_rss{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (RSS)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Rules",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler|mimir-backend)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler|mimir-backend)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler|mimir-backend)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler|mimir-backend)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler|mimir-backend)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|store-gateway|mimir-backend)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|store-gateway|mimir-backend)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|store-gateway|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|store-gateway|mimir-backend)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|store-gateway|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Store-gateway",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_rss{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|store-gateway|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|store-gateway|mimir-backend)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|store-gateway|mimir-backend)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (RSS)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|store-gateway|mimir-backend)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|store-gateway|mimir-backend)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|store-gateway|mimir-backend)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_written_bytes_total[$__rate_interval]\n  )\n)\n+\nignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"(mimir|store-gateway|mimir-backend)\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk writes",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_read_bytes_total[$__rate_interval]\n  )\n) + ignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"(mimir|store-gateway|mimir-backend)\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk reads",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 27,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(persistentvolumeclaim) (\n  kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} /\n  kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\nand\ncount by(persistentvolumeclaim) (\n  kube_persistentvolumeclaim_labels{\n    cluster=~\"$cluster\", namespace=~\"$namespace\",\n    label_name=~\"((mimir|store-gateway|mimir-backend)).*\"\n  }\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{persistentvolumeclaim}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk space utilization",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Reads resources",
          "uid": "cc86fd5aa9301c6528986572ad974db9",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-reads-resources.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-reads.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "175px",
                "panels": [
                   {
                      "content": "<p>\n  This dashboard shows health metrics for the read path.\n  It is broken into sections for each service on the read path, and organized by the order in which the read request flows.\n  <br/>\n  Incoming queries travel from the gateway → query frontend → query scheduler → querier → ingester and/or store-gateway (depending on the time range of the query).\n  <br/>\n  For each service, there are 3 panels showing (1) requests per second to that service, (2) average, median, and p99 latency of requests to that service, and (3) p99 latency of requests to each instance of that service.\n</p>\n<p>\n  The dashboard also shows metrics for the 4 optional caches that can be deployed:\n  the query results cache, the metadata cache, the chunks cache, and the index cache.\n  <br/>\n  These panels will show “no data” if the caches are not deployed.\n</p>\n<p>\n  Lastly, it also includes metrics for how the ingester and store-gateway interact with object storage.\n</p>\n",
                      "datasource": null,
                      "description": "",
                      "id": 1,
                      "mode": "markdown",
                      "span": 12,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Reads dashboard description",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "100px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Instant queries per second\nRate of instant queries per second being made to the system.\nIncludes both queries made to the <tt>/prometheus</tt> API as\nwell as queries from the ruler.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(\n  rate(\n    cortex_request_duration_seconds_count{\n      cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",\n      route=~\"(prometheus|api_prom)_api_v1_query\"\n    }[$__rate_interval]\n  )\n  or\n  rate(\n    cortex_prometheus_rule_evaluations_total{\n      cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n)\n",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Instant queries / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Range queries per second\nRate of range queries per second being made to\nMimir via the <tt>/prometheus</tt> API.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_query_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Range queries / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### \"Label names\" queries per second\nRate of \"label names\" endpoint queries per second being made to\nMimir via the <tt>/prometheus</tt> API.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 4,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_labels\"}[$__rate_interval]))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Label names queries / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### \"Label values\" queries per second\nRate of specific \"label values\" endpoint queries per second being made to\nMimir via the <tt>/prometheus</tt> API.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 5,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_label_name_values\"}[$__rate_interval]))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Label values queries / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Series queries per second\nRate of series queries per second being made to\nMimir via the <tt>/prometheus</tt> API.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 6,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_series\"}[$__rate_interval]))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Series queries / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Headlines",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Requests / sec\n<p>\n  The query scheduler is an optional service that moves\n  the internal queue from the query-frontend into a\n  separate component.\n  If this service is not deployed,\n  these panels will show \"No data.\"\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Latency (Time in Queue)\n<p>\n  The query scheduler is an optional service that moves\n  the internal queue from the query-frontend into a\n  separate component.\n  If this service is not deployed,\n  these panels will show \"No data.\"\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency (Time in Queue)",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Queue length\n<p>\n  The query scheduler is an optional service that moves\n  the internal queue from the query-frontend into a\n  separate component.\n  If this service is not deployed,\n  these panels will show \"No data.\"\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "queries"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "sum(min_over_time(cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__interval]))",
                            "format": "time_series",
                            "legendFormat": "Queue length",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### 99th Percentile Latency by Queue Dimension\n<p>\n  The query scheduler can optionally create subqueues\n  in order to enforce round-robin query queuing fairness\n  across additional queue dimensions beyond the default.\n\n  By default, query queuing fairness is only applied by tenant ID.\n  Queries without additional queue dimensions are labeled 'none'.\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "label_replace(histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le, additional_queue_dimensions)) * 1e3, \"additional_queue_dimensions\", \"none\", \"additional_queue_dimensions\", \"^$\")\n",
                            "format": "time_series",
                            "legendFormat": "99th Percentile: {{ additional_queue_dimensions }}",
                            "refId": "A"
                         }
                      ],
                      "title": "99th Percentile Latency by Queue Dimension",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### 50th Percentile Latency by Queue Dimension\n<p>\n  The query scheduler can optionally create subqueues\n  in order to enforce round-robin query queuing fairness\n  across additional queue dimensions beyond the default.\n\n  By default, query queuing fairness is only applied by tenant ID.\n  Queries without additional queue dimensions are labeled 'none'.\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "label_replace(histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le, additional_queue_dimensions)) * 1e3, \"additional_queue_dimensions\", \"none\", \"additional_queue_dimensions\", \"^$\")\n",
                            "format": "time_series",
                            "legendFormat": "50th Percentile: {{ additional_queue_dimensions }}",
                            "refId": "A"
                         }
                      ],
                      "title": "50th Percentile Latency by Queue Dimension",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Average Latency by Queue Dimension\n<p>\n  The query scheduler can optionally create subqueues\n  in order to enforce round-robin query queuing fairness\n  across additional queue dimensions beyond the default.\n\n  By default, query queuing fairness is only applied by tenant ID.\n  Queries without additional queue dimensions are labeled 'none'.\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "label_replace(sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (additional_queue_dimensions) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (additional_queue_dimensions), \"additional_queue_dimensions\", \"none\", \"additional_queue_dimensions\", \"^$\")\n",
                            "format": "time_series",
                            "legendFormat": "Average: {{ additional_queue_dimensions }}",
                            "refId": "C"
                         }
                      ],
                      "title": "Average Latency by Queue Dimension",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler Latency (Time in Queue) Breakout by Additional Queue Dimensions",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum (\n  rate(thanos_memcached_operations_total{name=\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])\n  or ignoring(backend)\n  rate(thanos_cache_operations_total{name=\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\"}[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "Requests/s",
                            "legendLink": null
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n) * 1e3\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Cache – query results",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_querier_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_querier_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_querier_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_querier_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}) / sum(cluster_job_route:cortex_querier_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_querier_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Querier",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\",route=~\"/cortex.Ingester/Query(Stream)?|/cortex.Ingester/MetricsForLabelMatchers|/cortex.Ingester/LabelValues|/cortex.Ingester/MetricsMetadata\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", route=~\"/cortex.Ingester/Query(Stream)?|/cortex.Ingester/MetricsForLabelMatchers|/cortex.Ingester/LabelValues|/cortex.Ingester/MetricsMetadata\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", route=~\"/cortex.Ingester/Query(Stream)?|/cortex.Ingester/MetricsForLabelMatchers|/cortex.Ingester/LabelValues|/cortex.Ingester/MetricsMetadata\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", route=~\"/cortex.Ingester/Query(Stream)?|/cortex.Ingester/MetricsForLabelMatchers|/cortex.Ingester/LabelValues|/cortex.Ingester/MetricsMetadata\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", route=~\"/cortex.Ingester/Query(Stream)?|/cortex.Ingester/MetricsForLabelMatchers|/cortex.Ingester/LabelValues|/cortex.Ingester/MetricsMetadata\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", route=~\"/cortex.Ingester/Query(Stream)?|/cortex.Ingester/MetricsForLabelMatchers|/cortex.Ingester/LabelValues|/cortex.Ingester/MetricsMetadata\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",route=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Store-gateway",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 27,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 28,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Store-gateway – key-value store for store-gateways ring",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 29,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(operation) (\n  # Backwards compatibility\n  rate(\n    thanos_memcached_operations_total{\n      component=\"store-gateway\",\n      name=\"index-cache\",\n      cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n  or ignoring(backend)\n  rate(\n    thanos_cache_operations_total{\n      component=\"store-gateway\",\n      name=\"index-cache\",\n      cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 30,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n) * 1e3\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency (getmulti)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Hit ratio\nEven if you do not set up memcached for the blocks index cache, you will still see data in this panel because the store-gateway by default has an\nin-memory blocks index cache.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 31,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(item_type) (\n  rate(\n    thanos_store_index_cache_hits_total{\n      component=\"store-gateway\",\n      cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n)\n/\nsum by(item_type) (\n  rate(\n    thanos_store_index_cache_requests_total{\n      component=\"store-gateway\",\n      cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{item_type}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Hit ratio",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Memcached – block index cache (store-gateway accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 32,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(operation) (\n  # Backwards compatibility\n  rate(thanos_memcached_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n  or ignoring(backend)\n  rate(thanos_cache_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 33,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n) * 1e3\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency (getmulti)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 34,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_cache_memcached_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n  or\n  rate(thanos_cache_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n)\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_cache_memcached_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n  or\n  rate(thanos_cache_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "items",
                            "legendLink": null
                         }
                      ],
                      "title": "Hit ratio",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Memcached – chunks cache (store-gateway accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 35,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(operation) (\n  # Backwards compatibility\n  rate(thanos_memcached_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n  or ignoring(backend)\n  rate(thanos_cache_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 36,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n) * 1e3\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency (getmulti)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 37,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_cache_memcached_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n  or\n  rate(thanos_cache_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_cache_memcached_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n  or\n  rate(thanos_cache_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|store-gateway.*|cortex|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "items",
                            "legendLink": null
                         }
                      ],
                      "title": "Hit ratio",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Memcached – metadata cache (store-gateway accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 38,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(operation) (\n  # Backwards compatibility\n  rate(thanos_memcached_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n  or ignoring(backend)\n  rate(thanos_cache_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 39,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n) * 1e3\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency (getmulti)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 40,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_cache_memcached_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n  or\n  rate(thanos_cache_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_cache_memcached_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n  or\n  rate(thanos_cache_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((mimir|querier.*|cortex|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "items",
                            "legendLink": null
                         }
                      ],
                      "title": "Hit ratio",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Memcached – metadata cache (querier accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 41,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Operations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 42,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 43,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"attributes\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Attributes",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 44,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"exists\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Exists",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Blocks object store (store-gateway accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 45,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Get",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 46,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: GetRange",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 47,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Upload",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 48,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"delete\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Delete",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 49,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Operations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 50,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 51,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"attributes\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Attributes",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 52,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"exists\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Exists",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Blocks object store (querier accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 53,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Get",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 54,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: GetRange",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 55,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Upload",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 56,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"delete\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Delete",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Reads",
          "uid": "e327503188913dc38ad571c647eef643",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-reads.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-remote-ruler-reads-resources.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-frontend)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-frontend)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-frontend)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-frontend)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-frontend)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-frontend)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-frontend)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-frontend)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend (dedicated to ruler)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-scheduler)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-scheduler)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-scheduler)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-scheduler)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-scheduler)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-scheduler)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-scheduler)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-query-scheduler)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler (dedicated to ruler)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-querier)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-querier)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-querier)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-querier)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-querier)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-querier)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-querier)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ruler-querier)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Querier (dedicated to ruler)",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Remote ruler reads resources",
          "uid": "1940f6ef765a506a171faa2056c956c3",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-remote-ruler-reads-resources.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-remote-ruler-reads.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "175px",
                "panels": [
                   {
                      "content": "<p>\n  This dashboard shows health metrics for the ruler read path when remote operational mode is enabled.\n  It is broken into sections for each service on the ruler read path, and organized by the order in which the read request flows.\n  <br/>\n  For each service, there are three panels showing (1) requests per second to that service, (2) average, median, and p99 latency of requests to that service, and (3) p99 latency of requests to each instance of that service.\n</p>\n",
                      "datasource": null,
                      "description": "",
                      "id": 1,
                      "mode": "markdown",
                      "span": 12,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Remote ruler reads dashboard description",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "100px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Evaluations per second\nRate of rule expressions evaluated per second.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(\n  rate(\n    cortex_request_duration_seconds_count{\n      cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-frontend.*))\",\n      route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"\n    }[$__rate_interval]\n  )\n)\n",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Evaluations / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Headlines",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-frontend.*))\", route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-frontend.*))\", route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-frontend.*))\", route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-frontend.*))\", route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-frontend.*))\", route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-frontend.*))\", route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend (dedicated to ruler)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Requests / sec\n<p>\n  The query scheduler is an optional service that moves\n  the internal queue from the query-frontend into a\n  separate component.\n  If this service is not deployed,\n  these panels will show \"No data.\"\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-scheduler.*))\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Latency (Time in Queue)\n<p>\n  The query scheduler is an optional service that moves\n  the internal queue from the query-frontend into a\n  separate component.\n  If this service is not deployed,\n  these panels will show \"No data.\"\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-scheduler.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-scheduler.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-scheduler.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-scheduler.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency (Time in Queue)",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Queue length\n<p>\n  The query scheduler is an optional service that moves\n  the internal queue from the query-frontend into a\n  separate component.\n  If this service is not deployed,\n  these panels will show \"No data.\"\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "queries"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "sum(min_over_time(cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-scheduler.*))\"}[$__interval]))",
                            "format": "time_series",
                            "legendFormat": "Queue length",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler (dedicated to ruler)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### 99th Percentile Latency by Queue Dimension\n<p>\n  The query scheduler can optionally create subqueues\n  in order to enforce round-robin query queuing fairness\n  across additional queue dimensions beyond the default.\n\n  By default, query queuing fairness is only applied by tenant ID.\n  Queries without additional queue dimensions are labeled 'none'.\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "label_replace(histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-scheduler.*))\"}[$__rate_interval])) by (le, additional_queue_dimensions)) * 1e3, \"additional_queue_dimensions\", \"none\", \"additional_queue_dimensions\", \"^$\")\n",
                            "format": "time_series",
                            "legendFormat": "99th Percentile: {{ additional_queue_dimensions }}",
                            "refId": "A"
                         }
                      ],
                      "title": "99th Percentile Latency by Queue Dimension",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### 50th Percentile Latency by Queue Dimension\n<p>\n  The query scheduler can optionally create subqueues\n  in order to enforce round-robin query queuing fairness\n  across additional queue dimensions beyond the default.\n\n  By default, query queuing fairness is only applied by tenant ID.\n  Queries without additional queue dimensions are labeled 'none'.\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "label_replace(histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-scheduler.*))\"}[$__rate_interval])) by (le, additional_queue_dimensions)) * 1e3, \"additional_queue_dimensions\", \"none\", \"additional_queue_dimensions\", \"^$\")\n",
                            "format": "time_series",
                            "legendFormat": "50th Percentile: {{ additional_queue_dimensions }}",
                            "refId": "A"
                         }
                      ],
                      "title": "50th Percentile Latency by Queue Dimension",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Average Latency by Queue Dimension\n<p>\n  The query scheduler can optionally create subqueues\n  in order to enforce round-robin query queuing fairness\n  across additional queue dimensions beyond the default.\n\n  By default, query queuing fairness is only applied by tenant ID.\n  Queries without additional queue dimensions are labeled 'none'.\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "label_replace(sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-scheduler.*))\"}[$__rate_interval])) by (additional_queue_dimensions) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-scheduler.*))\"}[$__rate_interval])) by (additional_queue_dimensions), \"additional_queue_dimensions\", \"none\", \"additional_queue_dimensions\", \"^$\")\n",
                            "format": "time_series",
                            "legendFormat": "Average: {{ additional_queue_dimensions }}",
                            "refId": "C"
                         }
                      ],
                      "title": "Average Latency by Queue Dimension",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler Latency (Time in Queue) Breakout by Additional Queue Dimensions",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_querier_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-querier.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_querier_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-querier.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_querier_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-querier.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_querier_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-querier.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}) / sum(cluster_job_route:cortex_querier_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-querier.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_querier_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-querier.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Querier (dedicated to ruler)",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Remote ruler reads",
          "uid": "f103238f7f5ab2f1345ce650cbfbfe2f",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-remote-ruler-reads.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-rollout-progress.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "custom": {
                         "axisCenteredZero": false,
                         "axisColorMode": "text",
                         "axisLabel": "",
                         "axisPlacement": "auto",
                         "fillOpacity": 80,
                         "gradientMode": "none",
                         "hideFrom": {
                            "legend": false,
                            "tooltip": false,
                            "viz": false
                         },
                         "lineWidth": 1,
                         "scaleDistribution": {
                            "type": "linear"
                         },
                         "thresholdsStyle": {
                            "mode": "off"
                         }
                      },
                      "mappings": [ ],
                      "max": 1,
                      "min": 0,
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [ ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Ready"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "green",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Updated"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "blue",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 13,
                   "w": 10,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "links": [ ],
                "options": {
                   "barRadius": 0,
                   "barWidth": 0.96999999999999997,
                   "fullHighlight": false,
                   "groupWidth": 0.69999999999999996,
                   "legend": {
                      "calcs": [ ],
                      "displayMode": "list",
                      "placement": "bottom",
                      "showLegend": true
                   },
                   "orientation": "horizontal",
                   "showValue": "auto",
                   "stacking": "none",
                   "tooltip": {
                      "mode": "multi",
                      "sort": "none"
                   },
                   "xField": "Workload",
                   "xTickLabelRotation": 0,
                   "xTickLabelSpacing": 0
                },
                "targets": [
                   {
                      "expr": "(\n  sum by (workload) (\n    label_replace(label_replace(label_replace(\n      kube_deployment_status_replicas_updated{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n      or\n      kube_statefulset_status_replicas_updated{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    , \"workload\", \"$1\", \"deployment\", \"(.+)\"), \"workload\", \"$1\", \"statefulset\", \"(.+)\"), \"workload\", \"$1\", \"workload\", \"(.*?)(?:-zone-[a-z])?\")\n  )\n  /\n  sum by (workload) (\n    label_replace(label_replace(label_replace(\n      kube_deployment_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n      or\n      kube_statefulset_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    , \"workload\", \"$1\", \"deployment\", \"(.+)\"), \"workload\", \"$1\", \"statefulset\", \"(.+)\"), \"workload\", \"$1\", \"workload\", \"(.*?)(?:-zone-[a-z])?\")\n  )\n) and (\n  sum by (workload) (\n    label_replace(label_replace(label_replace(\n      kube_deployment_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n      or\n      kube_statefulset_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    , \"workload\", \"$1\", \"deployment\", \"(.+)\"), \"workload\", \"$1\", \"statefulset\", \"(.+)\"), \"workload\", \"$1\", \"workload\", \"(.*?)(?:-zone-[a-z])?\")\n  )\n  > 0\n)\n",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": null,
                      "legendFormat": "__auto",
                      "legendLink": null,
                      "step": null
                   },
                   {
                      "expr": "(\n  sum by (workload) (\n    label_replace(label_replace(label_replace(\n      kube_deployment_status_replicas_ready{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n      or\n      kube_statefulset_status_replicas_ready{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    , \"workload\", \"$1\", \"deployment\", \"(.+)\"), \"workload\", \"$1\", \"statefulset\", \"(.+)\"), \"workload\", \"$1\", \"workload\", \"(.*?)(?:-zone-[a-z])?\")\n  )\n  /\n  sum by (workload) (\n    label_replace(label_replace(label_replace(\n      kube_deployment_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n      or\n      kube_statefulset_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    , \"workload\", \"$1\", \"deployment\", \"(.+)\"), \"workload\", \"$1\", \"statefulset\", \"(.+)\"), \"workload\", \"$1\", \"workload\", \"(.*?)(?:-zone-[a-z])?\")\n  )\n) and (\n  sum by (workload) (\n    label_replace(label_replace(label_replace(\n      kube_deployment_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n      or\n      kube_statefulset_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    , \"workload\", \"$1\", \"deployment\", \"(.+)\"), \"workload\", \"$1\", \"statefulset\", \"(.+)\"), \"workload\", \"$1\", \"workload\", \"(.*?)(?:-zone-[a-z])?\")\n  )\n  > 0\n)\n",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": null,
                      "legendFormat": "__auto",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "title": "Rollout progress",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "workload",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time 1": true,
                            "Time 2": true
                         },
                         "renameByName": {
                            "Value #A": "Updated",
                            "Value #B": "Ready",
                            "workload": "Workload"
                         }
                      }
                   },
                   {
                      "id": "sortBy",
                      "options": {
                         "sort": [
                            {
                               "field": "Workload"
                            }
                         ]
                      }
                   }
                ],
                "type": "barchart"
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            }
                         ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 2,
                   "x": 10,
                   "y": 0
                },
                "id": 2,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\",status_code=~\"2.+\"}[$__rate_interval])) /\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Writes - 2xx",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "orange",
                               "value": 0.20000000000000001
                            },
                            {
                               "color": "red",
                               "value": 0.5
                            }
                         ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 2,
                   "x": 12,
                   "y": 0
                },
                "id": 3,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\",status_code=~\"4.+\"}[$__rate_interval])) /\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Writes - 4xx",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "red",
                               "value": 0.01
                            }
                         ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 2,
                   "x": 14,
                   "y": 0
                },
                "id": 4,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\",status_code=~\"5.+\"}[$__rate_interval])) /\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Writes - 5xx",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "orange",
                               "value": 0.20000000000000001
                            },
                            {
                               "color": "red",
                               "value": 0.5
                            }
                         ]
                      },
                      "unit": "s"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 8,
                   "x": 16,
                   "y": 0
                },
                "id": 5,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\"}))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Writes 99th latency",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            }
                         ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 2,
                   "x": 10,
                   "y": 4
                },
                "id": 6,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\",status_code=~\"2.+\"}[$__rate_interval])) /\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Reads - 2xx",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "orange",
                               "value": 0.01
                            },
                            {
                               "color": "red",
                               "value": 0.050000000000000003
                            }
                         ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 2,
                   "x": 12,
                   "y": 4
                },
                "id": 7,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\",status_code=~\"4.+\"}[$__rate_interval])) /\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Reads - 4xx",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "red",
                               "value": 0.01
                            }
                         ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 2,
                   "x": 14,
                   "y": 4
                },
                "id": 8,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\",status_code=~\"5.+\"}[$__rate_interval])) /\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Reads - 5xx",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "orange",
                               "value": 1
                            },
                            {
                               "color": "red",
                               "value": 2.5
                            }
                         ]
                      },
                      "unit": "s"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 8,
                   "x": 16,
                   "y": 4
                },
                "id": 9,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Reads 99th latency",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 0,
                      "noValue": "All healthy",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "orange",
                               "value": 1
                            },
                            {
                               "color": "red",
                               "value": 2
                            }
                         ]
                      },
                      "unit": "short"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 3,
                   "w": 10,
                   "x": 0,
                   "y": 13
                },
                "id": 10,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "options": {
                   "text": {
                      "titleSize": 14,
                      "valueSize": 14
                   },
                   "textMode": "value_and_name"
                },
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "kube_deployment_status_replicas_unavailable{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n> 0\n",
                      "format": null,
                      "instant": true,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "{{deployment}}",
                      "legendLink": null,
                      "step": null
                   },
                   {
                      "expr": "kube_statefulset_status_replicas_current{cluster=~\"$cluster\", namespace=~\"$namespace\"} -\nkube_statefulset_status_replicas_ready {cluster=~\"$cluster\", namespace=~\"$namespace\"}\n> 0\n",
                      "format": null,
                      "instant": true,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "{{statefulset}}",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Unhealthy pods",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "datasource": "$datasource",
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "r.*"
                         },
                         "properties": [
                            {
                               "id": "custom.align",
                               "value": "center"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 8,
                   "w": 6,
                   "x": 10,
                   "y": 8
                },
                "id": 11,
                "targets": [
                   {
                      "expr": "count by(container, version) (\n  label_replace(\n    kube_pod_container_info{cluster=~\"$cluster\", namespace=~\"$namespace\"},\n    \"version\", \"$1\", \"image\", \".*:(.*)\"\n  )\n)\n",
                      "instant": true,
                      "legendFormat": "",
                      "refId": "A"
                   }
                ],
                "title": "Pods count per version",
                "transformations": [
                   {
                      "id": "labelsToFields",
                      "options": {
                         "valueLabel": "version"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true
                         },
                         "indexByName": {
                            "Time": 0,
                            "container": 1
                         }
                      }
                   },
                   {
                      "id": "sortBy",
                      "options": {
                         "fields": { },
                         "sort": [
                            {
                               "field": "container"
                            }
                         ]
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10
                      },
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 8,
                   "w": 8,
                   "x": 16,
                   "y": 8
                },
                "id": 12,
                "links": [ ],
                "options": {
                   "legend": {
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single",
                      "sort": "none"
                   }
                },
                "targets": [
                   {
                      "expr": "1 - (\n  avg_over_time(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\"} offset 24h))[1h:])\n  /\n  avg_over_time(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\"}))[1h:])\n)\n",
                      "format": "time_series",
                      "legendFormat": "writes",
                      "legendLink": null
                   },
                   {
                      "expr": "1 - (\n  avg_over_time(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"} offset 24h))[1h:])\n  /\n  avg_over_time(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}))[1h:])\n)\n",
                      "format": "time_series",
                      "legendFormat": "reads",
                      "legendLink": null
                   }
                ],
                "title": "Latency vs 24h ago",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "rows": null,
          "schemaVersion": 27,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Rollout progress",
          "uid": "7f0b5567d543a1698e695b530eb7f5de",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-rollout-progress.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-ruler.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "100px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 1,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 3,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cortex_ruler_managers_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Active configurations",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 3,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Total rules",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Read from ingesters - QPS\nNote: Even while operating in Remote ruler mode you will still see values for this panel.\n\nThis is because the metrics are inclusive of intermediate services and are showing the requests that ultimately reach the ingesters.\n\nFor a more detailed view of the read path when using remote ruler mode, see the Remote ruler reads dashboard.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 3,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*|mimir|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval]))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Read from ingesters - QPS",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "reqps",
                      "id": 4,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 3,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval]))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Write to ingesters - QPS",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Headlines",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_evaluations_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "success",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_group_iterations_missed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "missed",
                            "legendLink": null
                         }
                      ],
                      "title": "Evaluations per second",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum (rate(cortex_prometheus_rule_evaluation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum (rate(cortex_prometheus_rule_evaluation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "average",
                            "legendLink": null
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Rule evaluations global",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "QPS",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Writes (ingesters)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*|mimir|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "QPS",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*|mimir|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*|mimir|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*|mimir|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*|mimir|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Reads (ingesters)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler - key-value store for rulers ring",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_querier_storegateway_instances_hit_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_querier_storegateway_instances_hit_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_querier_storegateway_instances_hit_per_query_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_querier_storegateway_instances_hit_per_query_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Number of store-gateways hit per query",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_querier_storegateway_refetches_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_querier_storegateway_refetches_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_querier_storegateway_refetches_per_query_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_querier_storegateway_refetches_per_query_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Refetches of missing blocks per query",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Consistency checks failed\nRate of queries that had to run with consistency checks and those checks failed. A failed consistency check means that some of at least one block which had to be queried wasn't present in any of the store-gateways.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Failures / sec"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_querier_blocks_consistency_checks_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])) / sum(rate(cortex_querier_blocks_consistency_checks_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Failures / sec",
                            "legendLink": null
                         }
                      ],
                      "title": "Consistency checks failed",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler - blocks storage",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(user) (rate(cortex_prometheus_notifications_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum by(user) (rate(cortex_prometheus_notifications_sent_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]) > 0)\n> 0\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Delivery errors",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(user) (rate(cortex_prometheus_notifications_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum by(user) (rate(cortex_prometheus_notifications_queue_capacity{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])) > 0\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (user) (increase(cortex_prometheus_notifications_dropped_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])) > 0\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Dropped",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Notifications",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(user) (rate(cortex_prometheus_rule_group_iterations_missed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])) > 0",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Missed iterations",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "rate(cortex_prometheus_rule_group_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])\n  /\nrate(cortex_prometheus_rule_group_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(rule_group) (rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval])) > 0",
                            "format": "time_series",
                            "legendFormat": "{{ rule_group }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Failures",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Group evaluations",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "sum by(user) (rate(cortex_prometheus_rule_evaluation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum by(user) (rate(cortex_prometheus_rule_evaluation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Rule evaluation per user",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Operations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"attributes\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Attributes",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"exists\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Exists",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler configuration object store (ruler accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 27,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Get",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 28,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: GetRange",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 29,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Upload",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 30,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"delete\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Delete",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Ruler",
          "uid": "631e15d5d85afb2ca8e35d62984eeaa0",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-ruler.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-scaling.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "200px",
                "panels": [
                   {
                      "id": 1,
                      "options": {
                         "content": "This dashboard identifies scaling-related issues by suggesting services that you might want to scale up.\nThe table that follows contains a suggested number of replicas and the reason why.\nIf the system is failing and depending on the reason, try scaling up to the specified number.\nThe specified numbers are intended as helpful guidelines when things go wrong, rather than prescriptive guidelines.\n\nReasons:\n- **sample_rate**: There are not enough replicas to handle the\n  sample rate.  Applies to distributor and ingesters.\n- **active_series**: There are not enough replicas\n  to handle the number of active series.  Applies to ingesters.\n- **cpu_usage**: There are not enough replicas\n  based on the CPU usage of the jobs vs the resource requests.\n  Applies to all jobs.\n- **memory_usage**: There are not enough replicas based on the memory\n  usage vs the resource requests.  Applies to all jobs.\n- **active_series_limits**: There are not enough replicas to hold 60% of the\n  sum of all the per tenant series limits.\n- **sample_rate_limits**: There are not enough replicas to handle 60% of the\n  sum of all the per tenant rate limits.\n",
                         "mode": "markdown"
                      },
                      "span": 12,
                      "title": "",
                      "type": "text"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Service scaling",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "400px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 0,
                         "desc": false
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "Required Replicas",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 0,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "Cluster",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "__name__",
                            "thresholds": [ ],
                            "type": "hidden",
                            "unit": "short"
                         },
                         {
                            "alias": "Cluster",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "cluster",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "Service",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "deployment",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "Namespace",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "namespace",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "Reason",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "reason",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "sort_desc(\n  cluster_namespace_deployment_reason:required_replicas:count{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    > ignoring(reason) group_left\n  cluster_namespace_deployment:actual_replicas:count{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Workload-based scaling",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Scaling",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Scaling",
          "uid": "64bbad83507b7289b514725658e10352",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-scaling.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-slow-queries.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(response_time) [$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p99",
                            "legendLink": null
                         },
                         {
                            "expr": "quantile_over_time(0.5, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(response_time) [$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p50",
                            "legendLink": null
                         }
                      ],
                      "title": "Response time",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_series_count[$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p99",
                            "legendLink": null
                         },
                         {
                            "expr": "quantile_over_time(0.5, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_series_count[$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p50",
                            "legendLink": null
                         }
                      ],
                      "title": "Fetched series",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_chunk_bytes[$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p99",
                            "legendLink": null
                         },
                         {
                            "expr": "quantile_over_time(0.5, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_chunk_bytes[$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p50",
                            "legendLink": null
                         }
                      ],
                      "title": "Fetched chunks",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap response_size_bytes[$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p99",
                            "legendLink": null
                         },
                         {
                            "expr": "quantile_over_time(0.5, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap response_size_bytes[$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p50",
                            "legendLink": null
                         }
                      ],
                      "title": "Response size",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(length) [$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p99",
                            "legendLink": null
                         },
                         {
                            "expr": "quantile_over_time(0.5, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(length) [$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p50",
                            "legendLink": null
                         }
                      ],
                      "title": "Time span",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "description": "### Query wall time\nSeconds per second spent by queriers evaluating queries.\nThis is roughly the product of the number of subqueries for a query and how long they took.\nIn increase in this metric means that queries take more resources from the query path to evaluate.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap query_wall_time_seconds [$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p99",
                            "legendLink": null
                         },
                         {
                            "expr": "quantile_over_time(0.5, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap query_wall_time_seconds [$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p50",
                            "legendLink": null
                         }
                      ],
                      "title": "Query wall time",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Accross tenants",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(response_time) [$__auto]) by (user))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 response time",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_series_count[$__auto]) by (user))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 fetched series",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_chunk_bytes[$__auto]) by (user))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 fetched chunks",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap response_size_bytes[$__auto]) by (user))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 response size",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(length) [$__auto]) by (user))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 time span",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "description": "### Query wall time\nSeconds per second spent by queriers evaluating queries.\nThis is roughly the product of the number of subqueries for a query and how long they took.\nIn increase in this metric means that queries take more resources from the query path to evaluate.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap query_wall_time_seconds [$__auto]) by (user))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 query wall time",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Top 10 tenants",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(response_time) [$__auto]) by (user_agent))",
                            "format": "time_series",
                            "legendFormat": "{{user_agent}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 response time",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_series_count[$__auto]) by (user_agent))",
                            "format": "time_series",
                            "legendFormat": "{{user_agent}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 fetched series",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_chunk_bytes[$__auto]) by (user_agent))",
                            "format": "time_series",
                            "legendFormat": "{{user_agent}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 fetched chunks",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap response_size_bytes[$__auto]) by (user_agent))",
                            "format": "time_series",
                            "legendFormat": "{{user_agent}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 response size",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(length) [$__auto]) by (user_agent))",
                            "format": "time_series",
                            "legendFormat": "{{user_agent}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 time span",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "description": "### Query wall time\nSeconds per second spent by queriers evaluating queries.\nThis is roughly the product of the number of subqueries for a query and how long they took.\nIn increase in this metric means that queries take more resources from the query path to evaluate.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap query_wall_time_seconds [$__auto]) by (user_agent))",
                            "format": "time_series",
                            "legendFormat": "{{user_agent}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 query wall time",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Top 10 User-Agents",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "fetched_chunk_bytes"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "bytes"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "fetched_index_bytes"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "bytes"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "response_size_bytes"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "bytes"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "results_cache_hit_bytes"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "bytes"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "results_cache_miss_bytes"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "bytes"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "estimated_series_count"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "short"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "fetched_chunks_count"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "short"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "fetched_series_count"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "short"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Time span"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "s"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Duration"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "s"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Step"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "s"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "queue_time_seconds"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "s"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "query_wall_time_seconds"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "s"
                                  }
                               ]
                            }
                         ]
                      },
                      "height": "500px",
                      "id": 19,
                      "span": 12,
                      "targets": [
                         {
                            "expr": "{cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | label_format response_time_seconds=\"{{ if .response_time }} {{ duration .response_time }} {{ end }}\",param_step_seconds=\"{{ if .param_step }} {{ div .param_step 1000 }} {{ end }}\",length_seconds=\"{{ if .length }} {{ duration .length }} {{ end }}\"",
                            "instant": false,
                            "legendFormat": "",
                            "range": true,
                            "refId": "A"
                         }
                      ],
                      "title": "Slow queries",
                      "transformations": [
                         {
                            "id": "extractFields",
                            "options": {
                               "source": "labels"
                            }
                         },
                         {
                            "id": "organize",
                            "options": {
                               "excludeByName": {
                                  "Line": true,
                                  "Time": true,
                                  "caller": true,
                                  "cluster": true,
                                  "component": true,
                                  "container": true,
                                  "gossip_ring_member": true,
                                  "host": true,
                                  "id": true,
                                  "job": true,
                                  "labels": true,
                                  "length": true,
                                  "level": true,
                                  "line": true,
                                  "method": true,
                                  "msg": true,
                                  "name": true,
                                  "namespace": true,
                                  "param_step": true,
                                  "path": true,
                                  "pod": true,
                                  "pod_template_hash": true,
                                  "response_time": true,
                                  "stream": true,
                                  "traceID": true,
                                  "tsNs": true
                               },
                               "indexByName": {
                                  "err": 10,
                                  "length_seconds": 3,
                                  "param_end": 5,
                                  "param_query": 8,
                                  "param_start": 4,
                                  "param_step_seconds": 7,
                                  "param_time": 6,
                                  "response_time_seconds": 9,
                                  "status": 1,
                                  "ts": 0,
                                  "user": 2
                               },
                               "renameByName": {
                                  "err": "Error",
                                  "length_seconds": "Time span",
                                  "param_end": "End",
                                  "param_query": "Query",
                                  "param_start": "Start",
                                  "param_step_seconds": "Step",
                                  "param_time": "Time (instant query)",
                                  "response_time_seconds": "Duration",
                                  "ts": "Completion date",
                                  "user": "Tenant ID"
                               }
                            }
                         },
                         {
                            "id": "convertFieldType",
                            "options": {
                               "conversions": [
                                  {
                                     "destinationType": "number",
                                     "targetField": "sharded_queries"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "split_queries"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "fetched_chunk_bytes"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "fetched_index_bytes"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "response_size_bytes"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "results_cache_hit_bytes"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "results_cache_miss_bytes"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "estimated_series_count"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "fetched_chunks_count"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "fetched_series_count"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "Time span"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "Duration"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "Step"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "queue_time_seconds"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "query_wall_time_seconds"
                                  }
                               ]
                            }
                         }
                      ],
                      "type": "table"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "hide": 0,
                   "includeAll": false,
                   "label": "Loki data source",
                   "multi": false,
                   "name": "loki_datasource",
                   "query": "loki",
                   "type": "datasource"
                },
                {
                   "current": {
                      "selected": true,
                      "text": "5s",
                      "value": "5s"
                   },
                   "hide": 0,
                   "label": "Min duration",
                   "name": "min_duration",
                   "options": [
                      {
                         "selected": true,
                         "text": "5s",
                         "value": "5s"
                      }
                   ],
                   "query": "5s",
                   "type": "textbox"
                },
                {
                   "current": {
                      "selected": true,
                      "text": ".*",
                      "value": ".*"
                   },
                   "hide": 0,
                   "label": "Tenant ID",
                   "name": "tenant_id",
                   "options": [
                      {
                         "selected": true,
                         "text": ".*",
                         "value": ".*"
                      }
                   ],
                   "query": ".*",
                   "type": "textbox"
                },
                {
                   "current": {
                      "selected": true,
                      "text": ".*",
                      "value": ".*"
                   },
                   "hide": 0,
                   "label": "User-Agent HTTP Header",
                   "name": "user_agent",
                   "options": [
                      {
                         "selected": true,
                         "text": ".*",
                         "value": ".*"
                      }
                   ],
                   "query": ".*",
                   "type": "textbox"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Slow queries",
          "uid": "6089e1ce1e678788f46312a0a1e647e6",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-slow-queries.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-tenants.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "25px",
                "panels": [
                   {
                      "content": "<p>\n  This dashboard shows various metrics detailed by tenant (user) selected above.\n</p>\n",
                      "datasource": null,
                      "description": "",
                      "id": 1,
                      "mode": "markdown",
                      "span": 12,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Tenants dashboard description",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### All series\nNumber of active, in-memory, and owned series per user, and active series matching custom trackers (in parenthesis).\nNote that these counts include all series regardless of the type of data (counter, gauge, native histogram, etc.).\nNote that active series matching custom trackers are included in the total active series count.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(\n  (\n    cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n    - cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n  )\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "in-memory",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_limits_overrides{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|overrides-exporter|mimir-backend.*))\", limit_name=\"max_global_series_per_user\", user=\"$user\"})\nor\nmax(cortex_limits_defaults{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|overrides-exporter|mimir-backend.*))\", limit_name=\"max_global_series_per_user\"})\n",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(\n  cortex_ingester_active_series{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "active",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(\n  cortex_ingester_owned_series{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "owned",
                            "legendLink": null
                         },
                         {
                            "expr": "sum by (name) (\n  cortex_ingester_active_series_custom_tracker{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n) > 0\n",
                            "format": "time_series",
                            "legendFormat": "active ({{ name }})",
                            "legendLink": null
                         }
                      ],
                      "title": "All series",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### In-memory series per ingester\nLocal tenant series limit and number of in-memory series per ingester.\nBecause series can be unevenly distributed across ingesters, ingesters may hit the local limit at different times.\nNote that in-memory series may exceed the local limit if limiting based on owned series is enabled.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/local limit .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "yellow",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "min by (job) (cortex_ingester_local_limits{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", limit=\"max_global_series_per_user\", user=\"$user\"})\n",
                            "format": "time_series",
                            "legendFormat": "local limit ({{job}})",
                            "legendLink": null
                         },
                         {
                            "expr": "cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n- cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "In-memory series per ingester",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Owned series per ingester\nLocal tenant series limit and number of owned series per ingester.\nBecause series can be unevenly distributed across ingesters, ingesters may hit the local limit at different times.\nOwned series are the subset of an ingester's in-memory series that currently map to it in the ring\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/local limit .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "yellow",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "min by (job) (cortex_ingester_local_limits{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", limit=\"max_global_series_per_user\", user=\"$user\"})\n",
                            "format": "time_series",
                            "legendFormat": "local limit ({{job}})",
                            "legendLink": null
                         },
                         {
                            "expr": "cortex_ingester_owned_series{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Owned series per ingester",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Tenant series counts",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Series with exemplars\nNumber of series with exemplars currently in storage.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(\n  cortex_ingester_tsdb_exemplar_series_with_exemplars_in_storage{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "series",
                            "legendLink": null
                         }
                      ],
                      "title": "Series with exemplars",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Oldest exemplar age\nThe age of the oldest exemplar stored in circular storage.\nUseful to check for what time range the current exemplar buffer limit allows.\nThis usually means the max age for all exemplars for a typical setup.\nThis is not true though if one of the series timestamp is in future compared to rest series.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "time() - min(cortex_ingester_tsdb_exemplar_last_exemplars_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "age",
                            "legendLink": null
                         }
                      ],
                      "title": "Oldest exemplar age",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Native histogram series\nNumber of active native histogram series per user, and active native histogram series matching custom trackers (in parenthesis).\nNote that active series matching custom trackers are included in the total active series count.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(\n  cortex_ingester_active_native_histogram_series{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "active",
                            "legendLink": null
                         },
                         {
                            "expr": "sum by (name) (\n  cortex_ingester_active_native_histogram_series_custom_tracker{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n) > 0\n",
                            "format": "time_series",
                            "legendFormat": "active ({{ name }})",
                            "legendLink": null
                         }
                      ],
                      "title": "Native histogram series",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Total number of buckets used by native histogram series\nTotal number of buckets in active native histogram series per user, and total active native histogram buckets matching custom trackers (in parenthesis).\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(\n  cortex_ingester_active_native_histogram_buckets{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "buckets",
                            "legendLink": null
                         },
                         {
                            "expr": "sum by (name) (\n  cortex_ingester_active_native_histogram_buckets_custom_tracker{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n) > 0\n",
                            "format": "time_series",
                            "legendFormat": "buckets ({{ name }})",
                            "legendLink": null
                         }
                      ],
                      "title": "Total number of buckets used by native histogram series",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Exemplars and native histograms",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor requests incoming rate\nThe rate of requests that have come in to the distributor, including rejected requests.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_requests_in_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor requests incoming rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor requests received (accepted) rate\nThe rate of received requests, excluding rejected requests.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_received_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_limits_overrides{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|overrides-exporter|mimir-backend.*))\", limit_name=\"request_rate\", user=\"$user\"})\nor\nmax(cortex_limits_defaults{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|overrides-exporter|mimir-backend.*))\", limit_name=\"request_rate\"})\n",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor requests received (accepted) rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Newest seen sample age\nThe age of the newest received sample seen in the distributors.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "time() - max(cortex_distributor_latest_seen_sample_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", user=\"$user\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "age",
                            "legendLink": null
                         }
                      ],
                      "title": "Newest seen sample age",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor discarded requests rate\nThe rate of each request's discarding reason.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (reason) (rate(cortex_discarded_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{ reason }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor discarded requests rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor ingestion requests",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor samples incoming rate\nThe rate of samples that have come in to the distributor, including rejected or deduped exemplars.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_samples_in_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor samples incoming rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor samples received (accepted) rate\nThe rate of received samples, excluding rejected and deduped samples.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_limits_overrides{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|overrides-exporter|mimir-backend.*))\", limit_name=\"ingestion_rate\", user=\"$user\"})\nor\nmax(cortex_limits_defaults{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|overrides-exporter|mimir-backend.*))\", limit_name=\"ingestion_rate\"})\n",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor samples received (accepted) rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor deduplicated/non-HA\nThe rate of deduplicated samples and the rate of received samples for a user that has HA tracking turned on, but the sample didn't contain both HA labels.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_deduped_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "deduplicated",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_distributor_non_ha_samples_received_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "non-HA",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor deduplicated/non-HA",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor and ingester discarded samples rate\nThe rate of each sample's discarding reason.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (reason) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{ reason }} (distributor)",
                            "legendLink": null
                         },
                         {
                            "expr": "sum by (reason) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{ reason }} (ingester)",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor and ingester discarded samples rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Samples ingestion funnel",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor exemplars incoming rate\nThe rate of exemplars that have come in to the distributor, including rejected or deduped exemplars.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_exemplars_in_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor exemplars incoming rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor exemplars received (accepted) rate\nThe rate of received exemplars, excluding rejected and deduped exemplars.\nThis number can be sensibly lower than incoming rate because we dedupe the HA sent exemplars, and then reject based on time.\nSee discarded rate for reasons why exemplars are being discarded.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_received_exemplars_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor exemplars received (accepted) rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor discarded exemplars rate\nThe rate of each exmplars' discarding reason.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (reason) (rate(cortex_discarded_exemplars_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{ reason }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor discarded exemplars rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Ingester appended exemplars rate\nTotal number of exemplars appended in the ingesters.\nThis can be lower than ingested exemplars rate since TSDB does not append the same exemplar twice, and those can be frequent.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(\n  rate(cortex_ingester_tsdb_exemplar_exemplars_appended_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"}[$__rate_interval])\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Ingester appended exemplars rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Exemplars ingestion funnel",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Symbol table size for loaded blocks\nSize of symbol table in memory for loaded blocks, averaged by ingester.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (job) (cortex_ingester_tsdb_symbol_table_size_bytes{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "{{ job }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Symbol table size for loaded blocks",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Space used by local blocks\nThe number of bytes that are currently used for local storage by all blocks.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (job) (cortex_ingester_tsdb_storage_blocks_bytes{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "{{ job }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Space used by local blocks",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingesters' storage",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Number of groups\nTotal number of rule groups for a tenant.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "count(sum by (rule_group) (cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", user=\"$user\"}))",
                            "format": "time_series",
                            "legendFormat": "groups",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_limits_overrides{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|overrides-exporter|mimir-backend.*))\", limit_name=\"ruler_max_rule_groups_per_tenant\", user=\"$user\"})\nor\nmax(cortex_limits_defaults{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|overrides-exporter|mimir-backend.*))\", limit_name=\"ruler_max_rule_groups_per_tenant\"})\n",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "Number of groups",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Number of rules\nTotal number of rules for a tenant.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "rules",
                            "legendLink": null
                         }
                      ],
                      "title": "Number of rules",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_evaluations_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Total evaluations rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (rule_group) (rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) > 0",
                            "format": "time_series",
                            "legendFormat": "{{ rule_group }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Failed evaluations rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Rules",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 27,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 6,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "rules",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (rule_group) (cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", user=\"$user\"}))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit biggest groups",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 28,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 6,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "seconds",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (rule_group) (cortex_prometheus_rule_group_last_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", user=\"$user\"}))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit slowest groups (last evaluation)",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Top rules",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 29,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_prometheus_notifications_sent_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Sent notifications rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "rate"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 30,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_prometheus_notifications_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Failed notifications rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Notifications",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 31,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (user) (cortex_alertmanager_alerts{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "alerts",
                            "legendLink": null
                         },
                         {
                            "expr": "sum by (user) (cortex_alertmanager_silences{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "silences",
                            "legendLink": null
                         }
                      ],
                      "title": "Alerts",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 32,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "(\nsum(rate(cortex_alertmanager_notifications_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))\n-\non() (sum(rate(cortex_alertmanager_notifications_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) or on () vector(0))\n) > 0\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_notifications_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "NPS",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 33,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "(\nsum(rate(cortex_alertmanager_notifications_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) by(integration)\n-\n(sum(rate(cortex_alertmanager_notifications_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) by(integration) or\n (sum(rate(cortex_alertmanager_notifications_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) by(integration) * 0)\n)) > 0\n",
                            "format": "time_series",
                            "legendFormat": "success - {{ integration }}",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_notifications_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|alertmanager|cortex|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) by(integration)",
                            "format": "time_series",
                            "legendFormat": "failed - {{ integration }}",
                            "legendLink": null
                         }
                      ],
                      "title": "NPS by integration",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alertmanager",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 34,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_query_frontend_queries_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-frontend.*|cortex|mimir-read.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Queries / Sec",
                            "legendLink": null
                         }
                      ],
                      "title": "Rate of Read Requests - query-frontend",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 35,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|query-scheduler.*|mimir-backend.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "Queue Length",
                            "legendLink": null
                         }
                      ],
                      "title": "Number of Queries Queued - query-scheduler",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Read Path - Queries (User)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 36,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_query_frontend_queries_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-frontend.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Queries / Sec",
                            "legendLink": null
                         }
                      ],
                      "title": "Rate of Read Requests - ruler-query-frontend",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 37,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler-query-scheduler.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "Queue Length",
                            "legendLink": null
                         }
                      ],
                      "title": "Number of Queries Queued - ruler-query-scheduler",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Read Path - Queries (Ruler)",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Estimated Compaction Jobs\nEstimated number of compaction jobs for selected user, based on latest version of bucket index. When user sends data, ingesters upload new user blocks every 2 hours\n(shortly after 01:00 UTC, 03:00 UTC, 05:00 UTC, etc.), and compactors should process all of the blocks within 2h interval.\nIf this graph regularly goes to zero (or close to zero) in 2 hour intervals, then compaction for this user works correctly.\n\nDepending on the configuration, there are two types of jobs: `split` jobs and `merge` jobs. Split jobs will only show up when user is configured with positive number of `compactor_split_and_merge_shards`.\nValues for split and merge jobs are stacked.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 50,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 38,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (type) (cortex_bucket_index_estimated_compaction_jobs{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\", user=\"$user\"})\nand ignoring(type)\n(sum(rate(cortex_bucket_index_estimated_compaction_jobs_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval])) == 0)\n",
                            "format": "time_series",
                            "legendFormat": "{{ job }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Estimated Compaction Jobs",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Number of blocks\nNumber of blocks stored in long-term storage for this user.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 39,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by (user) (cortex_bucket_blocks_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\", user=\"$user\"})\n",
                            "format": "time_series",
                            "legendFormat": "{{ job }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Compactions",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "user",
                   "multi": false,
                   "name": "user",
                   "options": [ ],
                   "query": "label_values(cortex_ingester_active_series{cluster=~\"$cluster\", namespace=~\"$namespace\"}, user)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "current": {
                      "selected": true,
                      "text": "10",
                      "value": "10"
                   },
                   "hide": 0,
                   "includeAll": false,
                   "multi": false,
                   "name": "limit",
                   "options": [
                      {
                         "selected": true,
                         "text": "10",
                         "value": "10"
                      },
                      {
                         "selected": false,
                         "text": "50",
                         "value": "50"
                      },
                      {
                         "selected": false,
                         "text": "100",
                         "value": "100"
                      },
                      {
                         "selected": false,
                         "text": "500",
                         "value": "500"
                      },
                      {
                         "selected": false,
                         "text": "1000",
                         "value": "1000"
                      }
                   ],
                   "type": "custom"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Tenants",
          "uid": "35fa247ce651ba189debf33d7ae41611",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-tenants.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-top-tenants.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "25px",
                "panels": [
                   {
                      "content": "<p>\n  This dashboard shows the top tenants based on multiple selection criterias.\n  Rows are collapsed by default to avoid querying all of them.\n  Use the templating variable \"limit\" above to select the amount of users to be shown.\n</p>\n",
                      "datasource": null,
                      "description": "",
                      "id": 1,
                      "mode": "markdown",
                      "span": 12,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Top tenants dashboard description",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "series",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit,\n  sum by (user) (\n    cortex_ingester_active_series{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}\n    / on(cluster, namespace) group_left\n    max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n  )\n)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by active series",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By active series",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "series",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (user) (\n  (\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"} )\n      -\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"} )\n  )\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"} )\n)\n)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by in-memory series (series created - series removed)",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By in-memory series",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "sum by (user) (\n  (\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"} )\n      -\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"} )\n  )\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"} )\n)\n\nand\ntopk($limit, sum by (user) (\n  (\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"} @ end())\n      -\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"} @ end())\n  )\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"} @ end())\n)\n - sum by (user) (\n  (\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"} @ start())\n      -\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"} @ start())\n  )\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"} @ start())\n)\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Top $limit users by in-memory series (series created - series removed) that grew the most between query range start and query range end",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By in-memory series growth",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 5,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "samples/s",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (user) (rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"}[5m])))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by received samples rate in last 5m",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By samples rate",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "sum by (user) (rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"}[$__rate_interval]))\nand\ntopk($limit,\n  sum by (user) (rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"}[$__rate_interval] @ end()))\n  -\n  sum by (user) (rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"}[$__rate_interval] @ start()))\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Top $limit users by received samples rate that grew the most between query range start and query range end",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By samples rate growth",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 7,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "samples/s",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (user) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*|mimir|distributor.*|cortex|mimir-write.*))\"}[5m])))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by discarded samples rate in last 5m",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By discarded samples rate",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "sum by (user) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*|mimir|distributor.*|cortex|mimir-write.*))\"}[$__rate_interval]))\nand\ntopk($limit,\n  sum by (user) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*|mimir|distributor.*|cortex|mimir-write.*))\"}[$__rate_interval] @ end()))\n  -\n  sum by (user) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*|mimir|distributor.*|cortex|mimir-write.*))\"}[$__rate_interval] @ start()))\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Top $limit users by discarded samples rate that grew the most between query range start and query range end",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By discarded samples rate growth",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 9,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "series",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit,\n  sum by (user) (\n    cortex_ingester_tsdb_exemplar_series_with_exemplars_in_storage{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}\n    / on(cluster, namespace) group_left\n    max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n  )\n)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by series with exemplars",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By series with exemplars",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 10,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "exemplars/s",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (user) (rate(cortex_distributor_received_exemplars_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"}[5m])))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by received exemplars rate in last 5m",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By exemplars rate",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 11,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 3,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "rules",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (rule_group, user) (cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit biggest groups",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By rule group size",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 12,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 3,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "seconds",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (rule_group, user) (cortex_prometheus_rule_group_last_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ruler|cortex|mimir-backend.*))\"}))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit slowest groups (last evaluation)",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By rule group evaluation time",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 13,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "Compaction Jobs",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 0,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit,\n  sum by (user) (cortex_bucket_index_estimated_compaction_jobs{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"})\n  and ignoring(user)\n  (sum(rate(cortex_bucket_index_estimated_compaction_jobs_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|compactor.*|cortex|mimir-backend.*))\"}[$__rate_interval])) == 0)\n)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by estimated compaction jobs from bucket-index",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By estimated compaction jobs from bucket-index",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "current": {
                      "selected": true,
                      "text": "10",
                      "value": "10"
                   },
                   "hide": 0,
                   "includeAll": false,
                   "multi": false,
                   "name": "limit",
                   "options": [
                      {
                         "selected": true,
                         "text": "10",
                         "value": "10"
                      },
                      {
                         "selected": false,
                         "text": "50",
                         "value": "50"
                      },
                      {
                         "selected": false,
                         "text": "100",
                         "value": "100"
                      }
                   ],
                   "type": "custom"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Top tenants",
          "uid": "bc6e12d4fe540e4a1785b9d3ca0ffdd9",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-top-tenants.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-writes-networking.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Summary",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|mimir-write).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|mimir-write).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|mimir-write).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|mimir-write).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|distributor|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ingester|mimir-write).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ingester|mimir-write).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ingester|mimir-write).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ingester|mimir-write).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(mimir|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Writes networking",
          "uid": "978c1cb452585c96697a238eaac7fe2d",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-writes-networking.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-writes-resources.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-write|distributor|ingester)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-write|distributor|ingester)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|mimir-write|distributor|ingester)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Summary",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|distributor|mimir-write)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|distributor|mimir-write)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|distributor|mimir-write)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|distributor|mimir-write)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|distributor|mimir-write)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|distributor|mimir-write)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|distributor|mimir-write)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|distributor|mimir-write)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (cortex_ingester_memory_series{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "In-memory series",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_rss{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (RSS)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"(mimir|ingester|mimir-write)\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_written_bytes_total[$__rate_interval]\n  )\n)\n+\nignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"(mimir|ingester|mimir-write)\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk writes",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_read_bytes_total[$__rate_interval]\n  )\n) + ignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"(mimir|ingester|mimir-write)\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk reads",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(persistentvolumeclaim) (\n  kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} /\n  kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\nand\ncount by(persistentvolumeclaim) (\n  kube_persistentvolumeclaim_labels{\n    cluster=~\"$cluster\", namespace=~\"$namespace\",\n    label_name=~\"((mimir|ingester|mimir-write)).*\"\n  }\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{persistentvolumeclaim}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk space utilization",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Writes resources",
          "uid": "bc9160e50b52e89e0e49c840fea3d379",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-writes-resources.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  mimir-writes.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "125px",
                "panels": [
                   {
                      "content": "<p>\n  This dashboard shows various health metrics for the write path.\n  It is broken into sections for each service on the write path,\n  and organized by the order in which the write request flows.\n  <br/>\n  Incoming metrics data travels from the gateway → distributor → ingester.\n  <br/>\n  For each service, there are 3 panels showing\n  (1) requests per second to that service,\n  (2) average, median, and p99 latency of requests to that service, and\n  (3) p99 latency of requests to each instance of that service.\n</p>\n<p>\n  It also includes metrics for the key-value (KV) stores used to manage\n  the high-availability tracker and the ingesters.\n</p>\n",
                      "datasource": null,
                      "description": "",
                      "id": 1,
                      "mode": "markdown",
                      "span": 12,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Writes dashboard description",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "100px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cluster_namespace_job:cortex_distributor_received_samples:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Samples / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Exemplars / sec\nThe total number of received exemplars by the distributors, excluding rejected and deduped exemplars, but not necessarily ingested by the ingesters.\n\n",
                      "fill": 1,
                      "format": "short",
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cluster_namespace_job:cortex_distributor_received_exemplars:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Exemplars / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### In-memory series\nThe number of series not yet flushed to object storage that are held in ingester memory.\n\n",
                      "fill": 1,
                      "format": "short",
                      "id": 4,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cortex_ingester_memory_series{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}\n/ on(cluster, namespace) group_left\nmax by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"}))\n",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "In-memory series",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Exemplars in ingesters\nNumber of TSDB exemplars currently in ingesters' storage.\n\n",
                      "fill": 1,
                      "format": "short",
                      "id": 5,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cortex_ingester_tsdb_exemplar_exemplars_in_storage{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}\n/ on(cluster, namespace) group_left\nmax by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"}))\n",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Exemplars in ingesters",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 6,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "count(count by(user) (cortex_ingester_active_series{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Tenants",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Headlines",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Requests / sec\nThe rate of successful, failed and rejected requests to distributor.\nRejected requests are requests that distributor fails to handle because of distributor instance limits.\nWhen distributor is configured to use \"early\" request rejection, then rejected requests are NOT included in other metrics.\nWhen distributor is not configured to use \"early\" request rejection, then rejected requests are also counted as \"errors\".\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Requests / sec\nThe rate of successful, failed and rejected requests to ingester.\nRejected requests are requests that ingester fails to handle because of ingester instance limits (ingester-max-inflight-push-requests, ingester-max-inflight-push-requests-bytes, ingester-max-ingestion-rate).\nWhen ingester is configured to use \"early\" request rejection, then rejected requests are NOT included in other metrics.\nWhen ingester is not configured to use \"early\" request rejection, then rejected requests are also counted as \"errors\".\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\",route=\"/cortex.Ingester/Push\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", route=\"/cortex.Ingester/Push\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", route=\"/cortex.Ingester/Push\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", route=\"/cortex.Ingester/Push\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", route=\"/cortex.Ingester/Push\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", route=\"/cortex.Ingester/Push\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor - key-value store for high-availability (HA) deduplication",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor - key-value store for distributors ring",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester - key-value store for the ingesters ring",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Uploaded blocks / sec\nThe rate of blocks being uploaded from the ingesters\nto object storage.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_shipper_uploads_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval])) - sum(rate(cortex_ingester_shipper_upload_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_shipper_upload_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Uploaded blocks / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Upload latency\nThe average, median (50th percentile), and 99th percentile time\nthe ingesters take to upload blocks to object storage.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\",component=\"ingester\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\",component=\"ingester\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\",component=\"ingester\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\",component=\"ingester\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Upload latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester - shipper",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Compactions per second\nIngesters maintain a local TSDB per-tenant on disk. Each TSDB maintains a head block for each\nactive time series; these blocks get periodically compacted (by default, every 2h).\nThis panel shows the rate of compaction operations across all TSDBs on all ingesters.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_compactions_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_compactions_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Compactions / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Compaction latency\nThe average, median (50th percentile), and 99th percentile time ingesters take to compact TSDB head blocks\non the local filesystem.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_ingester_tsdb_compaction_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_ingester_tsdb_compaction_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_compaction_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_ingester_tsdb_compaction_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Compactions latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester - TSDB head",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### WAL truncations per second\nThe WAL is truncated each time a new TSDB block is written. This panel measures the rate of\ntruncations.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_wal_truncations_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval])) - sum(rate(cortex_ingester_tsdb_wal_truncations_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_wal_truncations_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "WAL truncations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Checkpoints created per second\nCheckpoints are created as part of the WAL truncation process.\nThis metric measures the rate of checkpoint creation.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_checkpoint_creations_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval])) - sum(rate(cortex_ingester_tsdb_checkpoint_creations_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_checkpoint_creations_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Checkpoints created / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### WAL truncations latency (including checkpointing)\nAverage time taken to perform a full WAL truncation,\nincluding the time taken for the checkpointing to complete.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": "0",
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_wal_truncate_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))\n/\nsum(rate(cortex_ingester_tsdb_wal_truncate_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval])) >= 0\n",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         }
                      ],
                      "title": "WAL truncations latency (includes checkpointing)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "noValue": "0",
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "WAL"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "mmap-ed chunks"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E28A42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 26,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_wal_corruptions_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "WAL",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_mmap_chunk_corruptions_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "mmap-ed chunks",
                            "legendLink": null
                         }
                      ],
                      "title": "Corruptions / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester - TSDB write ahead log (WAL)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor exemplars incoming rate\nThe rate of exemplars that have come in to the distributor, including rejected or deduped exemplars.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ex/s"
                         },
                         "overrides": [ ]
                      },
                      "id": 27,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(cluster_namespace_job:cortex_distributor_exemplars_in:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "incoming exemplars",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor exemplars incoming rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor exemplars received rate\nThe rate of received exemplars, excluding rejected and deduped exemplars.\nThis number can be sensibly lower than incoming rate because we dedupe the HA sent exemplars, and then reject based on time, see `cortex_discarded_exemplars_total` for specific reasons rates.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ex/s"
                         },
                         "overrides": [ ]
                      },
                      "id": 28,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(cluster_namespace_job:cortex_distributor_received_exemplars:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "received exemplars",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor exemplars received rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Ingester ingested exemplars rate\nThe rate of exemplars ingested in the ingesters.\nEvery exemplar is sent to the replication factor number of ingesters, so the sum of rates from all ingesters is divided by the replication factor.\nThis ingested exemplars rate should match the distributor's received exemplars rate.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ex/s"
                         },
                         "overrides": [ ]
                      },
                      "id": 29,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(\n  cluster_namespace_job:cortex_ingester_ingested_exemplars:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "ingested exemplars",
                            "legendLink": null
                         }
                      ],
                      "title": "Ingester ingested exemplars rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Ingester appended exemplars rate\nThe rate of exemplars appended in the ingesters.\nThis can be lower than ingested exemplars rate since TSDB does not append the same exemplar twice, and those can be frequent.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ex/s"
                         },
                         "overrides": [ ]
                      },
                      "id": 30,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(\n  cluster_namespace_job:cortex_ingester_tsdb_exemplar_exemplars_appended:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "appended exemplars",
                            "legendLink": null
                         }
                      ],
                      "title": "Ingester appended exemplars rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Exemplars",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 31,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (reason) (rate(cortex_distributor_instance_rejected_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|distributor.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{reason}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Rejected distributor requests",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 32,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (reason) (rate(cortex_ingester_instance_rejected_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((mimir|ingester.*|cortex|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{reason}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Rejected ingester requests",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Instance Limits",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Writes",
          "uid": "8280707b8f16e7b87b840fc1cc92d4c5",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Mimir
  labels:
    grafana_dashboard: "1"
  name: mimir-writes.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  namespace-by-pod.json: |-
    {
          "__inputs": [ ],
          "__requires": [ ],
          "annotations": {
             "list": [
                {
                   "builtIn": 1,
                   "datasource": "-- Grafana --",
                   "enable": true,
                   "hide": true,
                   "iconColor": "rgba(0, 211, 255, 1)",
                   "name": "Annotations & Alerts",
                   "type": "dashboard"
                }
             ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "hideControls": false,
          "id": null,
          "links": [ ],
          "panels": [
             {
                "collapse": false,
                "collapsed": false,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 0
                },
                "id": 2,
                "panels": [ ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Current Bandwidth",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                   "#299c46",
                   "rgba(237, 129, 40, 0.89)",
                   "#d44a3a"
                ],
                "datasource": "$datasource",
                "decimals": 0,
                "format": "time_series",
                "gauge": {
                   "maxValue": 100,
                   "minValue": 0,
                   "show": false,
                   "thresholdLabels": false,
                   "thresholdMarkers": true
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 1
                },
                "height": 9,
                "id": 3,
                "interval": null,
                "links": [ ],
                "mappingType": 1,
                "mappingTypes": [
                   {
                      "name": "value to text",
                      "value": 1
                   },
                   {
                      "name": "range to text",
                      "value": 2
                   }
                ],
                "maxDataPoints": 100,
                "minSpan": 12,
                "nullPointMode": "connected",
                "nullText": null,
                "options": {
                   "fieldOptions": {
                      "calcs": [
                         "last"
                      ],
                      "defaults": {
                         "max": 10000000000,
                         "min": 0,
                         "title": "$namespace",
                         "unit": "Bps"
                      },
                      "mappings": [ ],
                      "override": { },
                      "thresholds": [
                         {
                            "color": "dark-green",
                            "index": 0,
                            "value": null
                         },
                         {
                            "color": "dark-yellow",
                            "index": 1,
                            "value": 5000000000
                         },
                         {
                            "color": "dark-red",
                            "index": 2,
                            "value": 7000000000
                         }
                      ],
                      "values": false
                   }
                },
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                   {
                      "from": "null",
                      "text": "N/A",
                      "to": "null"
                   }
                ],
                "span": 12,
                "sparkline": {
                   "fillColor": "rgba(31, 118, 189, 0.18)",
                   "full": false,
                   "lineColor": "rgb(31, 120, 193)",
                   "show": false
                },
                "tableColumn": "",
                "targets": [
                   {
                      "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution]))",
                      "format": "time_series",
                      "instant": null,
                      "intervalFactor": 1,
                      "legendFormat": "",
                      "refId": "A"
                   }
                ],
                "thresholds": "",
                "timeFrom": null,
                "timeShift": null,
                "title": "Current Rate of Bytes Received",
                "type": "gauge",
                "valueFontSize": "80%",
                "valueMaps": [
                   {
                      "op": "=",
                      "text": "N/A",
                      "value": "null"
                   }
                ],
                "valueName": "current"
             },
             {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                   "#299c46",
                   "rgba(237, 129, 40, 0.89)",
                   "#d44a3a"
                ],
                "datasource": "$datasource",
                "decimals": 0,
                "format": "time_series",
                "gauge": {
                   "maxValue": 100,
                   "minValue": 0,
                   "show": false,
                   "thresholdLabels": false,
                   "thresholdMarkers": true
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 1
                },
                "height": 9,
                "id": 4,
                "interval": null,
                "links": [ ],
                "mappingType": 1,
                "mappingTypes": [
                   {
                      "name": "value to text",
                      "value": 1
                   },
                   {
                      "name": "range to text",
                      "value": 2
                   }
                ],
                "maxDataPoints": 100,
                "minSpan": 12,
                "nullPointMode": "connected",
                "nullText": null,
                "options": {
                   "fieldOptions": {
                      "calcs": [
                         "last"
                      ],
                      "defaults": {
                         "max": 10000000000,
                         "min": 0,
                         "title": "$namespace",
                         "unit": "Bps"
                      },
                      "mappings": [ ],
                      "override": { },
                      "thresholds": [
                         {
                            "color": "dark-green",
                            "index": 0,
                            "value": null
                         },
                         {
                            "color": "dark-yellow",
                            "index": 1,
                            "value": 5000000000
                         },
                         {
                            "color": "dark-red",
                            "index": 2,
                            "value": 7000000000
                         }
                      ],
                      "values": false
                   }
                },
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                   {
                      "from": "null",
                      "text": "N/A",
                      "to": "null"
                   }
                ],
                "span": 12,
                "sparkline": {
                   "fillColor": "rgba(31, 118, 189, 0.18)",
                   "full": false,
                   "lineColor": "rgb(31, 120, 193)",
                   "show": false
                },
                "tableColumn": "",
                "targets": [
                   {
                      "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution]))",
                      "format": "time_series",
                      "instant": null,
                      "intervalFactor": 1,
                      "legendFormat": "",
                      "refId": "A"
                   }
                ],
                "thresholds": "",
                "timeFrom": null,
                "timeShift": null,
                "title": "Current Rate of Bytes Transmitted",
                "type": "gauge",
                "valueFontSize": "80%",
                "valueMaps": [
                   {
                      "op": "=",
                      "text": "N/A",
                      "value": "null"
                   }
                ],
                "valueName": "current"
             },
             {
                "columns": [
                   {
                      "text": "Time",
                      "value": "Time"
                   },
                   {
                      "text": "Value #A",
                      "value": "Value #A"
                   },
                   {
                      "text": "Value #B",
                      "value": "Value #B"
                   },
                   {
                      "text": "Value #C",
                      "value": "Value #C"
                   },
                   {
                      "text": "Value #D",
                      "value": "Value #D"
                   },
                   {
                      "text": "Value #E",
                      "value": "Value #E"
                   },
                   {
                      "text": "Value #F",
                      "value": "Value #F"
                   },
                   {
                      "text": "pod",
                      "value": "pod"
                   }
                ],
                "datasource": "$datasource",
                "fill": 1,
                "fontSize": "100%",
                "gridPos": {
                   "h": 9,
                   "w": 24,
                   "x": 0,
                   "y": 10
                },
                "id": 5,
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "minSpan": 24,
                "nullPointMode": "null as zero",
                "renderer": "flot",
                "scroll": true,
                "showHeader": true,
                "sort": {
                   "col": 0,
                   "desc": false
                },
                "spaceLength": 10,
                "span": 24,
                "styles": [
                   {
                      "alias": "Time",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Time",
                      "thresholds": [ ],
                      "type": "hidden",
                      "unit": "short"
                   },
                   {
                      "alias": "Bandwidth Received",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #A",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "Bps"
                   },
                   {
                      "alias": "Bandwidth Transmitted",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #B",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "Bps"
                   },
                   {
                      "alias": "Rate of Received Packets",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #C",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "pps"
                   },
                   {
                      "alias": "Rate of Transmitted Packets",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #D",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "pps"
                   },
                   {
                      "alias": "Rate of Received Packets Dropped",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #E",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "pps"
                   },
                   {
                      "alias": "Rate of Transmitted Packets Dropped",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #F",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "pps"
                   },
                   {
                      "alias": "Pod",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": true,
                      "linkTooltip": "Drill down",
                      "linkUrl": "d/7a18067ce943a40ae25454675c19ff5c/kubernetes-networking-pod?orgId=1&refresh=30s&var-namespace=$namespace&var-pod=$__cell",
                      "pattern": "pod",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "short"
                   }
                ],
                "targets": [
                   {
                      "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "A",
                      "step": 10
                   },
                   {
                      "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "B",
                      "step": 10
                   },
                   {
                      "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "C",
                      "step": 10
                   },
                   {
                      "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "D",
                      "step": 10
                   },
                   {
                      "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "E",
                      "step": 10
                   },
                   {
                      "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "F",
                      "step": 10
                   }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Current Status",
                "type": "table"
             },
             {
                "collapse": false,
                "collapsed": false,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 19
                },
                "id": 6,
                "panels": [ ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Bandwidth",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 20
                },
                "id": 7,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [ ],
                "minSpan": 12,
                "nullPointMode": "connected",
                "paceLength": 10,
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 12,
                "stack": true,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                      "format": "time_series",
                      "intervalFactor": 1,
                      "legendFormat": "{{pod}}",
                      "refId": "A",
                      "step": 10
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Receive Bandwidth",
                "tooltip": {
                   "shared": true,
                   "sort": 2,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 20
                },
                "id": 8,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [ ],
                "minSpan": 12,
                "nullPointMode": "connected",
                "paceLength": 10,
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 12,
                "stack": true,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                      "format": "time_series",
                      "intervalFactor": 1,
                      "legendFormat": "{{pod}}",
                      "refId": "A",
                      "step": 10
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Transmit Bandwidth",
                "tooltip": {
                   "shared": true,
                   "sort": 2,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   }
                ]
             },
             {
                "collapse": true,
                "collapsed": true,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 29
                },
                "id": 9,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 10,
                         "w": 12,
                         "x": 0,
                         "y": 30
                      },
                      "id": 10,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Received Packets",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 10,
                         "w": 12,
                         "x": 12,
                         "y": 30
                      },
                      "id": 11,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Transmitted Packets",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Packets",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": true,
                "collapsed": true,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 30
                },
                "id": 12,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 10,
                         "w": 12,
                         "x": 0,
                         "y": 40
                      },
                      "id": 13,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Received Packets Dropped",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 10,
                         "w": 12,
                         "x": 12,
                         "y": 40
                      },
                      "id": 14,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])) by (pod)",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Transmitted Packets Dropped",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Errors",
                "titleSize": "h6",
                "type": "row"
             }
          ],
          "refresh": "10s",
          "rows": [ ],
          "schemaVersion": 18,
          "style": "dark",
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(up{job=\"integrations/kubernetes/cadvisor\"}, cluster)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 0,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "kube-system",
                      "value": "kube-system"
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                   "hide": 0,
                   "includeAll": true,
                   "label": null,
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "5m",
                      "value": "5m"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "resolution",
                   "options": [
                      {
                         "selected": false,
                         "text": "30s",
                         "value": "30s"
                      },
                      {
                         "selected": true,
                         "text": "5m",
                         "value": "5m"
                      },
                      {
                         "selected": false,
                         "text": "1h",
                         "value": "1h"
                      }
                   ],
                   "query": "30s,5m,1h",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "interval",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "5m",
                      "value": "5m"
                   },
                   "datasource": "$datasource",
                   "hide": 2,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "interval",
                   "options": [
                      {
                         "selected": true,
                         "text": "4h",
                         "value": "4h"
                      }
                   ],
                   "query": "4h",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "interval",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "browser",
          "title": "Kubernetes / Networking / Namespace (Pods)",
          "uid": "8b7a8b326d7a6f1f04244066368c67af",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: namespace-by-pod.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  namespace-by-workload.json: |-
    {
          "__inputs": [ ],
          "__requires": [ ],
          "annotations": {
             "list": [
                {
                   "builtIn": 1,
                   "datasource": "-- Grafana --",
                   "enable": true,
                   "hide": true,
                   "iconColor": "rgba(0, 211, 255, 1)",
                   "name": "Annotations & Alerts",
                   "type": "dashboard"
                }
             ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "hideControls": false,
          "id": null,
          "links": [ ],
          "panels": [
             {
                "collapse": false,
                "collapsed": false,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 0
                },
                "id": 2,
                "panels": [ ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Current Bandwidth",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "aliasColors": { },
                "bars": true,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 1
                },
                "id": 3,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "sort": "current",
                   "sortDesc": true,
                   "total": false,
                   "values": true
                },
                "lines": false,
                "linewidth": 1,
                "links": [ ],
                "minSpan": 24,
                "nullPointMode": "null",
                "paceLength": 10,
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 24,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "time_series",
                      "intervalFactor": 1,
                      "legendFormat": "{{ workload }}",
                      "refId": "A",
                      "step": 10
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Current Rate of Bytes Received",
                "tooltip": {
                   "shared": true,
                   "sort": 2,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "series",
                   "name": null,
                   "show": false,
                   "values": [
                      "current"
                   ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": true,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 1
                },
                "id": 4,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "sort": "current",
                   "sortDesc": true,
                   "total": false,
                   "values": true
                },
                "lines": false,
                "linewidth": 1,
                "links": [ ],
                "minSpan": 24,
                "nullPointMode": "null",
                "paceLength": 10,
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 24,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "time_series",
                      "intervalFactor": 1,
                      "legendFormat": "{{ workload }}",
                      "refId": "A",
                      "step": 10
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Current Rate of Bytes Transmitted",
                "tooltip": {
                   "shared": true,
                   "sort": 2,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "series",
                   "name": null,
                   "show": false,
                   "values": [
                      "current"
                   ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   }
                ]
             },
             {
                "columns": [
                   {
                      "text": "Time",
                      "value": "Time"
                   },
                   {
                      "text": "Value #A",
                      "value": "Value #A"
                   },
                   {
                      "text": "Value #B",
                      "value": "Value #B"
                   },
                   {
                      "text": "Value #C",
                      "value": "Value #C"
                   },
                   {
                      "text": "Value #D",
                      "value": "Value #D"
                   },
                   {
                      "text": "Value #E",
                      "value": "Value #E"
                   },
                   {
                      "text": "Value #F",
                      "value": "Value #F"
                   },
                   {
                      "text": "Value #G",
                      "value": "Value #G"
                   },
                   {
                      "text": "Value #H",
                      "value": "Value #H"
                   },
                   {
                      "text": "workload",
                      "value": "workload"
                   }
                ],
                "datasource": "$datasource",
                "fill": 1,
                "fontSize": "90%",
                "gridPos": {
                   "h": 9,
                   "w": 24,
                   "x": 0,
                   "y": 10
                },
                "id": 5,
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "minSpan": 24,
                "nullPointMode": "null as zero",
                "renderer": "flot",
                "scroll": true,
                "showHeader": true,
                "sort": {
                   "col": 0,
                   "desc": false
                },
                "spaceLength": 10,
                "span": 24,
                "styles": [
                   {
                      "alias": "Time",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Time",
                      "thresholds": [ ],
                      "type": "hidden",
                      "unit": "short"
                   },
                   {
                      "alias": "Current Bandwidth Received",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #A",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "Bps"
                   },
                   {
                      "alias": "Current Bandwidth Transmitted",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #B",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "Bps"
                   },
                   {
                      "alias": "Average Bandwidth Received",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #C",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "Bps"
                   },
                   {
                      "alias": "Average Bandwidth Transmitted",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #D",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "Bps"
                   },
                   {
                      "alias": "Rate of Received Packets",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #E",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "pps"
                   },
                   {
                      "alias": "Rate of Transmitted Packets",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #F",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "pps"
                   },
                   {
                      "alias": "Rate of Received Packets Dropped",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #G",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "pps"
                   },
                   {
                      "alias": "Rate of Transmitted Packets Dropped",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": false,
                      "linkTooltip": "Drill down",
                      "linkUrl": "",
                      "pattern": "Value #H",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "pps"
                   },
                   {
                      "alias": "Workload",
                      "colorMode": null,
                      "colors": [ ],
                      "dateFormat": "YYYY-MM-DD HH:mm:ss",
                      "decimals": 2,
                      "link": true,
                      "linkTooltip": "Drill down",
                      "linkUrl": "d/728bf77cc1166d2f3133bf25846876cc/kubernetes-networking-workload?orgId=1&refresh=30s&var-namespace=$namespace&var-type=$type&var-workload=$__cell",
                      "pattern": "workload",
                      "thresholds": [ ],
                      "type": "number",
                      "unit": "short"
                   }
                ],
                "targets": [
                   {
                      "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "A",
                      "step": 10
                   },
                   {
                      "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "B",
                      "step": 10
                   },
                   {
                      "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "C",
                      "step": 10
                   },
                   {
                      "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "D",
                      "step": 10
                   },
                   {
                      "expr": "sort_desc(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "E",
                      "step": 10
                   },
                   {
                      "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "F",
                      "step": 10
                   },
                   {
                      "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "G",
                      "step": 10
                   },
                   {
                      "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": 2,
                      "legendFormat": "",
                      "refId": "H",
                      "step": 10
                   }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Current Status",
                "type": "table"
             },
             {
                "collapse": true,
                "collapsed": true,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 19
                },
                "id": 6,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": true,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 9,
                         "w": 12,
                         "x": 0,
                         "y": 20
                      },
                      "id": 7,
                      "legend": {
                         "alignAsTable": true,
                         "avg": false,
                         "current": true,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": true,
                         "show": true,
                         "sideWidth": null,
                         "sort": "current",
                         "sortDesc": true,
                         "total": false,
                         "values": true
                      },
                      "lines": false,
                      "linewidth": 1,
                      "links": [ ],
                      "minSpan": 24,
                      "nullPointMode": "null",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 24,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{ workload }}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Average Rate of Bytes Received",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "series",
                         "name": null,
                         "show": false,
                         "values": [
                            "current"
                         ]
                      },
                      "yaxes": [
                         {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": true,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 9,
                         "w": 12,
                         "x": 12,
                         "y": 20
                      },
                      "id": 8,
                      "legend": {
                         "alignAsTable": true,
                         "avg": false,
                         "current": true,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": true,
                         "show": true,
                         "sideWidth": null,
                         "sort": "current",
                         "sortDesc": true,
                         "total": false,
                         "values": true
                      },
                      "lines": false,
                      "linewidth": 1,
                      "links": [ ],
                      "minSpan": 24,
                      "nullPointMode": "null",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 24,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{ workload }}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Average Rate of Bytes Transmitted",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "series",
                         "name": null,
                         "show": false,
                         "values": [
                            "current"
                         ]
                      },
                      "yaxes": [
                         {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Average Bandwidth",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": false,
                "collapsed": false,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 29
                },
                "id": 9,
                "panels": [ ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Bandwidth HIstory",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 38
                },
                "id": 10,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [ ],
                "minSpan": 12,
                "nullPointMode": "connected",
                "paceLength": 10,
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 12,
                "stack": true,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "time_series",
                      "intervalFactor": 1,
                      "legendFormat": "{{workload}}",
                      "refId": "A",
                      "step": 10
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Receive Bandwidth",
                "tooltip": {
                   "shared": true,
                   "sort": 2,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 38
                },
                "id": 11,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [ ],
                "minSpan": 12,
                "nullPointMode": "connected",
                "paceLength": 10,
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 12,
                "stack": true,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "time_series",
                      "intervalFactor": 1,
                      "legendFormat": "{{workload}}",
                      "refId": "A",
                      "step": 10
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Transmit Bandwidth",
                "tooltip": {
                   "shared": true,
                   "sort": 2,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   }
                ]
             },
             {
                "collapse": true,
                "collapsed": true,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 39
                },
                "id": 12,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 9,
                         "w": 12,
                         "x": 0,
                         "y": 40
                      },
                      "id": 13,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sort_desc(sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{workload}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Received Packets",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 9,
                         "w": 12,
                         "x": 12,
                         "y": 40
                      },
                      "id": 14,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{workload}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Transmitted Packets",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Packets",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": true,
                "collapsed": true,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 40
                },
                "id": 15,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 9,
                         "w": 12,
                         "x": 0,
                         "y": 41
                      },
                      "id": 16,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{workload}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Received Packets Dropped",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 9,
                         "w": 12,
                         "x": 12,
                         "y": 41
                      },
                      "id": 17,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{workload}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Transmitted Packets Dropped",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Errors",
                "titleSize": "h6",
                "type": "row"
             }
          ],
          "refresh": "10s",
          "rows": [ ],
          "schemaVersion": 18,
          "style": "dark",
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(up{job=\"integrations/kubernetes/cadvisor\"}, cluster)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 0,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "kube-system",
                      "value": "kube-system"
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "",
                      "value": ""
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\"}, workload_type)",
                   "hide": 0,
                   "includeAll": true,
                   "label": null,
                   "multi": false,
                   "name": "type",
                   "options": [ ],
                   "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\"}, workload_type)",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 0,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "5m",
                      "value": "5m"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "resolution",
                   "options": [
                      {
                         "selected": false,
                         "text": "30s",
                         "value": "30s"
                      },
                      {
                         "selected": true,
                         "text": "5m",
                         "value": "5m"
                      },
                      {
                         "selected": false,
                         "text": "1h",
                         "value": "1h"
                      }
                   ],
                   "query": "30s,5m,1h",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "interval",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "5m",
                      "value": "5m"
                   },
                   "datasource": "$datasource",
                   "hide": 2,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "interval",
                   "options": [
                      {
                         "selected": true,
                         "text": "4h",
                         "value": "4h"
                      }
                   ],
                   "query": "4h",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "interval",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "browser",
          "title": "Kubernetes / Networking / Namespace (Workload)",
          "uid": "bbb2a765a623ae38130206c7d94a160f",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: namespace-by-workload.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  persistentvolumesusage.json: |-
    {
          "__inputs": [ ],
          "__requires": [ ],
          "annotations": {
             "list": [ ]
          },
          "editable": false,
          "gnetId": null,
          "graphTooltip": 0,
          "hideControls": false,
          "id": null,
          "links": [ ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "collapsed": false,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 2,
                      "legend": {
                         "alignAsTable": true,
                         "avg": true,
                         "current": true,
                         "max": true,
                         "min": true,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": true
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 9,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "(\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n  -\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n)\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "Used Space",
                            "refId": "A"
                         },
                         {
                            "expr": "sum without(instance, node) (topk(1, (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "Free Space",
                            "refId": "B"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Volume Space Usage",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "bytes",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "bytes",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "cacheTimeout": null,
                      "colorBackground": false,
                      "colorValue": false,
                      "colors": [
                         "rgba(50, 172, 45, 0.97)",
                         "rgba(237, 129, 40, 0.89)",
                         "rgba(245, 54, 54, 0.9)"
                      ],
                      "datasource": "$datasource",
                      "format": "percent",
                      "gauge": {
                         "maxValue": 100,
                         "minValue": 0,
                         "show": true,
                         "thresholdLabels": false,
                         "thresholdMarkers": true
                      },
                      "gridPos": { },
                      "id": 3,
                      "interval": null,
                      "links": [ ],
                      "mappingType": 1,
                      "mappingTypes": [
                         {
                            "name": "value to text",
                            "value": 1
                         },
                         {
                            "name": "range to text",
                            "value": 2
                         }
                      ],
                      "maxDataPoints": 100,
                      "nullPointMode": "connected",
                      "nullText": null,
                      "postfix": "",
                      "postfixFontSize": "50%",
                      "prefix": "",
                      "prefixFontSize": "50%",
                      "rangeMaps": [
                         {
                            "from": "null",
                            "text": "N/A",
                            "to": "null"
                         }
                      ],
                      "span": 3,
                      "sparkline": {
                         "fillColor": "rgba(31, 118, 189, 0.18)",
                         "full": false,
                         "lineColor": "rgb(31, 120, 193)",
                         "show": false
                      },
                      "tableColumn": "",
                      "targets": [
                         {
                            "expr": "max without(instance,node) (\n(\n  topk(1, kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n  -\n  topk(1, kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n)\n/\ntopk(1, kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n* 100)\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": "80, 90",
                      "title": "Volume Space Usage",
                      "type": "singlestat",
                      "valueFontSize": "80%",
                      "valueMaps": [
                         {
                            "op": "=",
                            "text": "N/A",
                            "value": "null"
                         }
                      ],
                      "valueName": "current"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Dashboard Row",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": false,
                "collapsed": false,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 4,
                      "legend": {
                         "alignAsTable": true,
                         "avg": true,
                         "current": true,
                         "max": true,
                         "min": true,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": true
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 9,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "Used inodes",
                            "refId": "A"
                         },
                         {
                            "expr": "(\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n  -\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n)\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": " Free inodes",
                            "refId": "B"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Volume inodes Usage",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "none",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "none",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "cacheTimeout": null,
                      "colorBackground": false,
                      "colorValue": false,
                      "colors": [
                         "rgba(50, 172, 45, 0.97)",
                         "rgba(237, 129, 40, 0.89)",
                         "rgba(245, 54, 54, 0.9)"
                      ],
                      "datasource": "$datasource",
                      "format": "percent",
                      "gauge": {
                         "maxValue": 100,
                         "minValue": 0,
                         "show": true,
                         "thresholdLabels": false,
                         "thresholdMarkers": true
                      },
                      "gridPos": { },
                      "id": 5,
                      "interval": null,
                      "links": [ ],
                      "mappingType": 1,
                      "mappingTypes": [
                         {
                            "name": "value to text",
                            "value": 1
                         },
                         {
                            "name": "range to text",
                            "value": 2
                         }
                      ],
                      "maxDataPoints": 100,
                      "nullPointMode": "connected",
                      "nullText": null,
                      "postfix": "",
                      "postfixFontSize": "50%",
                      "prefix": "",
                      "prefixFontSize": "50%",
                      "rangeMaps": [
                         {
                            "from": "null",
                            "text": "N/A",
                            "to": "null"
                         }
                      ],
                      "span": 3,
                      "sparkline": {
                         "fillColor": "rgba(31, 118, 189, 0.18)",
                         "full": false,
                         "lineColor": "rgb(31, 120, 193)",
                         "show": false
                      },
                      "tableColumn": "",
                      "targets": [
                         {
                            "expr": "max without(instance,node) (\ntopk(1, kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n/\ntopk(1, kubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n* 100)\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": "80, 90",
                      "title": "Volume inodes Usage",
                      "type": "singlestat",
                      "valueFontSize": "80%",
                      "valueMaps": [
                         {
                            "op": "=",
                            "text": "N/A",
                            "value": "null"
                         }
                      ],
                      "valueName": "current"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Dashboard Row",
                "titleSize": "h6",
                "type": "row"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(kubelet_volume_stats_capacity_bytes{job=\"integrations/kubernetes/kubelet\"}, cluster)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "Namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\"}, namespace)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "PersistentVolumeClaim",
                   "multi": false,
                   "name": "volume",
                   "options": [ ],
                   "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\"}, persistentvolumeclaim)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-7d",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "browser",
          "title": "Kubernetes / Persistent Volumes",
          "uid": "919b92a8e8041bd567af9edab12c840c",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: persistentvolumesusage.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  pod-total.json: |-
    {
          "__inputs": [ ],
          "__requires": [ ],
          "annotations": {
             "list": [
                {
                   "builtIn": 1,
                   "datasource": "-- Grafana --",
                   "enable": true,
                   "hide": true,
                   "iconColor": "rgba(0, 211, 255, 1)",
                   "name": "Annotations & Alerts",
                   "type": "dashboard"
                }
             ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "hideControls": false,
          "id": null,
          "links": [ ],
          "panels": [
             {
                "collapse": false,
                "collapsed": false,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 0
                },
                "id": 2,
                "panels": [ ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Current Bandwidth",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                   "#299c46",
                   "rgba(237, 129, 40, 0.89)",
                   "#d44a3a"
                ],
                "datasource": "$datasource",
                "decimals": 0,
                "format": "time_series",
                "gauge": {
                   "maxValue": 100,
                   "minValue": 0,
                   "show": false,
                   "thresholdLabels": false,
                   "thresholdMarkers": true
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 1
                },
                "height": 9,
                "id": 3,
                "interval": null,
                "links": [ ],
                "mappingType": 1,
                "mappingTypes": [
                   {
                      "name": "value to text",
                      "value": 1
                   },
                   {
                      "name": "range to text",
                      "value": 2
                   }
                ],
                "maxDataPoints": 100,
                "minSpan": 12,
                "nullPointMode": "connected",
                "nullText": null,
                "options": {
                   "fieldOptions": {
                      "calcs": [
                         "last"
                      ],
                      "defaults": {
                         "max": 10000000000,
                         "min": 0,
                         "title": "$namespace: $pod",
                         "unit": "Bps"
                      },
                      "mappings": [ ],
                      "override": { },
                      "thresholds": [
                         {
                            "color": "dark-green",
                            "index": 0,
                            "value": null
                         },
                         {
                            "color": "dark-yellow",
                            "index": 1,
                            "value": 5000000000
                         },
                         {
                            "color": "dark-red",
                            "index": 2,
                            "value": 7000000000
                         }
                      ],
                      "values": false
                   }
                },
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                   {
                      "from": "null",
                      "text": "N/A",
                      "to": "null"
                   }
                ],
                "span": 12,
                "sparkline": {
                   "fillColor": "rgba(31, 118, 189, 0.18)",
                   "full": false,
                   "lineColor": "rgb(31, 120, 193)",
                   "show": false
                },
                "tableColumn": "",
                "targets": [
                   {
                      "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution]))",
                      "format": "time_series",
                      "instant": null,
                      "intervalFactor": 1,
                      "legendFormat": "",
                      "refId": "A"
                   }
                ],
                "thresholds": "",
                "timeFrom": null,
                "timeShift": null,
                "title": "Current Rate of Bytes Received",
                "type": "gauge",
                "valueFontSize": "80%",
                "valueMaps": [
                   {
                      "op": "=",
                      "text": "N/A",
                      "value": "null"
                   }
                ],
                "valueName": "current"
             },
             {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                   "#299c46",
                   "rgba(237, 129, 40, 0.89)",
                   "#d44a3a"
                ],
                "datasource": "$datasource",
                "decimals": 0,
                "format": "time_series",
                "gauge": {
                   "maxValue": 100,
                   "minValue": 0,
                   "show": false,
                   "thresholdLabels": false,
                   "thresholdMarkers": true
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 1
                },
                "height": 9,
                "id": 4,
                "interval": null,
                "links": [ ],
                "mappingType": 1,
                "mappingTypes": [
                   {
                      "name": "value to text",
                      "value": 1
                   },
                   {
                      "name": "range to text",
                      "value": 2
                   }
                ],
                "maxDataPoints": 100,
                "minSpan": 12,
                "nullPointMode": "connected",
                "nullText": null,
                "options": {
                   "fieldOptions": {
                      "calcs": [
                         "last"
                      ],
                      "defaults": {
                         "max": 10000000000,
                         "min": 0,
                         "title": "$namespace: $pod",
                         "unit": "Bps"
                      },
                      "mappings": [ ],
                      "override": { },
                      "thresholds": [
                         {
                            "color": "dark-green",
                            "index": 0,
                            "value": null
                         },
                         {
                            "color": "dark-yellow",
                            "index": 1,
                            "value": 5000000000
                         },
                         {
                            "color": "dark-red",
                            "index": 2,
                            "value": 7000000000
                         }
                      ],
                      "values": false
                   }
                },
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                   {
                      "from": "null",
                      "text": "N/A",
                      "to": "null"
                   }
                ],
                "span": 12,
                "sparkline": {
                   "fillColor": "rgba(31, 118, 189, 0.18)",
                   "full": false,
                   "lineColor": "rgb(31, 120, 193)",
                   "show": false
                },
                "tableColumn": "",
                "targets": [
                   {
                      "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution]))",
                      "format": "time_series",
                      "instant": null,
                      "intervalFactor": 1,
                      "legendFormat": "",
                      "refId": "A"
                   }
                ],
                "thresholds": "",
                "timeFrom": null,
                "timeShift": null,
                "title": "Current Rate of Bytes Transmitted",
                "type": "gauge",
                "valueFontSize": "80%",
                "valueMaps": [
                   {
                      "op": "=",
                      "text": "N/A",
                      "value": "null"
                   }
                ],
                "valueName": "current"
             },
             {
                "collapse": false,
                "collapsed": false,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 10
                },
                "id": 5,
                "panels": [ ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Bandwidth",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 11
                },
                "id": 6,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [ ],
                "minSpan": 12,
                "nullPointMode": "connected",
                "paceLength": 10,
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 12,
                "stack": true,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(irate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
                      "format": "time_series",
                      "intervalFactor": 1,
                      "legendFormat": "{{pod}}",
                      "refId": "A",
                      "step": 10
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Receive Bandwidth",
                "tooltip": {
                   "shared": true,
                   "sort": 2,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 11
                },
                "id": 7,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [ ],
                "minSpan": 12,
                "nullPointMode": "connected",
                "paceLength": 10,
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 12,
                "stack": true,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(irate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
                      "format": "time_series",
                      "intervalFactor": 1,
                      "legendFormat": "{{pod}}",
                      "refId": "A",
                      "step": 10
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Transmit Bandwidth",
                "tooltip": {
                   "shared": true,
                   "sort": 2,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   }
                ]
             },
             {
                "collapse": true,
                "collapsed": true,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 20
                },
                "id": 8,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 10,
                         "w": 12,
                         "x": 0,
                         "y": 21
                      },
                      "id": 9,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Received Packets",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 10,
                         "w": 12,
                         "x": 12,
                         "y": 21
                      },
                      "id": 10,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Transmitted Packets",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Packets",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": true,
                "collapsed": true,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 21
                },
                "id": 11,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 10,
                         "w": 12,
                         "x": 0,
                         "y": 32
                      },
                      "id": 12,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Received Packets Dropped",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 10,
                         "w": 12,
                         "x": 12,
                         "y": 32
                      },
                      "id": 13,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$interval:$resolution])) by (pod)",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Transmitted Packets Dropped",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Errors",
                "titleSize": "h6",
                "type": "row"
             }
          ],
          "refresh": "10s",
          "rows": [ ],
          "schemaVersion": 18,
          "style": "dark",
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(up{job=\"integrations/kubernetes/cadvisor\"}, cluster)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 0,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "kube-system",
                      "value": "kube-system"
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                   "hide": 0,
                   "includeAll": true,
                   "label": null,
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "",
                      "value": ""
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}, pod)",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "pod",
                   "options": [ ],
                   "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}, pod)",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "5m",
                      "value": "5m"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "resolution",
                   "options": [
                      {
                         "selected": false,
                         "text": "30s",
                         "value": "30s"
                      },
                      {
                         "selected": true,
                         "text": "5m",
                         "value": "5m"
                      },
                      {
                         "selected": false,
                         "text": "1h",
                         "value": "1h"
                      }
                   ],
                   "query": "30s,5m,1h",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "interval",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "5m",
                      "value": "5m"
                   },
                   "datasource": "$datasource",
                   "hide": 2,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "interval",
                   "options": [
                      {
                         "selected": true,
                         "text": "4h",
                         "value": "4h"
                      }
                   ],
                   "query": "4h",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "interval",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "browser",
          "title": "Kubernetes / Networking / Pod",
          "uid": "7a18067ce943a40ae25454675c19ff5c",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: pod-total.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  proxy.json: |-
    {
          "__inputs": [ ],
          "__requires": [ ],
          "annotations": {
             "list": [ ]
          },
          "editable": false,
          "gnetId": null,
          "graphTooltip": 0,
          "hideControls": false,
          "id": null,
          "links": [ ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "collapsed": false,
                "panels": [
                   {
                      "cacheTimeout": null,
                      "colorBackground": false,
                      "colorValue": false,
                      "colors": [
                         "#299c46",
                         "rgba(237, 129, 40, 0.89)",
                         "#d44a3a"
                      ],
                      "datasource": "$datasource",
                      "format": "none",
                      "gauge": {
                         "maxValue": 100,
                         "minValue": 0,
                         "show": false,
                         "thresholdLabels": false,
                         "thresholdMarkers": true
                      },
                      "gridPos": { },
                      "id": 2,
                      "interval": null,
                      "links": [ ],
                      "mappingType": 1,
                      "mappingTypes": [
                         {
                            "name": "value to text",
                            "value": 1
                         },
                         {
                            "name": "range to text",
                            "value": 2
                         }
                      ],
                      "maxDataPoints": 100,
                      "nullPointMode": "connected",
                      "nullText": null,
                      "postfix": "",
                      "postfixFontSize": "50%",
                      "prefix": "",
                      "prefixFontSize": "50%",
                      "rangeMaps": [
                         {
                            "from": "null",
                            "text": "N/A",
                            "to": "null"
                         }
                      ],
                      "span": 2,
                      "sparkline": {
                         "fillColor": "rgba(31, 118, 189, 0.18)",
                         "full": false,
                         "lineColor": "rgb(31, 120, 193)",
                         "show": false
                      },
                      "tableColumn": "",
                      "targets": [
                         {
                            "expr": "sum(up{cluster=\"$cluster\", job=\"kube-proxy\"})",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": "",
                      "title": "Up",
                      "type": "singlestat",
                      "valueFontSize": "80%",
                      "valueMaps": [
                         {
                            "op": "=",
                            "text": "N/A",
                            "value": "null"
                         }
                      ],
                      "valueName": "min"
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 3,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 5,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(kubeproxy_sync_proxy_rules_duration_seconds_count{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval]))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "rate",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rules Sync Rate",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "ops",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "ops",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 4,
                      "legend": {
                         "alignAsTable": true,
                         "avg": false,
                         "current": true,
                         "max": false,
                         "min": false,
                         "rightSide": true,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": true
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 5,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99,rate(kubeproxy_sync_proxy_rules_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval]))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{instance}}",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rule Sync Latency 99th Quantile",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Dashboard Row",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": false,
                "collapsed": false,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 5,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 6,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(kubeproxy_network_programming_duration_seconds_count{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval]))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "rate",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Network Programming Rate",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "ops",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "ops",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 6,
                      "legend": {
                         "alignAsTable": true,
                         "avg": false,
                         "current": true,
                         "max": false,
                         "min": false,
                         "rightSide": true,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": true
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 6,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(kubeproxy_network_programming_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{instance}}",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Network Programming Latency 99th Quantile",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Dashboard Row",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": false,
                "collapsed": false,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 7,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "2xx",
                            "refId": "A"
                         },
                         {
                            "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "3xx",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "4xx",
                            "refId": "C"
                         },
                         {
                            "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "5xx",
                            "refId": "D"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Kube API Request Rate",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "ops",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                         },
                         {
                            "format": "ops",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 8,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 8,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\",verb=\"POST\"}[$__rate_interval])) by (verb, url, le))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{verb}} {{url}}",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Post Request Latency 99th Quantile",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Dashboard Row",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": false,
                "collapsed": false,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 9,
                      "legend": {
                         "alignAsTable": true,
                         "avg": false,
                         "current": true,
                         "max": false,
                         "min": false,
                         "rightSide": true,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": true
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\", verb=\"GET\"}[$__rate_interval])) by (verb, url, le))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{verb}} {{url}}",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Get Request Latency 99th Quantile",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Dashboard Row",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": false,
                "collapsed": false,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 10,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "process_resident_memory_bytes{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\"}",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{instance}}",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Memory",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "bytes",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                         },
                         {
                            "format": "bytes",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 11,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\"}[$__rate_interval])",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{instance}}",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "CPU usage",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 12,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "go_goroutines{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\"}",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{instance}}",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Goroutines",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Dashboard Row",
                "titleSize": "h6",
                "type": "row"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(up{job=\"kube-proxy\"}, cluster)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": null,
                   "multi": false,
                   "name": "instance",
                   "options": [ ],
                   "query": "label_values(up{job=\"kube-proxy\", cluster=\"$cluster\", job=\"kube-proxy\"}, instance)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "browser",
          "title": "Kubernetes / Proxy",
          "uid": "632e265de029684c40b21cb76bca4f94",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: proxy.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  scheduler.json: |-
    {
          "__inputs": [ ],
          "__requires": [ ],
          "annotations": {
             "list": [ ]
          },
          "editable": false,
          "gnetId": null,
          "graphTooltip": 0,
          "hideControls": false,
          "id": null,
          "links": [ ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "collapsed": false,
                "panels": [
                   {
                      "cacheTimeout": null,
                      "colorBackground": false,
                      "colorValue": false,
                      "colors": [
                         "#299c46",
                         "rgba(237, 129, 40, 0.89)",
                         "#d44a3a"
                      ],
                      "datasource": "$datasource",
                      "format": "none",
                      "gauge": {
                         "maxValue": 100,
                         "minValue": 0,
                         "show": false,
                         "thresholdLabels": false,
                         "thresholdMarkers": true
                      },
                      "gridPos": { },
                      "id": 2,
                      "interval": null,
                      "links": [ ],
                      "mappingType": 1,
                      "mappingTypes": [
                         {
                            "name": "value to text",
                            "value": 1
                         },
                         {
                            "name": "range to text",
                            "value": 2
                         }
                      ],
                      "maxDataPoints": 100,
                      "nullPointMode": "connected",
                      "nullText": null,
                      "postfix": "",
                      "postfixFontSize": "50%",
                      "prefix": "",
                      "prefixFontSize": "50%",
                      "rangeMaps": [
                         {
                            "from": "null",
                            "text": "N/A",
                            "to": "null"
                         }
                      ],
                      "span": 2,
                      "sparkline": {
                         "fillColor": "rgba(31, 118, 189, 0.18)",
                         "full": false,
                         "lineColor": "rgb(31, 120, 193)",
                         "show": false
                      },
                      "tableColumn": "",
                      "targets": [
                         {
                            "expr": "sum(up{cluster=\"$cluster\", job=\"kube-scheduler\"})",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": "",
                      "title": "Up",
                      "type": "singlestat",
                      "valueFontSize": "80%",
                      "valueMaps": [
                         {
                            "op": "=",
                            "text": "N/A",
                            "value": "null"
                         }
                      ],
                      "valueName": "min"
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 3,
                      "legend": {
                         "alignAsTable": true,
                         "avg": false,
                         "current": true,
                         "max": false,
                         "min": false,
                         "rightSide": true,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": true
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 5,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(scheduler_e2e_scheduling_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{cluster}} {{instance}} e2e",
                            "refId": "A"
                         },
                         {
                            "expr": "sum(rate(scheduler_binding_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{cluster}} {{instance}} binding",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(scheduler_scheduling_algorithm_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{cluster}} {{instance}} scheduling algorithm",
                            "refId": "C"
                         },
                         {
                            "expr": "sum(rate(scheduler_volume_scheduling_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{cluster}} {{instance}} volume",
                            "refId": "D"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Scheduling Rate",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "ops",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "ops",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 4,
                      "legend": {
                         "alignAsTable": true,
                         "avg": false,
                         "current": true,
                         "max": false,
                         "min": false,
                         "rightSide": true,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": true
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 5,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{cluster}} {{instance}} e2e",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{cluster}} {{instance}} binding",
                            "refId": "B"
                         },
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{cluster}} {{instance}} scheduling algorithm",
                            "refId": "C"
                         },
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(scheduler_volume_scheduling_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{cluster}} {{instance}} volume",
                            "refId": "D"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Scheduling latency 99th Quantile",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Dashboard Row",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": false,
                "collapsed": false,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 5,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "2xx",
                            "refId": "A"
                         },
                         {
                            "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "3xx",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "4xx",
                            "refId": "C"
                         },
                         {
                            "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "5xx",
                            "refId": "D"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Kube API Request Rate",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "ops",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "ops",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 6,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 8,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\", verb=\"POST\"}[$__rate_interval])) by (verb, url, le))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{verb}} {{url}}",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Post Request Latency 99th Quantile",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Dashboard Row",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": false,
                "collapsed": false,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 7,
                      "legend": {
                         "alignAsTable": true,
                         "avg": false,
                         "current": true,
                         "max": false,
                         "min": false,
                         "rightSide": true,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": true
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\", verb=\"GET\"}[$__rate_interval])) by (verb, url, le))",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{verb}} {{url}}",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Get Request Latency 99th Quantile",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "s",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Dashboard Row",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": false,
                "collapsed": false,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 8,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "process_resident_memory_bytes{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{instance}}",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Memory",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "bytes",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                         },
                         {
                            "format": "bytes",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 9,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{instance}}",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "CPU usage",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "bytes",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "bytes",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "fillGradient": 0,
                      "gridPos": { },
                      "id": 10,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "go_goroutines{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "{{instance}}",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Goroutines",
                      "tooltip": {
                         "shared": true,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Dashboard Row",
                "titleSize": "h6",
                "type": "row"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(up{job=\"kube-scheduler\"}, cluster)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": null,
                   "multi": false,
                   "name": "instance",
                   "options": [ ],
                   "query": "label_values(up{job=\"kube-scheduler\", cluster=\"$cluster\"}, instance)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "browser",
          "title": "Kubernetes / Scheduler",
          "uid": "2e6b6a3b4bddf1427b3a55aa1311c656",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: scheduler.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  workload-total.json: |-
    {
          "__inputs": [ ],
          "__requires": [ ],
          "annotations": {
             "list": [
                {
                   "builtIn": 1,
                   "datasource": "-- Grafana --",
                   "enable": true,
                   "hide": true,
                   "iconColor": "rgba(0, 211, 255, 1)",
                   "name": "Annotations & Alerts",
                   "type": "dashboard"
                }
             ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "hideControls": false,
          "id": null,
          "links": [ ],
          "panels": [
             {
                "collapse": false,
                "collapsed": false,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 0
                },
                "id": 2,
                "panels": [ ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Current Bandwidth",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "aliasColors": { },
                "bars": true,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 1
                },
                "id": 3,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "sort": "current",
                   "sortDesc": true,
                   "total": false,
                   "values": true
                },
                "lines": false,
                "linewidth": 1,
                "links": [ ],
                "minSpan": 24,
                "nullPointMode": "null",
                "paceLength": 10,
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 24,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "time_series",
                      "intervalFactor": 1,
                      "legendFormat": "{{ pod }}",
                      "refId": "A",
                      "step": 10
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Current Rate of Bytes Received",
                "tooltip": {
                   "shared": true,
                   "sort": 2,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "series",
                   "name": null,
                   "show": false,
                   "values": [
                      "current"
                   ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": true,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 1
                },
                "id": 4,
                "legend": {
                   "alignAsTable": true,
                   "avg": false,
                   "current": true,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": true,
                   "show": true,
                   "sideWidth": null,
                   "sort": "current",
                   "sortDesc": true,
                   "total": false,
                   "values": true
                },
                "lines": false,
                "linewidth": 1,
                "links": [ ],
                "minSpan": 24,
                "nullPointMode": "null",
                "paceLength": 10,
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 24,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "time_series",
                      "intervalFactor": 1,
                      "legendFormat": "{{ pod }}",
                      "refId": "A",
                      "step": 10
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Current Rate of Bytes Transmitted",
                "tooltip": {
                   "shared": true,
                   "sort": 2,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "series",
                   "name": null,
                   "show": false,
                   "values": [
                      "current"
                   ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   }
                ]
             },
             {
                "collapse": true,
                "collapsed": true,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 10
                },
                "id": 5,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": true,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 9,
                         "w": 12,
                         "x": 0,
                         "y": 11
                      },
                      "id": 6,
                      "legend": {
                         "alignAsTable": true,
                         "avg": false,
                         "current": true,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": true,
                         "show": true,
                         "sideWidth": null,
                         "sort": "current",
                         "sortDesc": true,
                         "total": false,
                         "values": true
                      },
                      "lines": false,
                      "linewidth": 1,
                      "links": [ ],
                      "minSpan": 24,
                      "nullPointMode": "null",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 24,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sort_desc(avg(irate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{ pod }}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Average Rate of Bytes Received",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "series",
                         "name": null,
                         "show": false,
                         "values": [
                            "current"
                         ]
                      },
                      "yaxes": [
                         {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": true,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 9,
                         "w": 12,
                         "x": 12,
                         "y": 11
                      },
                      "id": 7,
                      "legend": {
                         "alignAsTable": true,
                         "avg": false,
                         "current": true,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": true,
                         "show": true,
                         "sideWidth": null,
                         "sort": "current",
                         "sortDesc": true,
                         "total": false,
                         "values": true
                      },
                      "lines": false,
                      "linewidth": 1,
                      "links": [ ],
                      "minSpan": 24,
                      "nullPointMode": "null",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 24,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sort_desc(avg(irate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{ pod }}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Average Rate of Bytes Transmitted",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "series",
                         "name": null,
                         "show": false,
                         "values": [
                            "current"
                         ]
                      },
                      "yaxes": [
                         {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "Bps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Average Bandwidth",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": false,
                "collapsed": false,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 11
                },
                "id": 8,
                "panels": [ ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Bandwidth HIstory",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 12
                },
                "id": 9,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [ ],
                "minSpan": 12,
                "nullPointMode": "connected",
                "paceLength": 10,
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 12,
                "stack": true,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sort_desc(sum(irate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "time_series",
                      "intervalFactor": 1,
                      "legendFormat": "{{pod}}",
                      "refId": "A",
                      "step": 10
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Receive Bandwidth",
                "tooltip": {
                   "shared": true,
                   "sort": 2,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 12
                },
                "id": 10,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "hideEmpty": true,
                   "hideZero": true,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "sideWidth": null,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [ ],
                "minSpan": 12,
                "nullPointMode": "connected",
                "paceLength": 10,
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "repeat": null,
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 12,
                "stack": true,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sort_desc(sum(irate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "time_series",
                      "intervalFactor": 1,
                      "legendFormat": "{{pod}}",
                      "refId": "A",
                      "step": 10
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Transmit Bandwidth",
                "tooltip": {
                   "shared": true,
                   "sort": 2,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   }
                ]
             },
             {
                "collapse": true,
                "collapsed": true,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 21
                },
                "id": 11,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 9,
                         "w": 12,
                         "x": 0,
                         "y": 22
                      },
                      "id": 12,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sort_desc(sum(irate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Received Packets",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 9,
                         "w": 12,
                         "x": 12,
                         "y": 22
                      },
                      "id": 13,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sort_desc(sum(irate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Transmitted Packets",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Packets",
                "titleSize": "h6",
                "type": "row"
             },
             {
                "collapse": true,
                "collapsed": true,
                "gridPos": {
                   "h": 1,
                   "w": 24,
                   "x": 0,
                   "y": 22
                },
                "id": 14,
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 9,
                         "w": 12,
                         "x": 0,
                         "y": 23
                      },
                      "id": 15,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sort_desc(sum(irate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Received Packets Dropped",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 2,
                      "fillGradient": 0,
                      "gridPos": {
                         "h": 9,
                         "w": 12,
                         "x": 12,
                         "y": 23
                      },
                      "id": 16,
                      "legend": {
                         "alignAsTable": false,
                         "avg": false,
                         "current": false,
                         "hideEmpty": true,
                         "hideZero": true,
                         "max": false,
                         "min": false,
                         "rightSide": false,
                         "show": true,
                         "sideWidth": null,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 2,
                      "links": [ ],
                      "minSpan": 12,
                      "nullPointMode": "connected",
                      "paceLength": 10,
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "repeat": null,
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": true,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sort_desc(sum(irate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$interval:$resolution])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                            "format": "time_series",
                            "intervalFactor": 1,
                            "legendFormat": "{{pod}}",
                            "refId": "A",
                            "step": 10
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Rate of Transmitted Packets Dropped",
                      "tooltip": {
                         "shared": true,
                         "sort": 2,
                         "value_type": "individual"
                      },
                      "type": "graph",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "pps",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Errors",
                "titleSize": "h6",
                "type": "row"
             }
          ],
          "refresh": "10s",
          "rows": [ ],
          "schemaVersion": 18,
          "style": "dark",
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": null,
                   "current": { },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(kube_pod_info{job=\"integrations/kubernetes/kube-state-metrics\"}, cluster)",
                   "refresh": 2,
                   "regex": "",
                   "sort": 0,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "kube-system",
                      "value": "kube-system"
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\"}, namespace)",
                   "hide": 0,
                   "includeAll": true,
                   "label": null,
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "",
                      "value": ""
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\"}, workload)",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "workload",
                   "options": [ ],
                   "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\"}, workload)",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "",
                      "value": ""
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\"}, workload_type)",
                   "hide": 0,
                   "includeAll": true,
                   "label": null,
                   "multi": false,
                   "name": "type",
                   "options": [ ],
                   "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\"}, workload_type)",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 0,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "5m",
                      "value": "5m"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "resolution",
                   "options": [
                      {
                         "selected": false,
                         "text": "30s",
                         "value": "30s"
                      },
                      {
                         "selected": true,
                         "text": "5m",
                         "value": "5m"
                      },
                      {
                         "selected": false,
                         "text": "1h",
                         "value": "1h"
                      }
                   ],
                   "query": "30s,5m,1h",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "interval",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "auto": false,
                   "auto_count": 30,
                   "auto_min": "10s",
                   "current": {
                      "text": "5m",
                      "value": "5m"
                   },
                   "datasource": "$datasource",
                   "hide": 2,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "interval",
                   "options": [
                      {
                         "selected": true,
                         "text": "4h",
                         "value": "4h"
                      }
                   ],
                   "query": "4h",
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "interval",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "browser",
          "title": "Kubernetes / Networking / Workload",
          "uid": "728bf77cc1166d2f3133bf25846876cc",
          "version": 0
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/Kubernetes Mixin
  labels:
    grafana_dashboard: "1"
  name: workload-total.json
  namespace: monitoring-system
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kubernetes-mixin-alerts
  namespace: monitoring-system
spec:
  groups:
  - name: kubernetes-apps
    rules:
    - alert: KubePodCrashLooping
      annotations:
        description: 'Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container
          }}) is in waiting state (reason: "CrashLoopBackOff").'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodcrashlooping
        summary: Pod is crash looping.
      expr: |
        max_over_time(kube_pod_container_status_waiting_reason{reason="CrashLoopBackOff", job="integrations/kubernetes/kube-state-metrics"}[5m]) >= 1
      for: 15m
      labels:
        severity: warning
    - alert: KubePodNotReady
      annotations:
        description: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready
          state for longer than 15 minutes.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodnotready
        summary: Pod has been in a non-ready state for more than 15 minutes.
      expr: |
        sum by (namespace, pod, cluster) (
          max by(namespace, pod, cluster) (
            kube_pod_status_phase{job="integrations/kubernetes/kube-state-metrics", phase=~"Pending|Unknown|Failed"}
          ) * on(namespace, pod, cluster) group_left(owner_kind) topk by(namespace, pod, cluster) (
            1, max by(namespace, pod, owner_kind, cluster) (kube_pod_owner{owner_kind!="Job"})
          )
        ) > 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeDeploymentGenerationMismatch
      annotations:
        description: Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment
          }} does not match, this indicates that the Deployment has failed but has
          not been rolled back.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentgenerationmismatch
        summary: Deployment generation mismatch due to possible roll-back
      expr: |
        kube_deployment_status_observed_generation{job="integrations/kubernetes/kube-state-metrics"}
          !=
        kube_deployment_metadata_generation{job="integrations/kubernetes/kube-state-metrics"}
      for: 15m
      labels:
        severity: warning
    - alert: KubeDeploymentReplicasMismatch
      annotations:
        description: Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has
          not matched the expected number of replicas for longer than 15 minutes.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentreplicasmismatch
        summary: Deployment has not matched the expected number of replicas.
      expr: |
        (
          kube_deployment_spec_replicas{job="integrations/kubernetes/kube-state-metrics"}
            >
          kube_deployment_status_replicas_available{job="integrations/kubernetes/kube-state-metrics"}
        ) and (
          changes(kube_deployment_status_replicas_updated{job="integrations/kubernetes/kube-state-metrics"}[10m])
            ==
          0
        )
      for: 15m
      labels:
        severity: warning
    - alert: KubeDeploymentRolloutStuck
      annotations:
        description: Rollout of deployment {{ $labels.namespace }}/{{ $labels.deployment
          }} is not progressing for longer than 15 minutes.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentrolloutstuck
        summary: Deployment rollout is not progressing.
      expr: |
        kube_deployment_status_condition{condition="Progressing", status="false",job="integrations/kubernetes/kube-state-metrics"}
        != 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeStatefulSetReplicasMismatch
      annotations:
        description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }}
          has not matched the expected number of replicas for longer than 15 minutes.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetreplicasmismatch
        summary: StatefulSet has not matched the expected number of replicas.
      expr: |
        (
          kube_statefulset_status_replicas_ready{job="integrations/kubernetes/kube-state-metrics"}
            !=
          kube_statefulset_status_replicas{job="integrations/kubernetes/kube-state-metrics"}
        ) and (
          changes(kube_statefulset_status_replicas_updated{job="integrations/kubernetes/kube-state-metrics"}[10m])
            ==
          0
        )
      for: 15m
      labels:
        severity: warning
    - alert: KubeStatefulSetGenerationMismatch
      annotations:
        description: StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset
          }} does not match, this indicates that the StatefulSet has failed but has
          not been rolled back.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetgenerationmismatch
        summary: StatefulSet generation mismatch due to possible roll-back
      expr: |
        kube_statefulset_status_observed_generation{job="integrations/kubernetes/kube-state-metrics"}
          !=
        kube_statefulset_metadata_generation{job="integrations/kubernetes/kube-state-metrics"}
      for: 15m
      labels:
        severity: warning
    - alert: KubeStatefulSetUpdateNotRolledOut
      annotations:
        description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }}
          update has not been rolled out.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetupdatenotrolledout
        summary: StatefulSet update has not been rolled out.
      expr: |
        (
          max without (revision) (
            kube_statefulset_status_current_revision{job="integrations/kubernetes/kube-state-metrics"}
              unless
            kube_statefulset_status_update_revision{job="integrations/kubernetes/kube-state-metrics"}
          )
            *
          (
            kube_statefulset_replicas{job="integrations/kubernetes/kube-state-metrics"}
              !=
            kube_statefulset_status_replicas_updated{job="integrations/kubernetes/kube-state-metrics"}
          )
        )  and (
          changes(kube_statefulset_status_replicas_updated{job="integrations/kubernetes/kube-state-metrics"}[5m])
            ==
          0
        )
      for: 15m
      labels:
        severity: warning
    - alert: KubeDaemonSetRolloutStuck
      annotations:
        description: DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has
          not finished or progressed for at least 15 minutes.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetrolloutstuck
        summary: DaemonSet rollout is stuck.
      expr: |
        (
          (
            kube_daemonset_status_current_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
             !=
            kube_daemonset_status_desired_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
          ) or (
            kube_daemonset_status_number_misscheduled{job="integrations/kubernetes/kube-state-metrics"}
             !=
            0
          ) or (
            kube_daemonset_status_updated_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
             !=
            kube_daemonset_status_desired_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
          ) or (
            kube_daemonset_status_number_available{job="integrations/kubernetes/kube-state-metrics"}
             !=
            kube_daemonset_status_desired_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
          )
        ) and (
          changes(kube_daemonset_status_updated_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}[5m])
            ==
          0
        )
      for: 15m
      labels:
        severity: warning
    - alert: KubeContainerWaiting
      annotations:
        description: pod/{{ $labels.pod }} in namespace {{ $labels.namespace }} on
          container {{ $labels.container}} has been in waiting state for longer than
          1 hour.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontainerwaiting
        summary: Pod container waiting longer than 1 hour
      expr: |
        sum by (namespace, pod, container, cluster) (kube_pod_container_status_waiting_reason{job="integrations/kubernetes/kube-state-metrics"}) > 0
      for: 1h
      labels:
        severity: warning
    - alert: KubeDaemonSetNotScheduled
      annotations:
        description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset
          }} are not scheduled.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetnotscheduled
        summary: DaemonSet pods are not scheduled.
      expr: |
        kube_daemonset_status_desired_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
          -
        kube_daemonset_status_current_number_scheduled{job="integrations/kubernetes/kube-state-metrics"} > 0
      for: 10m
      labels:
        severity: warning
    - alert: KubeDaemonSetMisScheduled
      annotations:
        description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset
          }} are running where they are not supposed to run.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetmisscheduled
        summary: DaemonSet pods are misscheduled.
      expr: |
        kube_daemonset_status_number_misscheduled{job="integrations/kubernetes/kube-state-metrics"} > 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeJobNotCompleted
      annotations:
        description: Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking
          more than {{ "43200" | humanizeDuration }} to complete.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobnotcompleted
        summary: Job did not complete in time
      expr: |
        time() - max by(namespace, job_name, cluster) (kube_job_status_start_time{job="integrations/kubernetes/kube-state-metrics"}
          and
        kube_job_status_active{job="integrations/kubernetes/kube-state-metrics"} > 0) > 43200
      labels:
        severity: warning
    - alert: KubeJobFailed
      annotations:
        description: Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to
          complete. Removing failed job after investigation should clear this alert.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobfailed
        summary: Job failed to complete.
      expr: |
        kube_job_failed{job="integrations/kubernetes/kube-state-metrics"}  > 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeHpaReplicasMismatch
      annotations:
        description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }}
          has not matched the desired number of replicas for longer than 15 minutes.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpareplicasmismatch
        summary: HPA has not matched desired number of replicas.
      expr: |
        (kube_horizontalpodautoscaler_status_desired_replicas{job="integrations/kubernetes/kube-state-metrics"}
          !=
        kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"})
          and
        (kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"}
          >
        kube_horizontalpodautoscaler_spec_min_replicas{job="integrations/kubernetes/kube-state-metrics"})
          and
        (kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"}
          <
        kube_horizontalpodautoscaler_spec_max_replicas{job="integrations/kubernetes/kube-state-metrics"})
          and
        changes(kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"}[15m]) == 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeHpaMaxedOut
      annotations:
        description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }}
          has been running at max replicas for longer than 15 minutes.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpamaxedout
        summary: HPA is running at max replicas
      expr: |
        kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"}
          ==
        kube_horizontalpodautoscaler_spec_max_replicas{job="integrations/kubernetes/kube-state-metrics"}
      for: 15m
      labels:
        severity: warning
  - name: kubernetes-resources
    rules:
    - alert: KubeCPUOvercommit
      annotations:
        description: Cluster {{ $labels.cluster }} has overcommitted CPU resource
          requests for Pods by {{ $value }} CPU shares and cannot tolerate node failure.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit
        summary: Cluster has overcommitted CPU resource requests.
      expr: |
        sum(namespace_cpu:kube_pod_container_resource_requests:sum{job="integrations/kubernetes/kube-state-metrics",}) by (cluster) - (sum(kube_node_status_allocatable{job="integrations/kubernetes/kube-state-metrics",resource="cpu"}) by (cluster) - max(kube_node_status_allocatable{job="integrations/kubernetes/kube-state-metrics",resource="cpu"}) by (cluster)) > 0
        and
        (sum(kube_node_status_allocatable{job="integrations/kubernetes/kube-state-metrics",resource="cpu"}) by (cluster) - max(kube_node_status_allocatable{job="integrations/kubernetes/kube-state-metrics",resource="cpu"}) by (cluster)) > 0
      for: 10m
      labels:
        severity: warning
    - alert: KubeMemoryOvercommit
      annotations:
        description: Cluster {{ $labels.cluster }} has overcommitted memory resource
          requests for Pods by {{ $value | humanize }} bytes and cannot tolerate node
          failure.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryovercommit
        summary: Cluster has overcommitted memory resource requests.
      expr: |
        sum(namespace_memory:kube_pod_container_resource_requests:sum{}) by (cluster) - (sum(kube_node_status_allocatable{resource="memory", job="integrations/kubernetes/kube-state-metrics"}) by (cluster) - max(kube_node_status_allocatable{resource="memory", job="integrations/kubernetes/kube-state-metrics"}) by (cluster)) > 0
        and
        (sum(kube_node_status_allocatable{resource="memory", job="integrations/kubernetes/kube-state-metrics"}) by (cluster) - max(kube_node_status_allocatable{resource="memory", job="integrations/kubernetes/kube-state-metrics"}) by (cluster)) > 0
      for: 10m
      labels:
        severity: warning
    - alert: KubeCPUQuotaOvercommit
      annotations:
        description: Cluster {{ $labels.cluster }}  has overcommitted CPU resource
          requests for Namespaces.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuquotaovercommit
        summary: Cluster has overcommitted CPU resource requests.
      expr: |
        sum(min without(resource) (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard", resource=~"(cpu|requests.cpu)"})) by (cluster)
          /
        sum(kube_node_status_allocatable{resource="cpu", job="integrations/kubernetes/kube-state-metrics"}) by (cluster)
          > 1.5
      for: 5m
      labels:
        severity: warning
    - alert: KubeMemoryQuotaOvercommit
      annotations:
        description: Cluster {{ $labels.cluster }}  has overcommitted memory resource
          requests for Namespaces.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryquotaovercommit
        summary: Cluster has overcommitted memory resource requests.
      expr: |
        sum(min without(resource) (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard", resource=~"(memory|requests.memory)"})) by (cluster)
          /
        sum(kube_node_status_allocatable{resource="memory", job="integrations/kubernetes/kube-state-metrics"}) by (cluster)
          > 1.5
      for: 5m
      labels:
        severity: warning
    - alert: KubeQuotaAlmostFull
      annotations:
        description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
          }} of its {{ $labels.resource }} quota.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaalmostfull
        summary: Namespace quota is going to be full.
      expr: |
        kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard"} > 0)
          > 0.9 < 1
      for: 15m
      labels:
        severity: info
    - alert: KubeQuotaFullyUsed
      annotations:
        description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
          }} of its {{ $labels.resource }} quota.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotafullyused
        summary: Namespace quota is fully used.
      expr: |
        kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard"} > 0)
          == 1
      for: 15m
      labels:
        severity: info
    - alert: KubeQuotaExceeded
      annotations:
        description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
          }} of its {{ $labels.resource }} quota.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded
        summary: Namespace quota has exceeded the limits.
      expr: |
        kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard"} > 0)
          > 1
      for: 15m
      labels:
        severity: warning
    - alert: CPUThrottlingHigh
      annotations:
        description: '{{ $value | humanizePercentage }} throttling of CPU in namespace
          {{ $labels.namespace }} for container {{ $labels.container }} in pod {{
          $labels.pod }}.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh
        summary: Processes experience elevated CPU throttling.
      expr: |
        sum(increase(container_cpu_cfs_throttled_periods_total{container!="", }[5m])) by (cluster, container, pod, namespace)
          /
        sum(increase(container_cpu_cfs_periods_total{}[5m])) by (cluster, container, pod, namespace)
          > ( 25 / 100 )
      for: 15m
      labels:
        severity: info
  - name: kubernetes-storage
    rules:
    - alert: KubePersistentVolumeFillingUp
      annotations:
        description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim
          }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster
          {{ . }} {{- end }} is only {{ $value | humanizePercentage }} free.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup
        summary: PersistentVolume is filling up.
      expr: |
        (
          kubelet_volume_stats_available_bytes{job="integrations/kubernetes/kubelet"}
            /
          kubelet_volume_stats_capacity_bytes{job="integrations/kubernetes/kubelet"}
        ) < 0.03
        and
        kubelet_volume_stats_used_bytes{job="integrations/kubernetes/kubelet"} > 0
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
      for: 1m
      labels:
        severity: critical
    - alert: KubePersistentVolumeFillingUp
      annotations:
        description: Based on recent sampling, the PersistentVolume claimed by {{
          $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} {{
          with $labels.cluster -}} on Cluster {{ . }} {{- end }} is expected to fill
          up within four days. Currently {{ $value | humanizePercentage }} is available.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup
        summary: PersistentVolume is filling up.
      expr: |
        (
          kubelet_volume_stats_available_bytes{job="integrations/kubernetes/kubelet"}
            /
          kubelet_volume_stats_capacity_bytes{job="integrations/kubernetes/kubelet"}
        ) < 0.15
        and
        kubelet_volume_stats_used_bytes{job="integrations/kubernetes/kubelet"} > 0
        and
        predict_linear(kubelet_volume_stats_available_bytes{job="integrations/kubernetes/kubelet"}[6h], 4 * 24 * 3600) < 0
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
      for: 1h
      labels:
        severity: warning
    - alert: KubePersistentVolumeInodesFillingUp
      annotations:
        description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim
          }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster
          {{ . }} {{- end }} only has {{ $value | humanizePercentage }} free inodes.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeinodesfillingup
        summary: PersistentVolumeInodes are filling up.
      expr: |
        (
          kubelet_volume_stats_inodes_free{job="integrations/kubernetes/kubelet"}
            /
          kubelet_volume_stats_inodes{job="integrations/kubernetes/kubelet"}
        ) < 0.03
        and
        kubelet_volume_stats_inodes_used{job="integrations/kubernetes/kubelet"} > 0
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
      for: 1m
      labels:
        severity: critical
    - alert: KubePersistentVolumeInodesFillingUp
      annotations:
        description: Based on recent sampling, the PersistentVolume claimed by {{
          $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} {{
          with $labels.cluster -}} on Cluster {{ . }} {{- end }} is expected to run
          out of inodes within four days. Currently {{ $value | humanizePercentage
          }} of its inodes are free.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeinodesfillingup
        summary: PersistentVolumeInodes are filling up.
      expr: |
        (
          kubelet_volume_stats_inodes_free{job="integrations/kubernetes/kubelet"}
            /
          kubelet_volume_stats_inodes{job="integrations/kubernetes/kubelet"}
        ) < 0.15
        and
        kubelet_volume_stats_inodes_used{job="integrations/kubernetes/kubelet"} > 0
        and
        predict_linear(kubelet_volume_stats_inodes_free{job="integrations/kubernetes/kubelet"}[6h], 4 * 24 * 3600) < 0
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
      for: 1h
      labels:
        severity: warning
    - alert: KubePersistentVolumeErrors
      annotations:
        description: The persistent volume {{ $labels.persistentvolume }} {{ with
          $labels.cluster -}} on Cluster {{ . }} {{- end }} has status {{ $labels.phase
          }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeerrors
        summary: PersistentVolume is having issues with provisioning.
      expr: |
        kube_persistentvolume_status_phase{phase=~"Failed|Pending",job="integrations/kubernetes/kube-state-metrics"} > 0
      for: 5m
      labels:
        severity: critical
  - name: kubernetes-system
    rules:
    - alert: KubeVersionMismatch
      annotations:
        description: There are {{ $value }} different semantic versions of Kubernetes
          components running.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeversionmismatch
        summary: Different semantic versions of Kubernetes components running.
      expr: |
        count by (cluster) (count by (git_version, cluster) (label_replace(kubernetes_build_info{job!~"kube-dns|coredns"},"git_version","$1","git_version","(v[0-9]*.[0-9]*).*"))) > 1
      for: 15m
      labels:
        severity: warning
    - alert: KubeClientErrors
      annotations:
        description: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance
          }}' is experiencing {{ $value | humanizePercentage }} errors.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclienterrors
        summary: Kubernetes API server client is experiencing errors.
      expr: |
        (sum(rate(rest_client_requests_total{job="integrations/kubernetes/apiserver",code=~"5.."}[5m])) by (cluster, instance, job, namespace)
          /
        sum(rate(rest_client_requests_total{job="integrations/kubernetes/apiserver"}[5m])) by (cluster, instance, job, namespace))
        > 0.01
      for: 15m
      labels:
        severity: warning
  - name: kube-apiserver-slos
    rules:
    - alert: KubeAPIErrorBudgetBurn
      annotations:
        description: The API server is burning too much error budget.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn
        summary: The API server is burning too much error budget.
      expr: |
        sum(apiserver_request:burnrate1h) > (14.40 * 0.01000)
        and
        sum(apiserver_request:burnrate5m) > (14.40 * 0.01000)
      for: 2m
      labels:
        long: 1h
        severity: critical
        short: 5m
    - alert: KubeAPIErrorBudgetBurn
      annotations:
        description: The API server is burning too much error budget.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn
        summary: The API server is burning too much error budget.
      expr: |
        sum(apiserver_request:burnrate6h) > (6.00 * 0.01000)
        and
        sum(apiserver_request:burnrate30m) > (6.00 * 0.01000)
      for: 15m
      labels:
        long: 6h
        severity: critical
        short: 30m
    - alert: KubeAPIErrorBudgetBurn
      annotations:
        description: The API server is burning too much error budget.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn
        summary: The API server is burning too much error budget.
      expr: |
        sum(apiserver_request:burnrate1d) > (3.00 * 0.01000)
        and
        sum(apiserver_request:burnrate2h) > (3.00 * 0.01000)
      for: 1h
      labels:
        long: 1d
        severity: warning
        short: 2h
    - alert: KubeAPIErrorBudgetBurn
      annotations:
        description: The API server is burning too much error budget.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn
        summary: The API server is burning too much error budget.
      expr: |
        sum(apiserver_request:burnrate3d) > (1.00 * 0.01000)
        and
        sum(apiserver_request:burnrate6h) > (1.00 * 0.01000)
      for: 3h
      labels:
        long: 3d
        severity: warning
        short: 6h
  - name: kubernetes-system-apiserver
    rules:
    - alert: KubeClientCertificateExpiration
      annotations:
        description: A client certificate used to authenticate to kubernetes apiserver
          is expiring in less than 7.0 days.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration
        summary: Client certificate is about to expire.
      expr: |
        apiserver_client_certificate_expiration_seconds_count{job="integrations/kubernetes/apiserver"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="integrations/kubernetes/apiserver"}[5m]))) < 604800
      for: 5m
      labels:
        severity: warning
    - alert: KubeClientCertificateExpiration
      annotations:
        description: A client certificate used to authenticate to kubernetes apiserver
          is expiring in less than 24.0 hours.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration
        summary: Client certificate is about to expire.
      expr: |
        apiserver_client_certificate_expiration_seconds_count{job="integrations/kubernetes/apiserver"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="integrations/kubernetes/apiserver"}[5m]))) < 86400
      for: 5m
      labels:
        severity: critical
    - alert: KubeAggregatedAPIErrors
      annotations:
        description: Kubernetes aggregated API {{ $labels.name }}/{{ $labels.namespace
          }} has reported errors. It has appeared unavailable {{ $value | humanize
          }} times averaged over the past 10m.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeaggregatedapierrors
        summary: Kubernetes aggregated API has reported errors.
      expr: |
        sum by(name, namespace, cluster)(increase(aggregator_unavailable_apiservice_total{job="integrations/kubernetes/apiserver"}[10m])) > 4
      labels:
        severity: warning
    - alert: KubeAggregatedAPIDown
      annotations:
        description: Kubernetes aggregated API {{ $labels.name }}/{{ $labels.namespace
          }} has been only {{ $value | humanize }}% available over the last 10m.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeaggregatedapidown
        summary: Kubernetes aggregated API is down.
      expr: |
        (1 - max by(name, namespace, cluster)(avg_over_time(aggregator_unavailable_apiservice{job="integrations/kubernetes/apiserver"}[10m]))) * 100 < 85
      for: 5m
      labels:
        severity: warning
    - alert: KubeAPIDown
      annotations:
        description: KubeAPI has disappeared from Prometheus target discovery.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapidown
        summary: Target disappeared from Prometheus target discovery.
      expr: |
        absent(up{job="integrations/kubernetes/apiserver"} == 1)
      for: 15m
      labels:
        severity: critical
    - alert: KubeAPITerminatedRequests
      annotations:
        description: The kubernetes apiserver has terminated {{ $value | humanizePercentage
          }} of its incoming requests.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapiterminatedrequests
        summary: The kubernetes apiserver has terminated {{ $value | humanizePercentage
          }} of its incoming requests.
      expr: |
        sum(rate(apiserver_request_terminations_total{job="integrations/kubernetes/apiserver"}[10m]))  / (  sum(rate(apiserver_request_total{job="integrations/kubernetes/apiserver"}[10m])) + sum(rate(apiserver_request_terminations_total{job="integrations/kubernetes/apiserver"}[10m])) ) > 0.20
      for: 5m
      labels:
        severity: warning
  - name: kubernetes-system-kubelet
    rules:
    - alert: KubeNodeNotReady
      annotations:
        description: '{{ $labels.node }} has been unready for more than 15 minutes.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodenotready
        summary: Node is not ready.
      expr: |
        kube_node_status_condition{job="integrations/kubernetes/kube-state-metrics",condition="Ready",status="true"} == 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeNodeUnreachable
      annotations:
        description: '{{ $labels.node }} is unreachable and some workloads may be
          rescheduled.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodeunreachable
        summary: Node is unreachable.
      expr: |
        (kube_node_spec_taint{job="integrations/kubernetes/kube-state-metrics",key="node.kubernetes.io/unreachable",effect="NoSchedule"} unless ignoring(key,value) kube_node_spec_taint{job="integrations/kubernetes/kube-state-metrics",key=~"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn"}) == 1
      for: 15m
      labels:
        severity: warning
    - alert: KubeletTooManyPods
      annotations:
        description: Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage
          }} of its Pod capacity.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubelettoomanypods
        summary: Kubelet is running at capacity.
      expr: |
        count by(cluster, node) (
          (kube_pod_status_phase{job="integrations/kubernetes/kube-state-metrics",phase="Running"} == 1) * on(instance,pod,namespace,cluster) group_left(node) topk by(instance,pod,namespace,cluster) (1, kube_pod_info{job="integrations/kubernetes/kube-state-metrics"})
        )
        /
        max by(cluster, node) (
          kube_node_status_capacity{job="integrations/kubernetes/kube-state-metrics",resource="pods"} != 1
        ) > 0.95
      for: 15m
      labels:
        severity: info
    - alert: KubeNodeReadinessFlapping
      annotations:
        description: The readiness status of node {{ $labels.node }} has changed {{
          $value }} times in the last 15 minutes.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodereadinessflapping
        summary: Node readiness status is flapping.
      expr: |
        sum(changes(kube_node_status_condition{job="integrations/kubernetes/kube-state-metrics",status="true",condition="Ready"}[15m])) by (cluster, node) > 2
      for: 15m
      labels:
        severity: warning
    - alert: KubeletPlegDurationHigh
      annotations:
        description: The Kubelet Pod Lifecycle Event Generator has a 99th percentile
          duration of {{ $value }} seconds on node {{ $labels.node }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletplegdurationhigh
        summary: Kubelet Pod Lifecycle Event Generator is taking too long to relist.
      expr: |
        node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile="0.99"} >= 10
      for: 5m
      labels:
        severity: warning
    - alert: KubeletPodStartUpLatencyHigh
      annotations:
        description: Kubelet Pod startup 99th percentile latency is {{ $value }} seconds
          on node {{ $labels.node }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletpodstartuplatencyhigh
        summary: Kubelet Pod startup latency is too high.
      expr: |
        histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{job="integrations/kubernetes/kubelet"}[5m])) by (cluster, instance, le)) * on(cluster, instance) group_left(node) kubelet_node_name{job="integrations/kubernetes/kubelet"} > 60
      for: 15m
      labels:
        severity: warning
    - alert: KubeletClientCertificateExpiration
      annotations:
        description: Client certificate for Kubelet on node {{ $labels.node }} expires
          in {{ $value | humanizeDuration }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration
        summary: Kubelet client certificate is about to expire.
      expr: |
        kubelet_certificate_manager_client_ttl_seconds < 604800
      labels:
        severity: warning
    - alert: KubeletClientCertificateExpiration
      annotations:
        description: Client certificate for Kubelet on node {{ $labels.node }} expires
          in {{ $value | humanizeDuration }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration
        summary: Kubelet client certificate is about to expire.
      expr: |
        kubelet_certificate_manager_client_ttl_seconds < 86400
      labels:
        severity: critical
    - alert: KubeletServerCertificateExpiration
      annotations:
        description: Server certificate for Kubelet on node {{ $labels.node }} expires
          in {{ $value | humanizeDuration }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration
        summary: Kubelet server certificate is about to expire.
      expr: |
        kubelet_certificate_manager_server_ttl_seconds < 604800
      labels:
        severity: warning
    - alert: KubeletServerCertificateExpiration
      annotations:
        description: Server certificate for Kubelet on node {{ $labels.node }} expires
          in {{ $value | humanizeDuration }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration
        summary: Kubelet server certificate is about to expire.
      expr: |
        kubelet_certificate_manager_server_ttl_seconds < 86400
      labels:
        severity: critical
    - alert: KubeletClientCertificateRenewalErrors
      annotations:
        description: Kubelet on node {{ $labels.node }} has failed to renew its client
          certificate ({{ $value | humanize }} errors in the last 5 minutes).
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificaterenewalerrors
        summary: Kubelet has failed to renew its client certificate.
      expr: |
        increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeletServerCertificateRenewalErrors
      annotations:
        description: Kubelet on node {{ $labels.node }} has failed to renew its server
          certificate ({{ $value | humanize }} errors in the last 5 minutes).
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificaterenewalerrors
        summary: Kubelet has failed to renew its server certificate.
      expr: |
        increase(kubelet_server_expiration_renew_errors[5m]) > 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeletDown
      annotations:
        description: Kubelet has disappeared from Prometheus target discovery.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletdown
        summary: Target disappeared from Prometheus target discovery.
      expr: |
        absent(up{job="integrations/kubernetes/kubelet"} == 1)
      for: 15m
      labels:
        severity: critical
  - name: kubernetes-system-scheduler
    rules:
    - alert: KubeSchedulerDown
      annotations:
        description: KubeScheduler has disappeared from Prometheus target discovery.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeschedulerdown
        summary: Target disappeared from Prometheus target discovery.
      expr: |
        absent(up{job="kube-scheduler"} == 1)
      for: 15m
      labels:
        severity: critical
  - name: kubernetes-system-controller-manager
    rules:
    - alert: KubeControllerManagerDown
      annotations:
        description: KubeControllerManager has disappeared from Prometheus target
          discovery.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontrollermanagerdown
        summary: Target disappeared from Prometheus target discovery.
      expr: |
        absent(up{job="kube-controller-manager"} == 1)
      for: 15m
      labels:
        severity: critical
  - name: kubernetes-system-kube-proxy
    rules:
    - alert: KubeProxyDown
      annotations:
        description: KubeProxy has disappeared from Prometheus target discovery.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeproxydown
        summary: Target disappeared from Prometheus target discovery.
      expr: |
        absent(up{job="kube-proxy"} == 1)
      for: 15m
      labels:
        severity: critical
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kubernetes-mixin-rules
  namespace: monitoring-system
spec:
  groups:
  - interval: 3m
    name: kube-apiserver-availability.rules
    rules:
    - expr: |
        avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 * 30
      record: code_verb:apiserver_request_total:increase30d
    - expr: |
        sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"LIST|GET"})
      labels:
        verb: read
      record: code:apiserver_request_total:increase30d
    - expr: |
        sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
      labels:
        verb: write
      record: code:apiserver_request_total:increase30d
    - expr: |
        sum by (cluster, verb, scope) (increase(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver"}[1h]))
      record: cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase1h
    - expr: |
        sum by (cluster, verb, scope) (avg_over_time(cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase1h[30d]) * 24 * 30)
      record: cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d
    - expr: |
        sum by (cluster, verb, scope, le) (increase(apiserver_request_sli_duration_seconds_bucket[1h]))
      record: cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h
    - expr: |
        sum by (cluster, verb, scope, le) (avg_over_time(cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h[30d]) * 24 * 30)
      record: cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d
    - expr: |
        1 - (
          (
            # write too slow
            sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
            -
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"POST|PUT|PATCH|DELETE",le="1"})
          ) +
          (
            # read too slow
            sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"LIST|GET"})
            -
            (
              (
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope=~"resource|",le="1"})
                or
                vector(0)
              )
              +
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="namespace",le="5"})
              +
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="cluster",le="30"})
            )
          ) +
          # errors
          sum by (cluster) (code:apiserver_request_total:increase30d{code=~"5.."} or vector(0))
        )
        /
        sum by (cluster) (code:apiserver_request_total:increase30d)
      labels:
        verb: all
      record: apiserver_request:availability30d
    - expr: |
        1 - (
          sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"LIST|GET"})
          -
          (
            # too slow
            (
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope=~"resource|",le="1"})
              or
              vector(0)
            )
            +
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="namespace",le="5"})
            +
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="cluster",le="30"})
          )
          +
          # errors
          sum by (cluster) (code:apiserver_request_total:increase30d{verb="read",code=~"5.."} or vector(0))
        )
        /
        sum by (cluster) (code:apiserver_request_total:increase30d{verb="read"})
      labels:
        verb: read
      record: apiserver_request:availability30d
    - expr: |
        1 - (
          (
            # too slow
            sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
            -
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"POST|PUT|PATCH|DELETE",le="1"})
          )
          +
          # errors
          sum by (cluster) (code:apiserver_request_total:increase30d{verb="write",code=~"5.."} or vector(0))
        )
        /
        sum by (cluster) (code:apiserver_request_total:increase30d{verb="write"})
      labels:
        verb: write
      record: apiserver_request:availability30d
    - expr: |
        sum by (cluster,code,resource) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[5m]))
      labels:
        verb: read
      record: code_resource:apiserver_request_total:rate5m
    - expr: |
        sum by (cluster,code,resource) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
      labels:
        verb: write
      record: code_resource:apiserver_request_total:rate5m
    - expr: |
        sum by (cluster, code, verb) (increase(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"2.."}[1h]))
      record: code_verb:apiserver_request_total:increase1h
    - expr: |
        sum by (cluster, code, verb) (increase(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"3.."}[1h]))
      record: code_verb:apiserver_request_total:increase1h
    - expr: |
        sum by (cluster, code, verb) (increase(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"4.."}[1h]))
      record: code_verb:apiserver_request_total:increase1h
    - expr: |
        sum by (cluster, code, verb) (increase(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
      record: code_verb:apiserver_request_total:increase1h
  - name: kube-apiserver-burnrate.rules
    rules:
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[1d]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[1d]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[1d]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[1d]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[1d]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[1d]))
      labels:
        verb: read
      record: apiserver_request:burnrate1d
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[1h]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[1h]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[1h]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[1h]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[1h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[1h]))
      labels:
        verb: read
      record: apiserver_request:burnrate1h
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[2h]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[2h]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[2h]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[2h]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[2h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[2h]))
      labels:
        verb: read
      record: apiserver_request:burnrate2h
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[30m]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[30m]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[30m]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[30m]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[30m]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[30m]))
      labels:
        verb: read
      record: apiserver_request:burnrate30m
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[3d]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[3d]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[3d]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[3d]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[3d]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[3d]))
      labels:
        verb: read
      record: apiserver_request:burnrate3d
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[5m]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[5m]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[5m]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[5m]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[5m]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[5m]))
      labels:
        verb: read
      record: apiserver_request:burnrate5m
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[6h]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[6h]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[6h]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[6h]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[6h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[6h]))
      labels:
        verb: read
      record: apiserver_request:burnrate6h
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[1d]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[1d]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1d]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1d]))
      labels:
        verb: write
      record: apiserver_request:burnrate1d
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[1h]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[1h]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1h]))
      labels:
        verb: write
      record: apiserver_request:burnrate1h
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[2h]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[2h]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[2h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[2h]))
      labels:
        verb: write
      record: apiserver_request:burnrate2h
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[30m]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[30m]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[30m]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[30m]))
      labels:
        verb: write
      record: apiserver_request:burnrate30m
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[3d]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[3d]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[3d]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[3d]))
      labels:
        verb: write
      record: apiserver_request:burnrate3d
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[5m]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[5m]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[5m]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
      labels:
        verb: write
      record: apiserver_request:burnrate5m
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[6h]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[6h]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[6h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[6h]))
      labels:
        verb: write
      record: apiserver_request:burnrate6h
  - name: kube-apiserver-histogram.rules
    rules:
    - expr: |
        histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[5m]))) > 0
      labels:
        quantile: "0.99"
        verb: read
      record: cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[5m]))) > 0
      labels:
        quantile: "0.99"
        verb: write
      record: cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile
  - name: k8s.rules.container_cpu_usage_seconds_total
    rules:
    - expr: |
        sum by (cluster, namespace, pod, container) (
          irate(container_cpu_usage_seconds_total{job="integrations/kubernetes/cadvisor", image!=""}[5m])
        ) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (
          1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate
  - name: k8s.rules.container_memory_working_set_bytes
    rules:
    - expr: |
        container_memory_working_set_bytes{job="integrations/kubernetes/cadvisor", image!=""}
        * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
          max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_memory_working_set_bytes
  - name: k8s.rules.container_memory_rss
    rules:
    - expr: |
        container_memory_rss{job="integrations/kubernetes/cadvisor", image!=""}
        * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
          max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_memory_rss
  - name: k8s.rules.container_memory_cache
    rules:
    - expr: |
        container_memory_cache{job="integrations/kubernetes/cadvisor", image!=""}
        * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
          max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_memory_cache
  - name: k8s.rules.container_memory_swap
    rules:
    - expr: |
        container_memory_swap{job="integrations/kubernetes/cadvisor", image!=""}
        * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
          max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_memory_swap
  - name: k8s.rules.container_resource
    rules:
    - expr: |
        kube_pod_container_resource_requests{resource="memory",job="integrations/kubernetes/kube-state-metrics"}  * on (namespace, pod, cluster)
        group_left() max by (namespace, pod, cluster) (
          (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
        )
      record: cluster:namespace:pod_memory:active:kube_pod_container_resource_requests
    - expr: |
        sum by (namespace, cluster) (
            sum by (namespace, pod, cluster) (
                max by (namespace, pod, container, cluster) (
                  kube_pod_container_resource_requests{resource="memory",job="integrations/kubernetes/kube-state-metrics"}
                ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                  kube_pod_status_phase{phase=~"Pending|Running"} == 1
                )
            )
        )
      record: namespace_memory:kube_pod_container_resource_requests:sum
    - expr: |
        kube_pod_container_resource_requests{resource="cpu",job="integrations/kubernetes/kube-state-metrics"}  * on (namespace, pod, cluster)
        group_left() max by (namespace, pod, cluster) (
          (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
        )
      record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests
    - expr: |
        sum by (namespace, cluster) (
            sum by (namespace, pod, cluster) (
                max by (namespace, pod, container, cluster) (
                  kube_pod_container_resource_requests{resource="cpu",job="integrations/kubernetes/kube-state-metrics"}
                ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                  kube_pod_status_phase{phase=~"Pending|Running"} == 1
                )
            )
        )
      record: namespace_cpu:kube_pod_container_resource_requests:sum
    - expr: |
        kube_pod_container_resource_limits{resource="memory",job="integrations/kubernetes/kube-state-metrics"}  * on (namespace, pod, cluster)
        group_left() max by (namespace, pod, cluster) (
          (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
        )
      record: cluster:namespace:pod_memory:active:kube_pod_container_resource_limits
    - expr: |
        sum by (namespace, cluster) (
            sum by (namespace, pod, cluster) (
                max by (namespace, pod, container, cluster) (
                  kube_pod_container_resource_limits{resource="memory",job="integrations/kubernetes/kube-state-metrics"}
                ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                  kube_pod_status_phase{phase=~"Pending|Running"} == 1
                )
            )
        )
      record: namespace_memory:kube_pod_container_resource_limits:sum
    - expr: |
        kube_pod_container_resource_limits{resource="cpu",job="integrations/kubernetes/kube-state-metrics"}  * on (namespace, pod, cluster)
        group_left() max by (namespace, pod, cluster) (
         (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
         )
      record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits
    - expr: |
        sum by (namespace, cluster) (
            sum by (namespace, pod, cluster) (
                max by (namespace, pod, container, cluster) (
                  kube_pod_container_resource_limits{resource="cpu",job="integrations/kubernetes/kube-state-metrics"}
                ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                  kube_pod_status_phase{phase=~"Pending|Running"} == 1
                )
            )
        )
      record: namespace_cpu:kube_pod_container_resource_limits:sum
  - name: k8s.rules.pod_owner
    rules:
    - expr: |
        max by (cluster, namespace, workload, pod) (
          label_replace(
            label_replace(
              kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="ReplicaSet"},
              "replicaset", "$1", "owner_name", "(.*)"
            ) * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (
              1, max by (replicaset, namespace, owner_name) (
                kube_replicaset_owner{job="integrations/kubernetes/kube-state-metrics"}
              )
            ),
            "workload", "$1", "owner_name", "(.*)"
          )
        )
      labels:
        workload_type: deployment
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |
        max by (cluster, namespace, workload, pod) (
          label_replace(
            kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="DaemonSet"},
            "workload", "$1", "owner_name", "(.*)"
          )
        )
      labels:
        workload_type: daemonset
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |
        max by (cluster, namespace, workload, pod) (
          label_replace(
            kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="StatefulSet"},
            "workload", "$1", "owner_name", "(.*)"
          )
        )
      labels:
        workload_type: statefulset
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |
        max by (cluster, namespace, workload, pod) (
          label_replace(
            kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="Job"},
            "workload", "$1", "owner_name", "(.*)"
          )
        )
      labels:
        workload_type: job
      record: namespace_workload_pod:kube_pod_owner:relabel
  - name: kube-scheduler.rules
    rules:
    - expr: |
        histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.99"
      record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.99"
      record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.99"
      record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.9"
      record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.9"
      record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.9"
      record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.5"
      record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.5"
      record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.5"
      record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
  - name: node.rules
    rules:
    - expr: |
        topk by(cluster, namespace, pod) (1,
          max by (cluster, node, namespace, pod) (
            label_replace(kube_pod_info{job="integrations/kubernetes/kube-state-metrics",node!=""}, "pod", "$1", "pod", "(.*)")
        ))
      record: 'node_namespace_pod:kube_pod_info:'
    - expr: |
        count by (cluster, node) (
          node_cpu_seconds_total{mode="idle",job="integrations/kubernetes/node-exporter"}
          * on (cluster, namespace, pod) group_left(node)
          topk by(cluster, namespace, pod) (1, node_namespace_pod:kube_pod_info:)
        )
      record: node:node_num_cpu:sum
    - expr: |
        sum(
          node_memory_MemAvailable_bytes{job="integrations/kubernetes/node-exporter"} or
          (
            node_memory_Buffers_bytes{job="integrations/kubernetes/node-exporter"} +
            node_memory_Cached_bytes{job="integrations/kubernetes/node-exporter"} +
            node_memory_MemFree_bytes{job="integrations/kubernetes/node-exporter"} +
            node_memory_Slab_bytes{job="integrations/kubernetes/node-exporter"}
          )
        ) by (cluster)
      record: :node_memory_MemAvailable_bytes:sum
    - expr: |
        avg by (cluster, node) (
          sum without (mode) (
            rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal",job="integrations/kubernetes/node-exporter"}[5m])
          )
        )
      record: node:node_cpu_utilization:ratio_rate5m
    - expr: |
        avg by (cluster) (
          node:node_cpu_utilization:ratio_rate5m
        )
      record: cluster:node_cpu:ratio_rate5m
  - name: kubelet.rules
    rules:
    - expr: |
        histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="integrations/kubernetes/kubelet"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job="integrations/kubernetes/kubelet"})
      labels:
        quantile: "0.99"
      record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="integrations/kubernetes/kubelet"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job="integrations/kubernetes/kubelet"})
      labels:
        quantile: "0.9"
      record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="integrations/kubernetes/kubelet"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job="integrations/kubernetes/kubelet"})
      labels:
        quantile: "0.5"
      record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: mimir-mixin-alerts
  namespace: monitoring-system
spec:
  groups:
  - name: mimir_alerts
    rules:
    - alert: MimirIngesterUnhealthy
      annotations:
        message: Mimir cluster {{ $labels.cluster }}/{{ $labels.namespace }} has {{
          printf "%f" $value }} unhealthy ingester(s).
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringesterunhealthy
      expr: |
        min by (cluster, namespace) (cortex_ring_members{state="Unhealthy", name="ingester"}) > 0
      for: 15m
      labels:
        severity: critical
    - alert: MimirRequestErrors
      annotations:
        message: |
          The route {{ $labels.route }} in {{ $labels.cluster }}/{{ $labels.namespace }} is experiencing {{ printf "%.2f" $value }}% errors.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirrequesterrors
      expr: |
        100 * sum by (cluster, namespace, job, route) (rate(cortex_request_duration_seconds_count{status_code=~"5..",route!~"ready|debug_pprof"}[1m]))
          /
        sum by (cluster, namespace, job, route) (rate(cortex_request_duration_seconds_count{route!~"ready|debug_pprof"}[1m]))
          > 1
      for: 15m
      labels:
        severity: critical
    - alert: MimirRequestLatency
      annotations:
        message: |
          {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf "%.2f" $value }}s 99th percentile latency.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirrequestlatency
      expr: |
        cluster_namespace_job_route:cortex_request_duration_seconds:99quantile{route!~"metrics|/frontend.Frontend/Process|ready|/schedulerpb.SchedulerForFrontend/FrontendLoop|/schedulerpb.SchedulerForQuerier/QuerierLoop|debug_pprof"}
           >
        2.5
      for: 15m
      labels:
        severity: warning
    - alert: MimirQueriesIncorrect
      annotations:
        message: |
          The Mimir cluster {{ $labels.cluster }}/{{ $labels.namespace }} is experiencing {{ printf "%.2f" $value }}% incorrect query results.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirqueriesincorrect
      expr: |
        100 * sum by (cluster, namespace) (rate(test_exporter_test_case_result_total{result="fail"}[5m]))
          /
        sum by (cluster, namespace) (rate(test_exporter_test_case_result_total[5m])) > 1
      for: 15m
      labels:
        severity: warning
    - alert: MimirInconsistentRuntimeConfig
      annotations:
        message: |
          An inconsistent runtime config file is used across cluster {{ $labels.cluster }}/{{ $labels.namespace }}.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirinconsistentruntimeconfig
      expr: |
        count(count by(cluster, namespace, job, sha256) (cortex_runtime_config_hash)) without(sha256) > 1
      for: 1h
      labels:
        severity: critical
    - alert: MimirBadRuntimeConfig
      annotations:
        message: |
          {{ $labels.job }} failed to reload runtime config.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirbadruntimeconfig
      expr: |
        # The metric value is reset to 0 on error while reloading the config at runtime.
        cortex_runtime_config_last_reload_successful == 0
      for: 5m
      labels:
        severity: critical
    - alert: MimirFrontendQueriesStuck
      annotations:
        message: |
          There are {{ $value }} queued up queries in {{ $labels.cluster }}/{{ $labels.namespace }} {{ $labels.job }}.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirfrontendqueriesstuck
      expr: |
        sum by (cluster, namespace, job) (min_over_time(cortex_query_frontend_queue_length[1m])) > 0
      for: 5m
      labels:
        severity: critical
    - alert: MimirSchedulerQueriesStuck
      annotations:
        message: |
          There are {{ $value }} queued up queries in {{ $labels.cluster }}/{{ $labels.namespace }} {{ $labels.job }}.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirschedulerqueriesstuck
      expr: |
        sum by (cluster, namespace, job) (min_over_time(cortex_query_scheduler_queue_length[1m])) > 0
      for: 7m
      labels:
        severity: critical
    - alert: MimirCacheRequestErrors
      annotations:
        message: |
          The cache {{ $labels.name }} used by Mimir {{ $labels.cluster }}/{{ $labels.namespace }} is experiencing {{ printf "%.2f" $value }}% errors for {{ $labels.operation }} operation.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimircacherequesterrors
      expr: |
        (
          sum by(cluster, namespace, name, operation) (
            rate(thanos_memcached_operation_failures_total[1m])
            or
            rate(thanos_cache_operation_failures_total[1m])
          )
          /
          sum by(cluster, namespace, name, operation) (
            rate(thanos_memcached_operations_total[1m])
            or
            rate(thanos_cache_operations_total[1m])
          )
        ) * 100 > 5
      for: 5m
      labels:
        severity: warning
    - alert: MimirIngesterRestarts
      annotations:
        message: Mimir {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has restarted {{ printf "%.2f" $value }} times in the last 30 mins.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringesterrestarts
      expr: |
        (
          sum by(cluster, namespace, pod) (
            increase(kube_pod_container_status_restarts_total{container=~"((mimir|ingester|mimir-write)|(mimir|mimir-write|distributor|ingester))"}[30m])
          )
          >= 2
        )
        and
        (
          count by(cluster, namespace, pod) (cortex_build_info) > 0
        )
      labels:
        severity: warning
    - alert: MimirKVStoreFailure
      annotations:
        message: |
          Mimir {{ $labels.pod }} in  {{ $labels.cluster }}/{{ $labels.namespace }} is failing to talk to the KV store {{ $labels.kv_name }}.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirkvstorefailure
      expr: |
        (
          sum by(cluster, namespace, pod, status_code, kv_name) (rate(cortex_kv_request_duration_seconds_count{status_code!~"2.+"}[1m]))
          /
          sum by(cluster, namespace, pod, status_code, kv_name) (rate(cortex_kv_request_duration_seconds_count[1m]))
        )
        # We want to get alerted only in case there's a constant failure.
        == 1
      for: 5m
      labels:
        severity: critical
    - alert: MimirMemoryMapAreasTooHigh
      annotations:
        message: '{{ $labels.job }}/{{ $labels.pod }} has a number of mmap-ed areas
          close to the limit.'
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirmemorymapareastoohigh
      expr: |
        process_memory_map_areas{job=~".*/(mimir|ingester.*|cortex|mimir-write.*|mimir|store-gateway.*|cortex|mimir-backend.*)"} / process_memory_map_areas_limit{job=~".*/(mimir|ingester.*|cortex|mimir-write.*|mimir|store-gateway.*|cortex|mimir-backend.*)"} > 0.8
      for: 5m
      labels:
        severity: critical
    - alert: MimirIngesterInstanceHasNoTenants
      annotations:
        message: Mimir ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has no tenants assigned.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringesterinstancehasnotenants
      expr: |
        (min by(cluster, namespace, pod) (cortex_ingester_memory_users) == 0)
        and on (cluster, namespace)
        # Only if there are more time-series than would be expected due to continuous testing load
        (
          sum by(cluster, namespace) (cortex_ingester_memory_series)
          /
          max by(cluster, namespace) (cortex_distributor_replication_factor)
        ) > 100000
      for: 1h
      labels:
        severity: warning
    - alert: MimirRulerInstanceHasNoRuleGroups
      annotations:
        message: Mimir ruler {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has no rule groups assigned.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirrulerinstancehasnorulegroups
      expr: |
        # Alert on ruler instances in microservices mode that have no rule groups assigned,
        min by(cluster, namespace, pod) (cortex_ruler_managers_total{pod=~"(.*mimir-)?(mimir|ruler|mimir-backend).*"}) == 0
        # but only if other ruler instances of the same cell do have rule groups assigned
        and on (cluster, namespace)
        (max by(cluster, namespace) (cortex_ruler_managers_total) > 0)
        # and there are more than two instances overall
        and on (cluster, namespace)
        (count by (cluster, namespace) (cortex_ruler_managers_total) > 2)
      for: 1h
      labels:
        severity: warning
    - alert: MimirIngestedDataTooFarInTheFuture
      annotations:
        message: Mimir ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has ingested samples with timestamps more than 1h in the future.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringesteddatatoofarinthefuture
      expr: |
        max by(cluster, namespace, pod) (
            cortex_ingester_tsdb_head_max_timestamp_seconds - time()
            and
            cortex_ingester_tsdb_head_max_timestamp_seconds > 0
        ) > 60*60
      for: 5m
      labels:
        severity: warning
    - alert: MimirStoreGatewayTooManyFailedOperations
      annotations:
        message: Mimir store-gateway {{ $labels.pod }} in {{ $labels.cluster }}/{{
          $labels.namespace }} is experiencing {{ $value | humanizePercentage }} errors
          while doing {{ $labels.operation }} on the object storage.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirstoregatewaytoomanyfailedoperations
      expr: |
        sum by(cluster, namespace, operation) (rate(thanos_objstore_bucket_operation_failures_total{component="store-gateway"}[1m])) > 0
      for: 5m
      labels:
        severity: warning
    - alert: MimirRingMembersMismatch
      annotations:
        message: |
          Number of members in Mimir ingester hash ring does not match the expected number in {{ $labels.cluster }}/{{ $labels.namespace }}.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirringmembersmismatch
      expr: |
        (
          avg by(cluster, namespace) (sum by(cluster, namespace, pod) (cortex_ring_members{name="ingester",job=~".*/(mimir|ingester.*|cortex|mimir-write.*)"}))
          != sum by(cluster, namespace) (up{job=~".*/(mimir|ingester.*|cortex|mimir-write.*)"})
        )
        and
        (
          count by(cluster, namespace) (cortex_build_info) > 0
        )
      for: 15m
      labels:
        component: ingester
        severity: warning
  - name: mimir_instance_limits_alerts
    rules:
    - alert: MimirIngesterReachingSeriesLimit
      annotations:
        message: |
          Ingester {{ $labels.job }}/{{ $labels.pod }} has reached {{ $value | humanizePercentage }} of its series limit.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringesterreachingserieslimit
      expr: |
        (
            (cortex_ingester_memory_series / ignoring(limit) cortex_ingester_instance_limits{limit="max_series"})
            and ignoring (limit)
            (cortex_ingester_instance_limits{limit="max_series"} > 0)
        ) > 0.8
      for: 3h
      labels:
        severity: warning
    - alert: MimirIngesterReachingSeriesLimit
      annotations:
        message: |
          Ingester {{ $labels.job }}/{{ $labels.pod }} has reached {{ $value | humanizePercentage }} of its series limit.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringesterreachingserieslimit
      expr: |
        (
            (cortex_ingester_memory_series / ignoring(limit) cortex_ingester_instance_limits{limit="max_series"})
            and ignoring (limit)
            (cortex_ingester_instance_limits{limit="max_series"} > 0)
        ) > 0.9
      for: 5m
      labels:
        severity: critical
    - alert: MimirIngesterReachingTenantsLimit
      annotations:
        message: |
          Ingester {{ $labels.job }}/{{ $labels.pod }} has reached {{ $value | humanizePercentage }} of its tenant limit.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringesterreachingtenantslimit
      expr: |
        (
            (cortex_ingester_memory_users / ignoring(limit) cortex_ingester_instance_limits{limit="max_tenants"})
            and ignoring (limit)
            (cortex_ingester_instance_limits{limit="max_tenants"} > 0)
        ) > 0.7
      for: 5m
      labels:
        severity: warning
    - alert: MimirIngesterReachingTenantsLimit
      annotations:
        message: |
          Ingester {{ $labels.job }}/{{ $labels.pod }} has reached {{ $value | humanizePercentage }} of its tenant limit.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringesterreachingtenantslimit
      expr: |
        (
            (cortex_ingester_memory_users / ignoring(limit) cortex_ingester_instance_limits{limit="max_tenants"})
            and ignoring (limit)
            (cortex_ingester_instance_limits{limit="max_tenants"} > 0)
        ) > 0.8
      for: 5m
      labels:
        severity: critical
    - alert: MimirReachingTCPConnectionsLimit
      annotations:
        message: |
          Mimir instance {{ $labels.job }}/{{ $labels.pod }} has reached {{ $value | humanizePercentage }} of its TCP connections limit for {{ $labels.protocol }} protocol.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirreachingtcpconnectionslimit
      expr: |
        cortex_tcp_connections / cortex_tcp_connections_limit > 0.8 and
        cortex_tcp_connections_limit > 0
      for: 5m
      labels:
        severity: critical
    - alert: MimirDistributorReachingInflightPushRequestLimit
      annotations:
        message: |
          Distributor {{ $labels.job }}/{{ $labels.pod }} has reached {{ $value | humanizePercentage }} of its inflight push request limit.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirdistributorreachinginflightpushrequestlimit
      expr: |
        (
            (cortex_distributor_inflight_push_requests / ignoring(limit) cortex_distributor_instance_limits{limit="max_inflight_push_requests"})
            and ignoring (limit)
            (cortex_distributor_instance_limits{limit="max_inflight_push_requests"} > 0)
        ) > 0.8
      for: 5m
      labels:
        severity: critical
  - name: mimir-rollout-alerts
    rules:
    - alert: MimirRolloutStuck
      annotations:
        message: |
          The {{ $labels.rollout_group }} rollout is stuck in {{ $labels.cluster }}/{{ $labels.namespace }}.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirrolloutstuck
      expr: |
        (
          max without (revision) (
            sum without(statefulset) (label_replace(kube_statefulset_status_current_revision, "rollout_group", "$1", "statefulset", "(.*?)(?:-zone-[a-z])?"))
              unless
            sum without(statefulset) (label_replace(kube_statefulset_status_update_revision, "rollout_group", "$1", "statefulset", "(.*?)(?:-zone-[a-z])?"))
          )
            *
          (
            sum without(statefulset) (label_replace(kube_statefulset_replicas, "rollout_group", "$1", "statefulset", "(.*?)(?:-zone-[a-z])?"))
              !=
            sum without(statefulset) (label_replace(kube_statefulset_status_replicas_updated, "rollout_group", "$1", "statefulset", "(.*?)(?:-zone-[a-z])?"))
          )
        ) and (
          changes(sum without(statefulset) (label_replace(kube_statefulset_status_replicas_updated, "rollout_group", "$1", "statefulset", "(.*?)(?:-zone-[a-z])?"))[15m:1m])
            ==
          0
        )
        * on(cluster, namespace) group_left max by(cluster, namespace) (cortex_build_info)
      for: 30m
      labels:
        severity: warning
        workload_type: statefulset
    - alert: MimirRolloutStuck
      annotations:
        message: |
          The {{ $labels.rollout_group }} rollout is stuck in {{ $labels.cluster }}/{{ $labels.namespace }}.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirrolloutstuck
      expr: |
        (
          sum without(deployment) (label_replace(kube_deployment_spec_replicas, "rollout_group", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"))
            !=
          sum without(deployment) (label_replace(kube_deployment_status_replicas_updated, "rollout_group", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"))
        ) and (
          changes(sum without(deployment) (label_replace(kube_deployment_status_replicas_updated, "rollout_group", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"))[15m:1m])
            ==
          0
        )
        * on(cluster, namespace) group_left max by(cluster, namespace) (cortex_build_info)
      for: 30m
      labels:
        severity: warning
        workload_type: deployment
    - alert: RolloutOperatorNotReconciling
      annotations:
        message: |
          Rollout operator is not reconciling the rollout group {{ $labels.rollout_group }} in {{ $labels.cluster }}/{{ $labels.namespace }}.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#rolloutoperatornotreconciling
      expr: |
        max by(cluster, namespace, rollout_group) (time() - rollout_operator_last_successful_group_reconcile_timestamp_seconds) > 600
      for: 5m
      labels:
        severity: critical
  - name: mimir-provisioning
    rules:
    - alert: MimirAllocatingTooMuchMemory
      annotations:
        message: |
          Instance {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is using too much memory.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirallocatingtoomuchmemory
      expr: |
        (
          # We use RSS instead of working set memory because of the ingester's extensive usage of mmap.
          # See: https://github.com/grafana/mimir/issues/2466
          container_memory_rss{container=~"((mimir|ingester|mimir-write)|(mimir|mimir-write|distributor|ingester)|(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter))"}
            /
          ( container_spec_memory_limit_bytes{container=~"((mimir|ingester|mimir-write)|(mimir|mimir-write|distributor|ingester)|(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter))"} > 0 )
        )
        # Match only Mimir namespaces.
        * on(cluster, namespace) group_left max by(cluster, namespace) (cortex_build_info)
        > 0.65
      for: 15m
      labels:
        severity: warning
    - alert: MimirAllocatingTooMuchMemory
      annotations:
        message: |
          Instance {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is using too much memory.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirallocatingtoomuchmemory
      expr: |
        (
          # We use RSS instead of working set memory because of the ingester's extensive usage of mmap.
          # See: https://github.com/grafana/mimir/issues/2466
          container_memory_rss{container=~"((mimir|ingester|mimir-write)|(mimir|mimir-write|distributor|ingester)|(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter))"}
            /
          ( container_spec_memory_limit_bytes{container=~"((mimir|ingester|mimir-write)|(mimir|mimir-write|distributor|ingester)|(mimir|mimir-backend|query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter))"} > 0 )
        )
        # Match only Mimir namespaces.
        * on(cluster, namespace) group_left max by(cluster, namespace) (cortex_build_info)
        > 0.8
      for: 15m
      labels:
        severity: critical
  - name: ruler_alerts
    rules:
    - alert: MimirRulerTooManyFailedPushes
      annotations:
        message: |
          Mimir Ruler {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is experiencing {{ printf "%.2f" $value }}% write (push) errors.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirrulertoomanyfailedpushes
      expr: |
        100 * (
        sum by (cluster, namespace, pod) (rate(cortex_ruler_write_requests_failed_total[1m]))
          /
        sum by (cluster, namespace, pod) (rate(cortex_ruler_write_requests_total[1m]))
        ) > 1
      for: 5m
      labels:
        severity: critical
    - alert: MimirRulerTooManyFailedQueries
      annotations:
        message: |
          Mimir Ruler {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is experiencing {{ printf "%.2f" $value }}% errors while evaluating rules.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirrulertoomanyfailedqueries
      expr: |
        100 * (
        sum by (cluster, namespace, pod) (rate(cortex_ruler_queries_failed_total[1m]))
          /
        sum by (cluster, namespace, pod) (rate(cortex_ruler_queries_total[1m]))
        ) > 1
      for: 5m
      labels:
        severity: critical
    - alert: MimirRulerMissedEvaluations
      annotations:
        message: |
          Mimir Ruler {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is experiencing {{ printf "%.2f" $value }}% missed iterations for the rule group {{ $labels.rule_group }}.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirrulermissedevaluations
      expr: |
        100 * (
        sum by (cluster, namespace, pod, rule_group) (rate(cortex_prometheus_rule_group_iterations_missed_total[1m]))
          /
        sum by (cluster, namespace, pod, rule_group) (rate(cortex_prometheus_rule_group_iterations_total[1m]))
        ) > 1
      for: 5m
      labels:
        severity: warning
    - alert: MimirRulerFailedRingCheck
      annotations:
        message: |
          Mimir Rulers in {{ $labels.cluster }}/{{ $labels.namespace }} are experiencing errors when checking the ring for rule group ownership.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirrulerfailedringcheck
      expr: |
        sum by (cluster, namespace, job) (rate(cortex_ruler_ring_check_errors_total[1m]))
           > 0
      for: 5m
      labels:
        severity: critical
    - alert: MimirRulerRemoteEvaluationFailing
      annotations:
        message: |
          Mimir rulers in {{ $labels.cluster }}/{{ $labels.namespace }} are failing to perform {{ printf "%.2f" $value }}% of remote evaluations through the ruler-query-frontend.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirrulerremoteevaluationfailing
      expr: |
        100 * (
        sum by (cluster, namespace) (rate(cortex_request_duration_seconds_count{route="/httpgrpc.HTTP/Handle", status_code=~"5..", job=~".*/(mimir|ruler-query-frontend.*)"}[5m]))
          /
        sum by (cluster, namespace) (rate(cortex_request_duration_seconds_count{route="/httpgrpc.HTTP/Handle", job=~".*/(mimir|ruler-query-frontend.*)"}[5m]))
        ) > 1
      for: 5m
      labels:
        severity: warning
  - name: gossip_alerts
    rules:
    - alert: MimirGossipMembersTooHigh
      annotations:
        message: One or more Mimir instances in {{ $labels.cluster }}/{{ $labels.namespace
          }} consistently sees a higher than expected number of gossip members.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirgossipmemberstoohigh
      expr: |
        max by (cluster, namespace) (memberlist_client_cluster_members_count)
        >
        (sum by (cluster, namespace) (up{job=~".+/(mimir|admin-api|alertmanager|compactor.*|distributor.*|ingester.*|querier.*|ruler|ruler-querier.*|store-gateway.*|cortex|mimir-write.*|mimir-read.*|mimir-backend.*)"}) + 10)
      for: 20m
      labels:
        severity: warning
    - alert: MimirGossipMembersTooLow
      annotations:
        message: One or more Mimir instances in {{ $labels.cluster }}/{{ $labels.namespace
          }} consistently sees a lower than expected number of gossip members.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirgossipmemberstoolow
      expr: |
        min by (cluster, namespace) (memberlist_client_cluster_members_count)
        <
        (sum by (cluster, namespace) (up{job=~".+/(mimir|admin-api|alertmanager|compactor.*|distributor.*|ingester.*|querier.*|ruler|ruler-querier.*|store-gateway.*|cortex|mimir-write.*|mimir-read.*|mimir-backend.*)"}) * 0.5)
      for: 20m
      labels:
        severity: warning
  - name: etcd_alerts
    rules:
    - alert: EtcdAllocatingTooMuchMemory
      annotations:
        message: |
          Too much memory being used by {{ $labels.namespace }}/{{ $labels.pod }} - bump memory limit.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#etcdallocatingtoomuchmemory
      expr: |
        (
          container_memory_working_set_bytes{container="etcd"}
            /
          ( container_spec_memory_limit_bytes{container="etcd"} > 0 )
        ) > 0.65
      for: 15m
      labels:
        severity: warning
    - alert: EtcdAllocatingTooMuchMemory
      annotations:
        message: |
          Too much memory being used by {{ $labels.namespace }}/{{ $labels.pod }} - bump memory limit.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#etcdallocatingtoomuchmemory
      expr: |
        (
          container_memory_working_set_bytes{container="etcd"}
            /
          ( container_spec_memory_limit_bytes{container="etcd"} > 0 )
        ) > 0.8
      for: 15m
      labels:
        severity: critical
  - name: alertmanager_alerts
    rules:
    - alert: MimirAlertmanagerSyncConfigsFailing
      annotations:
        message: |
          Mimir Alertmanager {{ $labels.job }}/{{ $labels.pod }} is failing to read tenant configurations from storage.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiralertmanagersyncconfigsfailing
      expr: |
        rate(cortex_alertmanager_sync_configs_failed_total[5m]) > 0
      for: 30m
      labels:
        severity: critical
    - alert: MimirAlertmanagerRingCheckFailing
      annotations:
        message: |
          Mimir Alertmanager {{ $labels.job }}/{{ $labels.pod }} is unable to check tenants ownership via the ring.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiralertmanagerringcheckfailing
      expr: |
        rate(cortex_alertmanager_ring_check_errors_total[2m]) > 0
      for: 10m
      labels:
        severity: critical
    - alert: MimirAlertmanagerPartialStateMergeFailing
      annotations:
        message: |
          Mimir Alertmanager {{ $labels.job }}/{{ $labels.pod }} is failing to merge partial state changes received from a replica.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiralertmanagerpartialstatemergefailing
      expr: |
        rate(cortex_alertmanager_partial_state_merges_failed_total[2m]) > 0
      for: 10m
      labels:
        severity: critical
    - alert: MimirAlertmanagerReplicationFailing
      annotations:
        message: |
          Mimir Alertmanager {{ $labels.job }}/{{ $labels.pod }} is failing to replicating partial state to its replicas.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiralertmanagerreplicationfailing
      expr: |
        rate(cortex_alertmanager_state_replication_failed_total[2m]) > 0
      for: 10m
      labels:
        severity: critical
    - alert: MimirAlertmanagerPersistStateFailing
      annotations:
        message: |
          Mimir Alertmanager {{ $labels.job }}/{{ $labels.pod }} is unable to persist full state snaphots to remote storage.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiralertmanagerpersiststatefailing
      expr: |
        rate(cortex_alertmanager_state_persist_failed_total[15m]) > 0
      for: 1h
      labels:
        severity: critical
    - alert: MimirAlertmanagerInitialSyncFailed
      annotations:
        message: |
          Mimir Alertmanager {{ $labels.job }}/{{ $labels.pod }} was unable to obtain some initial state when starting up.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiralertmanagerinitialsyncfailed
      expr: |
        increase(cortex_alertmanager_state_initial_sync_completed_total{outcome="failed"}[1m]) > 0
      labels:
        severity: critical
    - alert: MimirAlertmanagerAllocatingTooMuchMemory
      annotations:
        message: |
          Alertmanager {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is using too much memory.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiralertmanagerallocatingtoomuchmemory
      expr: |
        (container_memory_working_set_bytes{container="alertmanager"} / container_spec_memory_limit_bytes{container="alertmanager"}) > 0.80
        and
        (container_spec_memory_limit_bytes{container="alertmanager"} > 0)
      for: 15m
      labels:
        severity: warning
    - alert: MimirAlertmanagerAllocatingTooMuchMemory
      annotations:
        message: |
          Alertmanager {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is using too much memory.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiralertmanagerallocatingtoomuchmemory
      expr: |
        (container_memory_working_set_bytes{container="alertmanager"} / container_spec_memory_limit_bytes{container="alertmanager"}) > 0.90
        and
        (container_spec_memory_limit_bytes{container="alertmanager"} > 0)
      for: 15m
      labels:
        severity: critical
    - alert: MimirAlertmanagerInstanceHasNoTenants
      annotations:
        message: Mimir alertmanager {{ $labels.pod }} in {{ $labels.cluster }}/{{
          $labels.namespace }} owns no tenants.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiralertmanagerinstancehasnotenants
      expr: |
        # Alert on alertmanager instances in microservices mode that own no tenants,
        min by(cluster, namespace, pod) (cortex_alertmanager_tenants_owned{pod=~"(.*mimir-)?(mimir|alertmanager|mimir-backend).*"}) == 0
        # but only if other instances of the same cell do have tenants assigned.
        and on (cluster, namespace)
        max by(cluster, namespace) (cortex_alertmanager_tenants_owned) > 0
      for: 1h
      labels:
        severity: warning
  - name: mimir_blocks_alerts
    rules:
    - alert: MimirIngesterHasNotShippedBlocks
      annotations:
        message: Mimir Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has not shipped any block in the last 4 hours.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringesterhasnotshippedblocks
      expr: |
        (min by(cluster, namespace, pod) (time() - cortex_ingester_shipper_last_successful_upload_timestamp_seconds) > 60 * 60 * 4)
        and
        (max by(cluster, namespace, pod) (cortex_ingester_shipper_last_successful_upload_timestamp_seconds) > 0)
        and
        # Only if the ingester has ingested samples over the last 4h.
        (max by(cluster, namespace, pod) (max_over_time(cluster_namespace_pod:cortex_ingester_ingested_samples_total:rate1m[4h])) > 0)
        and
        # Only if the ingester was ingesting samples 4h ago. This protects against the case where the ingester replica
        # had ingested samples in the past, then no traffic was received for a long period and then it starts
        # receiving samples again. Without this check, the alert would fire as soon as it gets back receiving
        # samples, while the a block shipping is expected within the next 4h.
        (max by(cluster, namespace, pod) (max_over_time(cluster_namespace_pod:cortex_ingester_ingested_samples_total:rate1m[1h] offset 4h)) > 0)
      for: 15m
      labels:
        severity: critical
    - alert: MimirIngesterHasNotShippedBlocksSinceStart
      annotations:
        message: Mimir Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has not shipped any block in the last 4 hours.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringesterhasnotshippedblockssincestart
      expr: |
        (max by(cluster, namespace, pod) (cortex_ingester_shipper_last_successful_upload_timestamp_seconds) == 0)
        and
        (max by(cluster, namespace, pod) (max_over_time(cluster_namespace_pod:cortex_ingester_ingested_samples_total:rate1m[4h])) > 0)
      for: 4h
      labels:
        severity: critical
    - alert: MimirIngesterHasUnshippedBlocks
      annotations:
        message: Mimir Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has compacted a block {{ $value | humanizeDuration }} ago but it hasn't
          been successfully uploaded to the storage yet.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringesterhasunshippedblocks
      expr: |
        (time() - cortex_ingester_oldest_unshipped_block_timestamp_seconds > 3600)
        and
        (cortex_ingester_oldest_unshipped_block_timestamp_seconds > 0)
      for: 15m
      labels:
        severity: critical
    - alert: MimirIngesterTSDBHeadCompactionFailed
      annotations:
        message: Mimir Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} is failing to compact TSDB head.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringestertsdbheadcompactionfailed
      expr: |
        rate(cortex_ingester_tsdb_compactions_failed_total[5m]) > 0
      for: 15m
      labels:
        severity: critical
    - alert: MimirIngesterTSDBHeadTruncationFailed
      annotations:
        message: Mimir Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} is failing to truncate TSDB head.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringestertsdbheadtruncationfailed
      expr: |
        rate(cortex_ingester_tsdb_head_truncations_failed_total[5m]) > 0
      labels:
        severity: critical
    - alert: MimirIngesterTSDBCheckpointCreationFailed
      annotations:
        message: Mimir Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} is failing to create TSDB checkpoint.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringestertsdbcheckpointcreationfailed
      expr: |
        rate(cortex_ingester_tsdb_checkpoint_creations_failed_total[5m]) > 0
      labels:
        severity: critical
    - alert: MimirIngesterTSDBCheckpointDeletionFailed
      annotations:
        message: Mimir Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} is failing to delete TSDB checkpoint.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringestertsdbcheckpointdeletionfailed
      expr: |
        rate(cortex_ingester_tsdb_checkpoint_deletions_failed_total[5m]) > 0
      labels:
        severity: critical
    - alert: MimirIngesterTSDBWALTruncationFailed
      annotations:
        message: Mimir Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} is failing to truncate TSDB WAL.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringestertsdbwaltruncationfailed
      expr: |
        rate(cortex_ingester_tsdb_wal_truncations_failed_total[5m]) > 0
      labels:
        severity: warning
    - alert: MimirIngesterTSDBWALCorrupted
      annotations:
        message: Mimir Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} got a corrupted TSDB WAL.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringestertsdbwalcorrupted
      expr: |
        # alert when there are more than one corruptions
        count by (cluster, namespace) (rate(cortex_ingester_tsdb_wal_corruptions_total[5m]) > 0) > 1
        and
        # and there is only one zone
        count by (cluster, namespace) (group by (cluster, namespace, job) (cortex_ingester_tsdb_wal_corruptions_total)) == 1
      labels:
        deployment: single-zone
        severity: critical
    - alert: MimirIngesterTSDBWALCorrupted
      annotations:
        message: Mimir Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} got a corrupted TSDB WAL.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringestertsdbwalcorrupted
      expr: |
        # alert when there are more than one corruptions
        count by (cluster, namespace) (sum by (cluster, namespace, job) (rate(cortex_ingester_tsdb_wal_corruptions_total[5m]) > 0)) > 1
        and
        # and there are multiple zones
        count by (cluster, namespace) (group by (cluster, namespace, job) (cortex_ingester_tsdb_wal_corruptions_total)) > 1
      labels:
        deployment: multi-zone
        severity: critical
    - alert: MimirIngesterTSDBWALWritesFailed
      annotations:
        message: Mimir Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} is failing to write to TSDB WAL.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimiringestertsdbwalwritesfailed
      expr: |
        rate(cortex_ingester_tsdb_wal_writes_failed_total[1m]) > 0
      for: 3m
      labels:
        severity: critical
    - alert: MimirStoreGatewayHasNotSyncTheBucket
      annotations:
        message: Mimir store-gateway {{ $labels.pod }} in {{ $labels.cluster }}/{{
          $labels.namespace }} has not successfully synched the bucket since {{ $value
          | humanizeDuration }}.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirstoregatewayhasnotsyncthebucket
      expr: |
        (time() - cortex_bucket_stores_blocks_last_successful_sync_timestamp_seconds{component="store-gateway"} > 60 * 30)
        and
        cortex_bucket_stores_blocks_last_successful_sync_timestamp_seconds{component="store-gateway"} > 0
      for: 5m
      labels:
        severity: critical
    - alert: MimirStoreGatewayNoSyncedTenants
      annotations:
        message: Mimir store-gateway {{ $labels.pod }} in {{ $labels.cluster }}/{{
          $labels.namespace }} is not syncing any blocks for any tenant.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirstoregatewaynosyncedtenants
      expr: |
        min by(cluster, namespace, pod) (cortex_bucket_stores_tenants_synced{component="store-gateway"}) == 0
      for: 1h
      labels:
        severity: warning
    - alert: MimirBucketIndexNotUpdated
      annotations:
        message: Mimir bucket index for tenant {{ $labels.user }} in {{ $labels.cluster
          }}/{{ $labels.namespace }} has not been updated since {{ $value | humanizeDuration
          }}.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirbucketindexnotupdated
      expr: |
        min by(cluster, namespace, user) (time() - cortex_bucket_index_last_successful_update_timestamp_seconds) > 7200
      labels:
        severity: critical
  - name: mimir_compactor_alerts
    rules:
    - alert: MimirCompactorHasNotSuccessfullyCleanedUpBlocks
      annotations:
        message: Mimir Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has not successfully cleaned up blocks in the last 6 hours.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimircompactorhasnotsuccessfullycleanedupblocks
      expr: |
        # The "last successful run" metric is updated even if the compactor owns no tenants,
        # so this alert correctly doesn't fire if compactor has nothing to do.
        (time() - cortex_compactor_block_cleanup_last_successful_run_timestamp_seconds > 60 * 60 * 6)
      for: 1h
      labels:
        severity: critical
    - alert: MimirCompactorHasNotSuccessfullyRunCompaction
      annotations:
        message: Mimir Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has not run compaction in the last 24 hours.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimircompactorhasnotsuccessfullyruncompaction
      expr: |
        # The "last successful run" metric is updated even if the compactor owns no tenants,
        # so this alert correctly doesn't fire if compactor has nothing to do.
        (time() - cortex_compactor_last_successful_run_timestamp_seconds > 60 * 60 * 24)
        and
        (cortex_compactor_last_successful_run_timestamp_seconds > 0)
      for: 1h
      labels:
        reason: in-last-24h
        severity: critical
    - alert: MimirCompactorHasNotSuccessfullyRunCompaction
      annotations:
        message: Mimir Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has not run compaction in the last 24 hours.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimircompactorhasnotsuccessfullyruncompaction
      expr: |
        # The "last successful run" metric is updated even if the compactor owns no tenants,
        # so this alert correctly doesn't fire if compactor has nothing to do.
        cortex_compactor_last_successful_run_timestamp_seconds == 0
      for: 24h
      labels:
        reason: since-startup
        severity: critical
    - alert: MimirCompactorHasNotSuccessfullyRunCompaction
      annotations:
        message: Mimir Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} failed to run 2 consecutive compactions.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimircompactorhasnotsuccessfullyruncompaction
      expr: |
        increase(cortex_compactor_runs_failed_total{reason!="shutdown"}[2h]) >= 2
      labels:
        reason: consecutive-failures
        severity: critical
    - alert: MimirCompactorHasNotUploadedBlocks
      annotations:
        message: Mimir Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has not uploaded any block in the last 24 hours.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimircompactorhasnotuploadedblocks
      expr: |
        (time() - (max by(cluster, namespace, pod) (thanos_objstore_bucket_last_successful_upload_time{component="compactor"})) > 60 * 60 * 24)
        and
        (max by(cluster, namespace, pod) (thanos_objstore_bucket_last_successful_upload_time{component="compactor"}) > 0)
        and
        # Only if some compactions have started. We don't want to fire this alert if the compactor has nothing to do
        # (e.g. there are more replicas than required because running as part of mimir-backend).
        (sum by(cluster, namespace, pod) (rate(cortex_compactor_group_compaction_runs_started_total[24h])) > 0)
      for: 15m
      labels:
        severity: critical
        time_period: 24h
    - alert: MimirCompactorHasNotUploadedBlocks
      annotations:
        message: Mimir Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has not uploaded any block since its start.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimircompactorhasnotuploadedblocks
      expr: |
        (max by(cluster, namespace, pod) (thanos_objstore_bucket_last_successful_upload_time{component="compactor"}) == 0)
        and
        # Only if some compactions have started. We don't want to fire this alert if the compactor has nothing to do
        # (e.g. there are more replicas than required because running as part of mimir-backend).
        (sum by(cluster, namespace, pod) (rate(cortex_compactor_group_compaction_runs_started_total[24h])) > 0)
      for: 24h
      labels:
        severity: critical
        time_period: since-start
    - alert: MimirCompactorSkippedUnhealthyBlocks
      annotations:
        message: Mimir Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has found and ignored unhealthy blocks.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimircompactorskippedunhealthyblocks
      expr: |
        increase(cortex_compactor_blocks_marked_for_no_compaction_total[5m]) > 0
      for: 1m
      labels:
        severity: warning
    - alert: MimirCompactorSkippedUnhealthyBlocks
      annotations:
        message: Mimir Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
          }} has found and ignored unhealthy blocks.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimircompactorskippedunhealthyblocks
      expr: |
        increase(cortex_compactor_blocks_marked_for_no_compaction_total[5m]) > 1
      for: 30m
      labels:
        severity: critical
  - name: mimir_autoscaling
    rules:
    - alert: MimirAutoscalerNotActive
      annotations:
        message: The Horizontal Pod Autoscaler (HPA) {{ $labels.horizontalpodautoscaler
          }} in {{ $labels.namespace }} is not active.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirautoscalernotactive
      expr: |
        (
            label_replace((
              kube_horizontalpodautoscaler_status_condition{condition="ScalingActive",status="false"}
              # Match only Mimir namespaces.
              * on(cluster, namespace) group_left max by(cluster, namespace) (cortex_build_info)
              # Add "metric" label.
              + on(cluster, namespace, horizontalpodautoscaler) group_right label_replace(kube_horizontalpodautoscaler_spec_target_metric*0, "metric", "$1", "metric_name", "(.+)")
              > 0),
              "scaledObject", "$1", "horizontalpodautoscaler", "keda-hpa-(.*)"
            )
        )
        # Alert only if the scaling metric exists and is > 0. If the KEDA ScaledObject is configured to scale down 0,
        # then HPA ScalingActive may be false when expected to run 0 replicas. In this case, the scaling metric exported
        # by KEDA could not exist at all or being exposed with a value of 0.
        and on (cluster, namespace, metric, scaledObject)
        (label_replace(keda_scaler_metrics_value, "namespace", "$0", "exported_namespace", ".+") > 0)
      for: 1h
      labels:
        severity: critical
    - alert: MimirAutoscalerKedaFailing
      annotations:
        message: The Keda ScaledObject {{ $labels.scaledObject }} in {{ $labels.namespace
          }} is experiencing errors.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimirautoscalerkedafailing
      expr: |
        (
            # Find KEDA scalers reporting errors.
            label_replace(rate(keda_scaler_errors[5m]), "namespace", "$1", "exported_namespace", "(.*)")
            # Match only Mimir namespaces.
            * on(cluster, namespace) group_left max by(cluster, namespace) (cortex_build_info)
        )
        > 0
      for: 1h
      labels:
        severity: critical
  - name: mimir_continuous_test
    rules:
    - alert: MimirContinuousTestNotRunningOnWrites
      annotations:
        message: Mimir continuous test {{ $labels.test }} in {{ $labels.cluster }}/{{
          $labels.namespace }} is not effectively running because writes are failing.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimircontinuoustestnotrunningonwrites
      expr: |
        sum by(cluster, namespace, test) (rate(mimir_continuous_test_writes_failed_total[5m])) > 0
      for: 1h
      labels:
        severity: warning
    - alert: MimirContinuousTestNotRunningOnReads
      annotations:
        message: Mimir continuous test {{ $labels.test }} in {{ $labels.cluster }}/{{
          $labels.namespace }} is not effectively running because queries are failing.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimircontinuoustestnotrunningonreads
      expr: |
        sum by(cluster, namespace, test) (rate(mimir_continuous_test_queries_failed_total[5m])) > 0
      for: 1h
      labels:
        severity: warning
    - alert: MimirContinuousTestFailed
      annotations:
        message: Mimir continuous test {{ $labels.test }} in {{ $labels.cluster }}/{{
          $labels.namespace }} failed when asserting query results.
        runbook_url: https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#mimircontinuoustestfailed
      expr: |
        sum by(cluster, namespace, test) (rate(mimir_continuous_test_query_result_checks_failed_total[10m])) > 0
      labels:
        severity: warning
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: mimir-mixin-rules
  namespace: monitoring-system
spec:
  groups:
  - name: mimir_api_1
    rules:
    - expr: histogram_quantile(0.99, sum(rate(cortex_request_duration_seconds_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_request_duration_seconds:99quantile
    - expr: histogram_quantile(0.50, sum(rate(cortex_request_duration_seconds_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_request_duration_seconds:50quantile
    - expr: sum(rate(cortex_request_duration_seconds_sum[1m])) by (cluster, job) /
        sum(rate(cortex_request_duration_seconds_count[1m])) by (cluster, job)
      record: cluster_job:cortex_request_duration_seconds:avg
    - expr: sum(rate(cortex_request_duration_seconds_bucket[1m])) by (le, cluster,
        job)
      record: cluster_job:cortex_request_duration_seconds_bucket:sum_rate
    - expr: sum(rate(cortex_request_duration_seconds_sum[1m])) by (cluster, job)
      record: cluster_job:cortex_request_duration_seconds_sum:sum_rate
    - expr: sum(rate(cortex_request_duration_seconds_count[1m])) by (cluster, job)
      record: cluster_job:cortex_request_duration_seconds_count:sum_rate
    - expr: sum(rate(cortex_request_duration_seconds[1m])) by (cluster, job)
      record: cluster_job:cortex_request_duration_seconds:sum_rate
  - name: mimir_api_2
    rules:
    - expr: histogram_quantile(0.99, sum(rate(cortex_request_duration_seconds_bucket[1m]))
        by (le, cluster, job, route))
      record: cluster_job_route:cortex_request_duration_seconds:99quantile
    - expr: histogram_quantile(0.50, sum(rate(cortex_request_duration_seconds_bucket[1m]))
        by (le, cluster, job, route))
      record: cluster_job_route:cortex_request_duration_seconds:50quantile
    - expr: sum(rate(cortex_request_duration_seconds_sum[1m])) by (cluster, job, route)
        / sum(rate(cortex_request_duration_seconds_count[1m])) by (cluster, job, route)
      record: cluster_job_route:cortex_request_duration_seconds:avg
    - expr: sum(rate(cortex_request_duration_seconds_bucket[1m])) by (le, cluster,
        job, route)
      record: cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate
    - expr: sum(rate(cortex_request_duration_seconds_sum[1m])) by (cluster, job, route)
      record: cluster_job_route:cortex_request_duration_seconds_sum:sum_rate
    - expr: sum(rate(cortex_request_duration_seconds_count[1m])) by (cluster, job,
        route)
      record: cluster_job_route:cortex_request_duration_seconds_count:sum_rate
    - expr: sum(rate(cortex_request_duration_seconds[1m])) by (cluster, job, route)
      record: cluster_job_route:cortex_request_duration_seconds:sum_rate
  - name: mimir_api_3
    rules:
    - expr: histogram_quantile(0.99, sum(rate(cortex_request_duration_seconds_bucket[1m]))
        by (le, cluster, namespace, job, route))
      record: cluster_namespace_job_route:cortex_request_duration_seconds:99quantile
    - expr: histogram_quantile(0.50, sum(rate(cortex_request_duration_seconds_bucket[1m]))
        by (le, cluster, namespace, job, route))
      record: cluster_namespace_job_route:cortex_request_duration_seconds:50quantile
    - expr: sum(rate(cortex_request_duration_seconds_sum[1m])) by (cluster, namespace,
        job, route) / sum(rate(cortex_request_duration_seconds_count[1m])) by (cluster,
        namespace, job, route)
      record: cluster_namespace_job_route:cortex_request_duration_seconds:avg
    - expr: sum(rate(cortex_request_duration_seconds_bucket[1m])) by (le, cluster,
        namespace, job, route)
      record: cluster_namespace_job_route:cortex_request_duration_seconds_bucket:sum_rate
    - expr: sum(rate(cortex_request_duration_seconds_sum[1m])) by (cluster, namespace,
        job, route)
      record: cluster_namespace_job_route:cortex_request_duration_seconds_sum:sum_rate
    - expr: sum(rate(cortex_request_duration_seconds_count[1m])) by (cluster, namespace,
        job, route)
      record: cluster_namespace_job_route:cortex_request_duration_seconds_count:sum_rate
    - expr: sum(rate(cortex_request_duration_seconds[1m])) by (cluster, namespace,
        job, route)
      record: cluster_namespace_job_route:cortex_request_duration_seconds:sum_rate
  - name: mimir_querier_api
    rules:
    - expr: histogram_quantile(0.99, sum(rate(cortex_querier_request_duration_seconds_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_querier_request_duration_seconds:99quantile
    - expr: histogram_quantile(0.50, sum(rate(cortex_querier_request_duration_seconds_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_querier_request_duration_seconds:50quantile
    - expr: sum(rate(cortex_querier_request_duration_seconds_sum[1m])) by (cluster,
        job) / sum(rate(cortex_querier_request_duration_seconds_count[1m])) by (cluster,
        job)
      record: cluster_job:cortex_querier_request_duration_seconds:avg
    - expr: sum(rate(cortex_querier_request_duration_seconds_bucket[1m])) by (le,
        cluster, job)
      record: cluster_job:cortex_querier_request_duration_seconds_bucket:sum_rate
    - expr: sum(rate(cortex_querier_request_duration_seconds_sum[1m])) by (cluster,
        job)
      record: cluster_job:cortex_querier_request_duration_seconds_sum:sum_rate
    - expr: sum(rate(cortex_querier_request_duration_seconds_count[1m])) by (cluster,
        job)
      record: cluster_job:cortex_querier_request_duration_seconds_count:sum_rate
    - expr: histogram_quantile(0.99, sum(rate(cortex_querier_request_duration_seconds_bucket[1m]))
        by (le, cluster, job, route))
      record: cluster_job_route:cortex_querier_request_duration_seconds:99quantile
    - expr: histogram_quantile(0.50, sum(rate(cortex_querier_request_duration_seconds_bucket[1m]))
        by (le, cluster, job, route))
      record: cluster_job_route:cortex_querier_request_duration_seconds:50quantile
    - expr: sum(rate(cortex_querier_request_duration_seconds_sum[1m])) by (cluster,
        job, route) / sum(rate(cortex_querier_request_duration_seconds_count[1m]))
        by (cluster, job, route)
      record: cluster_job_route:cortex_querier_request_duration_seconds:avg
    - expr: sum(rate(cortex_querier_request_duration_seconds_bucket[1m])) by (le,
        cluster, job, route)
      record: cluster_job_route:cortex_querier_request_duration_seconds_bucket:sum_rate
    - expr: sum(rate(cortex_querier_request_duration_seconds_sum[1m])) by (cluster,
        job, route)
      record: cluster_job_route:cortex_querier_request_duration_seconds_sum:sum_rate
    - expr: sum(rate(cortex_querier_request_duration_seconds_count[1m])) by (cluster,
        job, route)
      record: cluster_job_route:cortex_querier_request_duration_seconds_count:sum_rate
    - expr: histogram_quantile(0.99, sum(rate(cortex_querier_request_duration_seconds_bucket[1m]))
        by (le, cluster, namespace, job, route))
      record: cluster_namespace_job_route:cortex_querier_request_duration_seconds:99quantile
    - expr: histogram_quantile(0.50, sum(rate(cortex_querier_request_duration_seconds_bucket[1m]))
        by (le, cluster, namespace, job, route))
      record: cluster_namespace_job_route:cortex_querier_request_duration_seconds:50quantile
    - expr: sum(rate(cortex_querier_request_duration_seconds_sum[1m])) by (cluster,
        namespace, job, route) / sum(rate(cortex_querier_request_duration_seconds_count[1m]))
        by (cluster, namespace, job, route)
      record: cluster_namespace_job_route:cortex_querier_request_duration_seconds:avg
    - expr: sum(rate(cortex_querier_request_duration_seconds_bucket[1m])) by (le,
        cluster, namespace, job, route)
      record: cluster_namespace_job_route:cortex_querier_request_duration_seconds_bucket:sum_rate
    - expr: sum(rate(cortex_querier_request_duration_seconds_sum[1m])) by (cluster,
        namespace, job, route)
      record: cluster_namespace_job_route:cortex_querier_request_duration_seconds_sum:sum_rate
    - expr: sum(rate(cortex_querier_request_duration_seconds_count[1m])) by (cluster,
        namespace, job, route)
      record: cluster_namespace_job_route:cortex_querier_request_duration_seconds_count:sum_rate
  - name: mimir_storage
    rules:
    - expr: histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_kv_request_duration_seconds:99quantile
    - expr: histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_kv_request_duration_seconds:50quantile
    - expr: sum(rate(cortex_kv_request_duration_seconds_sum[1m])) by (cluster, job)
        / sum(rate(cortex_kv_request_duration_seconds_count[1m])) by (cluster, job)
      record: cluster_job:cortex_kv_request_duration_seconds:avg
    - expr: sum(rate(cortex_kv_request_duration_seconds_bucket[1m])) by (le, cluster,
        job)
      record: cluster_job:cortex_kv_request_duration_seconds_bucket:sum_rate
    - expr: sum(rate(cortex_kv_request_duration_seconds_sum[1m])) by (cluster, job)
      record: cluster_job:cortex_kv_request_duration_seconds_sum:sum_rate
    - expr: sum(rate(cortex_kv_request_duration_seconds_count[1m])) by (cluster, job)
      record: cluster_job:cortex_kv_request_duration_seconds_count:sum_rate
  - name: mimir_queries
    rules:
    - expr: histogram_quantile(0.99, sum(rate(cortex_query_frontend_retries_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_query_frontend_retries:99quantile
    - expr: histogram_quantile(0.50, sum(rate(cortex_query_frontend_retries_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_query_frontend_retries:50quantile
    - expr: sum(rate(cortex_query_frontend_retries_sum[1m])) by (cluster, job) / sum(rate(cortex_query_frontend_retries_count[1m]))
        by (cluster, job)
      record: cluster_job:cortex_query_frontend_retries:avg
    - expr: sum(rate(cortex_query_frontend_retries_bucket[1m])) by (le, cluster, job)
      record: cluster_job:cortex_query_frontend_retries_bucket:sum_rate
    - expr: sum(rate(cortex_query_frontend_retries_sum[1m])) by (cluster, job)
      record: cluster_job:cortex_query_frontend_retries_sum:sum_rate
    - expr: sum(rate(cortex_query_frontend_retries_count[1m])) by (cluster, job)
      record: cluster_job:cortex_query_frontend_retries_count:sum_rate
    - expr: histogram_quantile(0.99, sum(rate(cortex_query_frontend_queue_duration_seconds_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_query_frontend_queue_duration_seconds:99quantile
    - expr: histogram_quantile(0.50, sum(rate(cortex_query_frontend_queue_duration_seconds_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_query_frontend_queue_duration_seconds:50quantile
    - expr: sum(rate(cortex_query_frontend_queue_duration_seconds_sum[1m])) by (cluster,
        job) / sum(rate(cortex_query_frontend_queue_duration_seconds_count[1m])) by
        (cluster, job)
      record: cluster_job:cortex_query_frontend_queue_duration_seconds:avg
    - expr: sum(rate(cortex_query_frontend_queue_duration_seconds_bucket[1m])) by
        (le, cluster, job)
      record: cluster_job:cortex_query_frontend_queue_duration_seconds_bucket:sum_rate
    - expr: sum(rate(cortex_query_frontend_queue_duration_seconds_sum[1m])) by (cluster,
        job)
      record: cluster_job:cortex_query_frontend_queue_duration_seconds_sum:sum_rate
    - expr: sum(rate(cortex_query_frontend_queue_duration_seconds_count[1m])) by (cluster,
        job)
      record: cluster_job:cortex_query_frontend_queue_duration_seconds_count:sum_rate
  - name: mimir_ingester_queries
    rules:
    - expr: histogram_quantile(0.99, sum(rate(cortex_ingester_queried_series_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_ingester_queried_series:99quantile
    - expr: histogram_quantile(0.50, sum(rate(cortex_ingester_queried_series_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_ingester_queried_series:50quantile
    - expr: sum(rate(cortex_ingester_queried_series_sum[1m])) by (cluster, job) /
        sum(rate(cortex_ingester_queried_series_count[1m])) by (cluster, job)
      record: cluster_job:cortex_ingester_queried_series:avg
    - expr: sum(rate(cortex_ingester_queried_series_bucket[1m])) by (le, cluster,
        job)
      record: cluster_job:cortex_ingester_queried_series_bucket:sum_rate
    - expr: sum(rate(cortex_ingester_queried_series_sum[1m])) by (cluster, job)
      record: cluster_job:cortex_ingester_queried_series_sum:sum_rate
    - expr: sum(rate(cortex_ingester_queried_series_count[1m])) by (cluster, job)
      record: cluster_job:cortex_ingester_queried_series_count:sum_rate
    - expr: histogram_quantile(0.99, sum(rate(cortex_ingester_queried_samples_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_ingester_queried_samples:99quantile
    - expr: histogram_quantile(0.50, sum(rate(cortex_ingester_queried_samples_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_ingester_queried_samples:50quantile
    - expr: sum(rate(cortex_ingester_queried_samples_sum[1m])) by (cluster, job) /
        sum(rate(cortex_ingester_queried_samples_count[1m])) by (cluster, job)
      record: cluster_job:cortex_ingester_queried_samples:avg
    - expr: sum(rate(cortex_ingester_queried_samples_bucket[1m])) by (le, cluster,
        job)
      record: cluster_job:cortex_ingester_queried_samples_bucket:sum_rate
    - expr: sum(rate(cortex_ingester_queried_samples_sum[1m])) by (cluster, job)
      record: cluster_job:cortex_ingester_queried_samples_sum:sum_rate
    - expr: sum(rate(cortex_ingester_queried_samples_count[1m])) by (cluster, job)
      record: cluster_job:cortex_ingester_queried_samples_count:sum_rate
    - expr: histogram_quantile(0.99, sum(rate(cortex_ingester_queried_exemplars_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_ingester_queried_exemplars:99quantile
    - expr: histogram_quantile(0.50, sum(rate(cortex_ingester_queried_exemplars_bucket[1m]))
        by (le, cluster, job))
      record: cluster_job:cortex_ingester_queried_exemplars:50quantile
    - expr: sum(rate(cortex_ingester_queried_exemplars_sum[1m])) by (cluster, job)
        / sum(rate(cortex_ingester_queried_exemplars_count[1m])) by (cluster, job)
      record: cluster_job:cortex_ingester_queried_exemplars:avg
    - expr: sum(rate(cortex_ingester_queried_exemplars_bucket[1m])) by (le, cluster,
        job)
      record: cluster_job:cortex_ingester_queried_exemplars_bucket:sum_rate
    - expr: sum(rate(cortex_ingester_queried_exemplars_sum[1m])) by (cluster, job)
      record: cluster_job:cortex_ingester_queried_exemplars_sum:sum_rate
    - expr: sum(rate(cortex_ingester_queried_exemplars_count[1m])) by (cluster, job)
      record: cluster_job:cortex_ingester_queried_exemplars_count:sum_rate
  - name: mimir_received_samples
    rules:
    - expr: |
        sum by (cluster, namespace, job) (rate(cortex_distributor_received_samples_total[5m]))
      record: cluster_namespace_job:cortex_distributor_received_samples:rate5m
  - name: mimir_exemplars_in
    rules:
    - expr: |
        sum by (cluster, namespace, job) (rate(cortex_distributor_exemplars_in_total[5m]))
      record: cluster_namespace_job:cortex_distributor_exemplars_in:rate5m
  - name: mimir_received_exemplars
    rules:
    - expr: |
        sum by (cluster, namespace, job) (rate(cortex_distributor_received_exemplars_total[5m]))
      record: cluster_namespace_job:cortex_distributor_received_exemplars:rate5m
  - name: mimir_exemplars_ingested
    rules:
    - expr: |
        sum by (cluster, namespace, job) (rate(cortex_ingester_ingested_exemplars_total[5m]))
      record: cluster_namespace_job:cortex_ingester_ingested_exemplars:rate5m
  - name: mimir_exemplars_appended
    rules:
    - expr: |
        sum by (cluster, namespace, job) (rate(cortex_ingester_tsdb_exemplar_exemplars_appended_total[5m]))
      record: cluster_namespace_job:cortex_ingester_tsdb_exemplar_exemplars_appended:rate5m
  - name: mimir_scaling_rules
    rules:
    - expr: |
        # Convenience rule to get the number of replicas for both a deployment and a statefulset.
        # Multi-zone deployments are grouped together removing the "zone-X" suffix.
        sum by (cluster, namespace, deployment) (
          label_replace(
            kube_deployment_spec_replicas,
            # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
            # always matches everything and the (optional) zone is not removed.
            "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
          )
        )
        or
        sum by (cluster, namespace, deployment) (
          label_replace(kube_statefulset_replicas, "deployment", "$1", "statefulset", "(.*?)(?:-zone-[a-z])?")
        )
      record: cluster_namespace_deployment:actual_replicas:count
    - expr: |
        ceil(
          quantile_over_time(0.99,
            sum by (cluster, namespace) (
              cluster_namespace_job:cortex_distributor_received_samples:rate5m
            )[24h:]
          )
          / 240000
        )
      labels:
        deployment: distributor
        reason: sample_rate
      record: cluster_namespace_deployment_reason:required_replicas:count
    - expr: |
        ceil(
          sum by (cluster, namespace) (cortex_limits_overrides{limit_name="ingestion_rate"})
          * 0.59999999999999998 / 240000
        )
      labels:
        deployment: distributor
        reason: sample_rate_limits
      record: cluster_namespace_deployment_reason:required_replicas:count
    - expr: |
        ceil(
          quantile_over_time(0.99,
            sum by (cluster, namespace) (
              cluster_namespace_job:cortex_distributor_received_samples:rate5m
            )[24h:]
          )
          * 3 / 80000
        )
      labels:
        deployment: ingester
        reason: sample_rate
      record: cluster_namespace_deployment_reason:required_replicas:count
    - expr: |
        ceil(
          quantile_over_time(0.99,
            sum by(cluster, namespace) (
              cortex_ingester_memory_series
            )[24h:]
          )
          / 1500000
        )
      labels:
        deployment: ingester
        reason: active_series
      record: cluster_namespace_deployment_reason:required_replicas:count
    - expr: |
        ceil(
          sum by (cluster, namespace) (cortex_limits_overrides{limit_name="max_global_series_per_user"})
          * 3 * 0.59999999999999998 / 1500000
        )
      labels:
        deployment: ingester
        reason: active_series_limits
      record: cluster_namespace_deployment_reason:required_replicas:count
    - expr: |
        ceil(
          sum by (cluster, namespace) (cortex_limits_overrides{limit_name="ingestion_rate"})
          * 0.59999999999999998 / 80000
        )
      labels:
        deployment: ingester
        reason: sample_rate_limits
      record: cluster_namespace_deployment_reason:required_replicas:count
    - expr: |
        ceil(
          (sum by (cluster, namespace) (
            cortex_ingester_tsdb_storage_blocks_bytes{job=~".+/ingester.*"}
          ) / 4)
            /
          avg by (cluster, namespace) (
            memcached_limit_bytes{job=~".+/memcached"}
          )
        )
      labels:
        deployment: memcached
        reason: active_series
      record: cluster_namespace_deployment_reason:required_replicas:count
    - expr: |
        sum by (cluster, namespace, deployment) (
          label_replace(
            label_replace(
              sum by (cluster, namespace, pod)(rate(container_cpu_usage_seconds_total[1m])),
              "deployment", "$1", "pod", "(.*)-(?:([0-9]+)|([a-z0-9]+)-([a-z0-9]+))"
            ),
            # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
            # always matches everything and the (optional) zone is not removed.
            "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
          )
        )
      record: cluster_namespace_deployment:container_cpu_usage_seconds_total:sum_rate
    - expr: |
        # Convenience rule to get the CPU request for both a deployment and a statefulset.
        # Multi-zone deployments are grouped together removing the "zone-X" suffix.
        # This recording rule is made compatible with the breaking changes introduced in kube-state-metrics v2
        # that remove resource metrics, ref:
        # - https://github.com/kubernetes/kube-state-metrics/blob/master/CHANGELOG.md#v200-alpha--2020-09-16
        # - https://github.com/kubernetes/kube-state-metrics/pull/1004
        #
        # This is the old expression, compatible with kube-state-metrics < v2.0.0,
        # where kube_pod_container_resource_requests_cpu_cores was removed:
        (
          sum by (cluster, namespace, deployment) (
            label_replace(
              label_replace(
                kube_pod_container_resource_requests_cpu_cores,
                "deployment", "$1", "pod", "(.*)-(?:([0-9]+)|([a-z0-9]+)-([a-z0-9]+))"
              ),
              # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
              # always matches everything and the (optional) zone is not removed.
              "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
            )
          )
        )
        or
        # This expression is compatible with kube-state-metrics >= v1.4.0,
        # where kube_pod_container_resource_requests was introduced.
        (
          sum by (cluster, namespace, deployment) (
            label_replace(
              label_replace(
                kube_pod_container_resource_requests{resource="cpu"},
                "deployment", "$1", "pod", "(.*)-(?:([0-9]+)|([a-z0-9]+)-([a-z0-9]+))"
              ),
              # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
              # always matches everything and the (optional) zone is not removed.
              "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
            )
          )
        )
      record: cluster_namespace_deployment:kube_pod_container_resource_requests_cpu_cores:sum
    - expr: |
        # Jobs should be sized to their CPU usage.
        # We do this by comparing 99th percentile usage over the last 24hrs to
        # their current provisioned #replicas and resource requests.
        ceil(
          cluster_namespace_deployment:actual_replicas:count
            *
          quantile_over_time(0.99, cluster_namespace_deployment:container_cpu_usage_seconds_total:sum_rate[24h])
            /
          cluster_namespace_deployment:kube_pod_container_resource_requests_cpu_cores:sum
        )
      labels:
        reason: cpu_usage
      record: cluster_namespace_deployment_reason:required_replicas:count
    - expr: |
        # Convenience rule to get the Memory utilization for both a deployment and a statefulset.
        # Multi-zone deployments are grouped together removing the "zone-X" suffix.
        sum by (cluster, namespace, deployment) (
          label_replace(
            label_replace(
              container_memory_usage_bytes{image!=""},
              "deployment", "$1", "pod", "(.*)-(?:([0-9]+)|([a-z0-9]+)-([a-z0-9]+))"
            ),
            # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
            # always matches everything and the (optional) zone is not removed.
            "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
          )
        )
      record: cluster_namespace_deployment:container_memory_usage_bytes:sum
    - expr: |
        # Convenience rule to get the Memory request for both a deployment and a statefulset.
        # Multi-zone deployments are grouped together removing the "zone-X" suffix.
        # This recording rule is made compatible with the breaking changes introduced in kube-state-metrics v2
        # that remove resource metrics, ref:
        # - https://github.com/kubernetes/kube-state-metrics/blob/master/CHANGELOG.md#v200-alpha--2020-09-16
        # - https://github.com/kubernetes/kube-state-metrics/pull/1004
        #
        # This is the old expression, compatible with kube-state-metrics < v2.0.0,
        # where kube_pod_container_resource_requests_memory_bytes was removed:
        (
          sum by (cluster, namespace, deployment) (
            label_replace(
              label_replace(
                kube_pod_container_resource_requests_memory_bytes,
                "deployment", "$1", "pod", "(.*)-(?:([0-9]+)|([a-z0-9]+)-([a-z0-9]+))"
              ),
              # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
              # always matches everything and the (optional) zone is not removed.
              "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
            )
          )
        )
        or
        # This expression is compatible with kube-state-metrics >= v1.4.0,
        # where kube_pod_container_resource_requests was introduced.
        (
          sum by (cluster, namespace, deployment) (
            label_replace(
              label_replace(
                kube_pod_container_resource_requests{resource="memory"},
                "deployment", "$1", "pod", "(.*)-(?:([0-9]+)|([a-z0-9]+)-([a-z0-9]+))"
              ),
              # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
              # always matches everything and the (optional) zone is not removed.
              "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
            )
          )
        )
      record: cluster_namespace_deployment:kube_pod_container_resource_requests_memory_bytes:sum
    - expr: |
        # Jobs should be sized to their Memory usage.
        # We do this by comparing 99th percentile usage over the last 24hrs to
        # their current provisioned #replicas and resource requests.
        ceil(
          cluster_namespace_deployment:actual_replicas:count
            *
          quantile_over_time(0.99, cluster_namespace_deployment:container_memory_usage_bytes:sum[24h])
            /
          cluster_namespace_deployment:kube_pod_container_resource_requests_memory_bytes:sum
        )
      labels:
        reason: memory_usage
      record: cluster_namespace_deployment_reason:required_replicas:count
  - name: mimir_alertmanager_rules
    rules:
    - expr: |
        sum by (cluster, job, pod) (cortex_alertmanager_alerts)
      record: cluster_job_pod:cortex_alertmanager_alerts:sum
    - expr: |
        sum by (cluster, job, pod) (cortex_alertmanager_silences)
      record: cluster_job_pod:cortex_alertmanager_silences:sum
    - expr: |
        sum by (cluster, job) (rate(cortex_alertmanager_alerts_received_total[5m]))
      record: cluster_job:cortex_alertmanager_alerts_received_total:rate5m
    - expr: |
        sum by (cluster, job) (rate(cortex_alertmanager_alerts_invalid_total[5m]))
      record: cluster_job:cortex_alertmanager_alerts_invalid_total:rate5m
    - expr: |
        sum by (cluster, job, integration) (rate(cortex_alertmanager_notifications_total[5m]))
      record: cluster_job_integration:cortex_alertmanager_notifications_total:rate5m
    - expr: |
        sum by (cluster, job, integration) (rate(cortex_alertmanager_notifications_failed_total[5m]))
      record: cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m
    - expr: |
        sum by (cluster, job) (rate(cortex_alertmanager_state_replication_total[5m]))
      record: cluster_job:cortex_alertmanager_state_replication_total:rate5m
    - expr: |
        sum by (cluster, job) (rate(cortex_alertmanager_state_replication_failed_total[5m]))
      record: cluster_job:cortex_alertmanager_state_replication_failed_total:rate5m
    - expr: |
        sum by (cluster, job) (rate(cortex_alertmanager_partial_state_merges_total[5m]))
      record: cluster_job:cortex_alertmanager_partial_state_merges_total:rate5m
    - expr: |
        sum by (cluster, job) (rate(cortex_alertmanager_partial_state_merges_failed_total[5m]))
      record: cluster_job:cortex_alertmanager_partial_state_merges_failed_total:rate5m
  - name: mimir_ingester_rules
    rules:
    - expr: |
        sum by(cluster, namespace, pod) (rate(cortex_ingester_ingested_samples_total[1m]))
      record: cluster_namespace_pod:cortex_ingester_ingested_samples_total:rate1m
