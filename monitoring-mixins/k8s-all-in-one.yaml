apiVersion: v1
data:
  apiserver.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only.",
                "gridPos": {
                   "h": 2,
                   "w": 24,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "options": {
                   "content": "The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only."
                },
                "pluginVersion": "v11.4.0",
                "title": "Notice",
                "type": "text"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many percent of requests (both read and write) in 30 days have been answered successfully and fast enough?",
                "fieldConfig": {
                   "defaults": {
                      "decimals": 3,
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 2
                },
                "id": 2,
                "interval": "1m",
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "apiserver_request:availability30d{verb=\"all\", cluster=\"$cluster\"}"
                   }
                ],
                "title": "Availability (30d) > 99.000%",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How much error budget is left looking at our 0.990% availability guarantees?",
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 100
                      },
                      "decimals": 3,
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 16,
                   "x": 8,
                   "y": 2
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "100 * (apiserver_request:availability30d{verb=\"all\", cluster=\"$cluster\"} - 0.990000)",
                      "legendFormat": "errorbudget"
                   }
                ],
                "title": "ErrorBudget (30d) > 99.000%",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many percent of read requests (LIST,GET) in 30 days have been answered successfully and fast enough?",
                "fieldConfig": {
                   "defaults": {
                      "decimals": 3,
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 0,
                   "y": 9
                },
                "id": 4,
                "interval": "1m",
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "apiserver_request:availability30d{verb=\"read\", cluster=\"$cluster\"}"
                   }
                ],
                "title": "Read Availability (30d)",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many read requests (LIST,GET) per second do the apiservers get by code?",
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 100,
                         "stacking": {
                            "mode": "normal"
                         }
                      },
                      "unit": "reqps"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/2../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#56A64B"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/3../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#F2CC0C"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/4../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#3274D9"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/5../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#E02F44"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 6,
                   "y": 9
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\"read\", cluster=\"$cluster\"})",
                      "legendFormat": "{{ code }}"
                   }
                ],
                "title": "Read SLI - Requests",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many percent of read requests (LIST,GET) per second are returned with errors (5xx)?",
                "fieldConfig": {
                   "defaults": {
                      "min": 0,
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 12,
                   "y": 9
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"read\",code=~\"5..\", cluster=\"$cluster\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"read\", cluster=\"$cluster\"})",
                      "legendFormat": "{{ resource }}"
                   }
                ],
                "title": "Read SLI - Errors",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many seconds is the 99th percentile for reading (LIST|GET) a given resource?",
                "fieldConfig": {
                   "defaults": {
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 18,
                   "y": 9
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile{verb=\"read\", cluster=\"$cluster\"}",
                      "legendFormat": "{{ resource }}"
                   }
                ],
                "title": "Read SLI - Duration",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many percent of write requests (POST|PUT|PATCH|DELETE) in 30 days have been answered successfully and fast enough?",
                "fieldConfig": {
                   "defaults": {
                      "decimals": 3,
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 0,
                   "y": 16
                },
                "id": 8,
                "interval": "1m",
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "apiserver_request:availability30d{verb=\"write\", cluster=\"$cluster\"}"
                   }
                ],
                "title": "Write Availability (30d)",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many write requests (POST|PUT|PATCH|DELETE) per second do the apiservers get by code?",
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 100,
                         "stacking": {
                            "mode": "normal"
                         }
                      },
                      "unit": "reqps"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/2../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#56A64B"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/3../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#F2CC0C"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/4../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#3274D9"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/5../i"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": "#E02F44"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 6,
                   "y": 16
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\"write\", cluster=\"$cluster\"})",
                      "legendFormat": "{{ code }}"
                   }
                ],
                "title": "Write SLI - Requests",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many percent of write requests (POST|PUT|PATCH|DELETE) per second are returned with errors (5xx)?",
                "fieldConfig": {
                   "defaults": {
                      "min": 0,
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 12,
                   "y": 16
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"write\",code=~\"5..\", cluster=\"$cluster\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"write\", cluster=\"$cluster\"})",
                      "legendFormat": "{{ resource }}"
                   }
                ],
                "title": "Write SLI - Errors",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "description": "How many seconds is the 99th percentile for writing (POST|PUT|PATCH|DELETE) a given resource?",
                "fieldConfig": {
                   "defaults": {
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 18,
                   "y": 16
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile{verb=\"write\", cluster=\"$cluster\"}",
                      "legendFormat": "{{ resource }}"
                   }
                ],
                "title": "Write SLI - Duration",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "min": 0,
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 23
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": false
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(workqueue_adds_total{job=\"integrations/kubernetes/apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])) by (instance, name)",
                      "legendFormat": "{{instance}} {{name}}"
                   }
                ],
                "title": "Work Queue Add Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "min": 0,
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 23
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": false
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(workqueue_depth{job=\"integrations/kubernetes/apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])) by (instance, name)",
                      "legendFormat": "{{instance}} {{name}}"
                   }
                ],
                "title": "Work Queue Depth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "min": 0,
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 30
                },
                "id": 14,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{job=\"integrations/kubernetes/apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])) by (instance, name, le))",
                      "legendFormat": "{{instance}} {{name}}"
                   }
                ],
                "title": "Work Queue Latency",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "bytes"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 37
                },
                "id": 15,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "process_resident_memory_bytes{job=\"integrations/kubernetes/apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Memory",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "min": 0,
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 8,
                   "y": 37
                },
                "id": 16,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "rate(process_cpu_seconds_total{job=\"integrations/kubernetes/apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "CPU usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 16,
                   "y": 37
                },
                "id": 17,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "go_goroutines{job=\"integrations/kubernetes/apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Goroutines",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/apiserver\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "name": "instance",
                   "query": "label_values(up{job=\"integrations/kubernetes/apiserver\", cluster=\"$cluster\"}, instance)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / API server",
          "uid": "09ec8aa1e996d6ffcd6817bbaff4db1b"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: apiserver.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  cluster-total.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Current Rate of Bytes Received",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Current Rate of Bytes Transmitted",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Bytes/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "binBps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Packets/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "pps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Namespace"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down",
                                     "url": "/d/8b7a8b326d7a6f1f04244066368c67af/kubernetes-networking-namespace-pods?${datasource:queryparam}&var-cluster=${cluster}&var-namespace=${__data.fields.Namespace}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 9,
                   "w": 24,
                   "x": 0,
                   "y": 9
                },
                "id": 3,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "avg by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "avg by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Status",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "namespace",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "Time 7": true,
                            "Time 8": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Time 7": 6,
                            "Time 8": 7,
                            "Value #A": 9,
                            "Value #B": 10,
                            "Value #C": 11,
                            "Value #D": 12,
                            "Value #E": 13,
                            "Value #F": 14,
                            "Value #G": 15,
                            "Value #H": 16,
                            "namespace": 8
                         },
                         "renameByName": {
                            "Value #A": "Rx Bytes",
                            "Value #B": "Tx Bytes",
                            "Value #C": "Rx Bytes (Avg)",
                            "Value #D": "Tx Bytes (Avg)",
                            "Value #E": "Rx Packets",
                            "Value #F": "Tx Packets",
                            "Value #G": "Rx Packets Dropped",
                            "Value #H": "Tx Packets Dropped",
                            "namespace": "Namespace"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 18
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "avg by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Rate of Bytes Received",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 18
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "avg by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Rate of Bytes Transmitted",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 27
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 27
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 36
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 36
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 45
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 45
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (namespace) (\n    rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 54
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (instance) (\n    rate(node_netstat_Tcp_RetransSegs{cluster=\"$cluster\"}[$__rate_interval]) / rate(node_netstat_Tcp_OutSegs{cluster=\"$cluster\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of TCP Retransmits out of all sent segments",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 54
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (instance) (\n    rate(node_netstat_TcpExt_TCPSynRetrans{cluster=\"$cluster\"}[$__rate_interval]) / rate(node_netstat_Tcp_RetransSegs{cluster=\"$cluster\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of TCP SYN Retransmits out of all retransmits",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/cadvisor\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Networking / Cluster",
          "uid": "ff635a025bcfea7bc3dd4f508990a3e9"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: cluster-total.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  controller-manager.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(up{cluster=\"$cluster\", job=\"kube-controller-manager\"})",
                      "instant": true
                   }
                ],
                "title": "Up",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 20,
                   "x": 4,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(workqueue_adds_total{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, name)",
                      "legendFormat": "{{cluster}} {{instance}} {{name}}"
                   }
                ],
                "title": "Work Queue Add Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 7
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(workqueue_depth{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, name)",
                      "legendFormat": "{{cluster}} {{instance}} {{name}}"
                   }
                ],
                "title": "Work Queue Depth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 14
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, name, le))",
                      "legendFormat": "{{cluster}} {{instance}} {{name}}"
                   }
                ],
                "title": "Work Queue Latency",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 21
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                      "legendFormat": "2xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                      "legendFormat": "3xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                      "legendFormat": "4xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                      "legendFormat": "5xx"
                   }
                ],
                "title": "Kube API Request Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 16,
                   "x": 8,
                   "y": 21
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\", verb=\"POST\"}[$__rate_interval])) by (verb, le))",
                      "legendFormat": "{{verb}}"
                   }
                ],
                "title": "Post Request Latency 99th Quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 28
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\", verb=\"GET\"}[$__rate_interval])) by (verb, le))",
                      "legendFormat": "{{verb}}"
                   }
                ],
                "title": "Get Request Latency 99th Quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 35
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "process_resident_memory_bytes{cluster=\"$cluster\", job=\"kube-controller-manager\",instance=~\"$instance\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Memory",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 8,
                   "y": 35
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\", job=\"kube-controller-manager\",instance=~\"$instance\"}[$__rate_interval])",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "CPU usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 16,
                   "y": 35
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "go_goroutines{cluster=\"$cluster\", job=\"kube-controller-manager\",instance=~\"$instance\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Goroutines",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"kube-controller-manager\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "instance",
                   "name": "instance",
                   "query": "label_values(up{cluster=\"$cluster\", job=\"kube-controller-manager\"}, instance)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Controller Manager",
          "uid": "72e0e05bef5099e5f049b05fdc429ed4"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: controller-manager.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  go-runtime.json: |-
    {
          "annotations": {
             "list": [
                {
                   "builtIn": 1,
                   "datasource": "-- Grafana --",
                   "enable": true,
                   "hide": true,
                   "iconColor": "rgba(0, 211, 255, 1)",
                   "name": "Annotations & Alerts",
                   "type": "dashboard"
                }
             ]
          },
          "description": "Go runtime metrics",
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "id": 14,
          "iteration": 1623758038990,
          "links": [ ],
          "panels": [
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average total bytes of memory reserved across all process instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 0,
                   "y": 0
                },
                "hiddenSeries": false,
                "id": 16,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by(job)(go_memstats_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}} (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Total Reserved Memory",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "decbytes",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average stack memory usage across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 12,
                   "y": 0
                },
                "hiddenSeries": false,
                "id": 24,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job) (go_memstats_stack_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: stack inuse (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Stack Memory Use",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "decbytes",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average memory reservations by the runtime, not for stack or heap, across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 0,
                   "y": 8
                },
                "hiddenSeries": false,
                "id": 26,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job)(go_memstats_mspan_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{instance}}: mspan (avg)",
                      "refId": "B"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_mcache_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{instance}}: mcache (avg)",
                      "refId": "D"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_buck_hash_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{instance}}: buck hash (avg)",
                      "refId": "E"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_gc_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: gc (avg)",
                      "refId": "F"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Other Memory Reservations",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "decbytes",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average memory reserved, and actually in use, by the heap, across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 12,
                   "y": 8
                },
                "hiddenSeries": false,
                "id": 12,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job)(go_memstats_heap_sys_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: heap reserved (avg)",
                      "refId": "B"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_heap_inuse_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: heap in use (avg)",
                      "refId": "A"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_heap_alloc_bytes{job=~\"tns_app\",instance=~\".*\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: heap alloc (avg)",
                      "refId": "C"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_heap_idle_bytes{job=~\"tns_app\",instance=~\".*\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: heap idle (avg)",
                      "refId": "D"
                   },
                   {
                      "expr": "avg by (job)(go_memstats_heap_released_bytes{job=~\"tns_app\",instance=~\".*\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: heap released (avg)",
                      "refId": "E"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Heap Memory",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "decbytes",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average allocation rate in bytes per second, across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 0,
                   "y": 16
                },
                "hiddenSeries": false,
                "id": 14,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 1,
                "points": true,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job)(rate(go_memstats_alloc_bytes_total{job=\"$job\", instance=~\"$instance\"}[$__rate_interval]))",
                      "interval": "",
                      "legendFormat": "{{job}}: bytes malloced/s (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Allocation Rate, Bytes",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "Bps",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average rate of heap object allocation, across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 12,
                   "y": 16
                },
                "hiddenSeries": false,
                "id": 20,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "rate(go_memstats_mallocs_total{job=\"$job\", instance=~\"$instance\"}[$__rate_interval])",
                      "interval": "",
                      "legendFormat": "{{job}}: obj mallocs/s (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Heap Object Allocation Rate",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average number of live memory objects across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 0,
                   "y": 24
                },
                "hiddenSeries": false,
                "id": 22,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "rightSide": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by(job)(go_memstats_mallocs_total{job=\"$job\", instance=~\"$instance\"} - go_memstats_frees_total{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: object count (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Number of Live Objects",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "Average number of goroutines across instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 12,
                   "y": 24
                },
                "hiddenSeries": false,
                "id": 8,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job)(go_goroutines{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: goroutine count (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Goroutines",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "decimals": 0,
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 0,
                   "y": 32
                },
                "hiddenSeries": false,
                "id": 4,
                "legend": {
                   "alignAsTable": false,
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job)(go_gc_duration_seconds{quantile=\"0\", job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: min gc time (avg)",
                      "refId": "A"
                   },
                   {
                      "expr": "avg by (job)(go_gc_duration_seconds{quantile=\"1\", job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}}: max gc time (avg)",
                      "refId": "B"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "GC min & max duration",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "ms",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "description": "The number used bytes at which the runtime plans to perform the next GC, averaged across all instances of a job.",
                "fieldConfig": {
                   "defaults": {
                      "links": [ ]
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                   "h": 8,
                   "w": 12,
                   "x": 12,
                   "y": 32
                },
                "hiddenSeries": false,
                "id": 27,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null",
                "options": {
                   "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "8.0.2",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "avg by (job)(go_memstats_next_gc_bytes{job=\"$job\", instance=~\"$instance\"})",
                      "interval": "",
                      "legendFormat": "{{job}} next gc bytes (avg)",
                      "refId": "A"
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeRegions": [ ],
                "timeShift": null,
                "title": "Next GC, Bytes",
                "tooltip": {
                   "shared": true,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "decbytes",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   },
                   {
                      "format": "s",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": true
                   }
                ],
                "yaxis": {
                   "align": false,
                   "alignLevel": null
                }
             }
          ],
          "refresh": "30s",
          "schemaVersion": 30,
          "style": "dark",
          "tags": [
             "go-runtime"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": false,
                      "text": "MONITORING",
                      "value": "MONITORING"
                   },
                   "description": null,
                   "error": null,
                   "hide": 0,
                   "includeAll": false,
                   "label": null,
                   "multi": false,
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "queryValue": "",
                   "refresh": 1,
                   "regex": "",
                   "skipUrlSync": false,
                   "type": "datasource"
                },
                {
                   "allValue": null,
                   "current": {
                      "selected": false,
                      "text": "pilot",
                      "value": "pilot"
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(go_info, job)",
                   "description": null,
                   "error": null,
                   "hide": 0,
                   "includeAll": false,
                   "label": "job",
                   "multi": false,
                   "name": "job",
                   "options": [ ],
                   "query": {
                      "query": "label_values(go_info, job)",
                      "refId": "MONITORING-job-Variable-Query"
                   },
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 0,
                   "tagValuesQuery": "",
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": "",
                   "current": {
                      "selected": false,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "definition": "label_values(go_info{job=\"$job\"}, instance)",
                   "description": null,
                   "error": null,
                   "hide": 0,
                   "includeAll": true,
                   "label": "instance",
                   "multi": true,
                   "name": "instance",
                   "options": [ ],
                   "query": {
                      "query": "label_values(go_info{job=\"$job\"}, instance)",
                      "refId": "MONITORING-instance-Variable-Query"
                   },
                   "refresh": 2,
                   "regex": "",
                   "skipUrlSync": false,
                   "sort": 0,
                   "tagValuesQuery": "",
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-30m",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "browser",
          "title": "Go runtime metrics",
          "uid": "e23170faf062edef7018a88aa6f37354",
          "version": 1
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/go-runtime-mixin
  labels:
    grafana_dashboard: "1"
  name: go-runtime.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  k8s-resources-cluster.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 4,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "cluster:node_cpu:ratio_rate5m{cluster=\"$cluster\"}",
                      "instant": true
                   }
                ],
                "title": "CPU Utilisation",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 4,
                   "x": 4,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"integrations/kubernetes/kube-state-metrics\",resource=\"cpu\",cluster=\"$cluster\"})",
                      "instant": true
                   }
                ],
                "title": "CPU Requests Commitment",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 4,
                   "x": 8,
                   "y": 0
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"integrations/kubernetes/kube-state-metrics\",resource=\"cpu\",cluster=\"$cluster\"})",
                      "instant": true
                   }
                ],
                "title": "CPU Limits Commitment",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 4,
                   "x": 12,
                   "y": 0
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "1 - sum(:node_memory_MemAvailable_bytes:sum{cluster=\"$cluster\"}) / sum(node_memory_MemTotal_bytes{job=\"integrations/kubernetes/node-exporter\",cluster=\"$cluster\"})",
                      "instant": true
                   }
                ],
                "title": "Memory Utilisation",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 4,
                   "x": 16,
                   "y": 0
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"integrations/kubernetes/kube-state-metrics\",resource=\"memory\",cluster=\"$cluster\"})",
                      "instant": true
                   }
                ],
                "title": "Memory Requests Commitment",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 4,
                   "x": 20,
                   "y": 0
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"integrations/kubernetes/kube-state-metrics\",resource=\"memory\",cluster=\"$cluster\"})",
                      "instant": true
                   }
                ],
                "title": "Memory Limits Commitment",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      }
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 6
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\"}) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "CPU Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Namespace"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 12
                },
                "id": 8,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(kube_pod_owner{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\"}) by (namespace) / sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\"}) by (namespace) / sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "CPU Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "namespace",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "Time 7": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Time 7": 6,
                            "Value #A": 8,
                            "Value #B": 9,
                            "Value #C": 10,
                            "Value #D": 11,
                            "Value #E": 12,
                            "Value #F": 13,
                            "Value #G": 14,
                            "namespace": 7
                         },
                         "renameByName": {
                            "Value #A": "Pods",
                            "Value #B": "Workloads",
                            "Value #C": "CPU Usage",
                            "Value #D": "CPU Requests",
                            "Value #E": "CPU Requests %",
                            "Value #F": "CPU Limits",
                            "Value #G": "CPU Limits %",
                            "namespace": "Namespace"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 18
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_rss{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Memory",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Memory Usage"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "bytes"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Memory Requests"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "bytes"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Memory Limits"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "bytes"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Namespace"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 24
                },
                "id": 10,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(kube_pod_owner{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_rss{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_rss{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace) / sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_rss{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace) / sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Memory Requests by Namespace",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "namespace",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "Time 7": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Time 7": 6,
                            "Value #A": 8,
                            "Value #B": 9,
                            "Value #C": 10,
                            "Value #D": 11,
                            "Value #E": 12,
                            "Value #F": 13,
                            "Value #G": 14,
                            "namespace": 7
                         },
                         "renameByName": {
                            "Value #A": "Pods",
                            "Value #B": "Workloads",
                            "Value #C": "Memory Usage",
                            "Value #D": "Memory Requests",
                            "Value #E": "Memory Requests %",
                            "Value #F": "Memory Limits",
                            "Value #G": "Memory Limits %",
                            "namespace": "Namespace"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Bandwidth/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Packets/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "pps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Namespace"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 30
                },
                "id": 11,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Network Usage",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "namespace",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "namespace": 6
                         },
                         "renameByName": {
                            "Value #A": "Current Receive Bandwidth",
                            "Value #B": "Current Transmit Bandwidth",
                            "Value #C": "Rate of Received Packets",
                            "Value #D": "Rate of Transmitted Packets",
                            "Value #E": "Rate of Received Packets Dropped",
                            "Value #F": "Rate of Transmitted Packets Dropped",
                            "namespace": "Namespace"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 36
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 42
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 48
                },
                "id": 14,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "avg(irate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Container Bandwidth by Namespace: Received",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 54
                },
                "id": 15,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "avg(irate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Container Bandwidth by Namespace: Transmitted",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 60
                },
                "id": 16,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 66
                },
                "id": 17,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 72
                },
                "id": 18,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 78
                },
                "id": 19,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "iops"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 84
                },
                "id": 20,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "ceil(sum by(namespace) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval])))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "IOPS(Reads+Writes)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 90
                },
                "id": 21,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "ThroughPut(Read+Write)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/IOPS/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "iops"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Throughput/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Namespace"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 96
                },
                "id": 22,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(namespace) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Storage IO",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "namespace",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "namespace": 6
                         },
                         "renameByName": {
                            "Value #A": "IOPS(Reads)",
                            "Value #B": "IOPS(Writes)",
                            "Value #C": "IOPS(Reads + Writes)",
                            "Value #D": "Throughput(Read)",
                            "Value #E": "Throughput(Write)",
                            "Value #F": "Throughput(Read + Write)",
                            "namespace": "Namespace"
                         }
                      }
                   }
                ],
                "type": "table"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/cadvisor\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Compute Resources / Cluster",
          "uid": "efa86fd1d0c121a26444b636a3f509a8"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: k8s-resources-cluster.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  k8s-resources-namespace.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 6,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}) / sum(kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"})",
                      "instant": true
                   }
                ],
                "title": "CPU Utilisation (from requests)",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 6,
                   "x": 6,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}) / sum(kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"})",
                      "instant": true
                   }
                ],
                "title": "CPU Utilisation (from limits)",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 6,
                   "x": 12,
                   "y": 0
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) / sum(kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"})",
                      "instant": true
                   }
                ],
                "title": "Memory Utilisation (from requests)",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 3,
                   "w": 6,
                   "x": 18,
                   "y": 0
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) / sum(kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"})",
                      "instant": true
                   }
                ],
                "title": "Memory Utilisation (from limits)",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      }
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "B"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "C"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "orange",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 7
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "legendFormat": "__auto"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.cpu\"}))",
                      "legendFormat": "quota - requests"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.cpu\"}))",
                      "legendFormat": "quota - limits"
                   }
                ],
                "title": "CPU Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 14
                },
                "id": 6,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "CPU Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Value #A": 6,
                            "Value #B": 7,
                            "Value #C": 8,
                            "Value #D": 9,
                            "Value #E": 10,
                            "pod": 5
                         },
                         "renameByName": {
                            "Value #A": "CPU Usage",
                            "Value #B": "CPU Requests",
                            "Value #C": "CPU Requests %",
                            "Value #D": "CPU Limits",
                            "Value #E": "CPU Limits %",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "B"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "C"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "orange",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 21
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}) by (pod)",
                      "legendFormat": "__auto"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.memory\"}))",
                      "legendFormat": "quota - requests"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.memory\"}))",
                      "legendFormat": "quota - limits"
                   }
                ],
                "title": "Memory Usage (w/o cache)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 28
                },
                "id": 8,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_rss{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_cache{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_swap{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Memory Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "Time 7": true,
                            "Time 8": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Time 7": 6,
                            "Time 8": 7,
                            "Value #A": 9,
                            "Value #B": 10,
                            "Value #C": 11,
                            "Value #D": 12,
                            "Value #E": 13,
                            "Value #F": 14,
                            "Value #G": 15,
                            "Value #H": 16,
                            "pod": 8
                         },
                         "renameByName": {
                            "Value #A": "Memory Usage",
                            "Value #B": "Memory Requests",
                            "Value #C": "Memory Requests %",
                            "Value #D": "Memory Limits",
                            "Value #E": "Memory Limits %",
                            "Value #F": "Memory Usage (RSS)",
                            "Value #G": "Memory Usage (Cache)",
                            "Value #H": "Memory Usage (Swap)",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Bandwidth/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Packets/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "pps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 35
                },
                "id": 9,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Network Usage",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "pod": 6
                         },
                         "renameByName": {
                            "Value #A": "Current Receive Bandwidth",
                            "Value #B": "Current Transmit Bandwidth",
                            "Value #C": "Rate of Received Packets",
                            "Value #D": "Rate of Transmitted Packets",
                            "Value #E": "Rate of Received Packets Dropped",
                            "Value #F": "Rate of Transmitted Packets Dropped",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 42
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 42
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 49
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 49
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 56
                },
                "id": 14,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 56
                },
                "id": 15,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "iops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 63
                },
                "id": 16,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "ceil(sum by(pod) (rate(container_fs_reads_total{container!=\"\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_total{container!=\"\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "IOPS(Reads+Writes)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 63
                },
                "id": 17,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{container!=\"\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{container!=\"\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "ThroughPut(Read+Write)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/IOPS/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "iops"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Throughput/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 70
                },
                "id": 18,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Storage IO",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "pod": 6
                         },
                         "renameByName": {
                            "Value #A": "IOPS(Reads)",
                            "Value #B": "IOPS(Writes)",
                            "Value #C": "IOPS(Reads + Writes)",
                            "Value #D": "Throughput(Read)",
                            "Value #E": "Throughput(Write)",
                            "Value #F": "Throughput(Read + Write)",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/kube-state-metrics\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "namespace",
                   "name": "namespace",
                   "query": "label_values(kube_namespace_status_phase{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Compute Resources / Namespace (Pods)",
          "uid": "85a562078cdf77779eaa1add43ccec1e"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: k8s-resources-namespace.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  k8s-resources-node.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true,
                         "stacking": {
                            "mode": "normal"
                         }
                      }
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "max capacity"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            },
                            {
                               "id": "custom.stacking",
                               "value": {
                                  "mode": "none"
                               }
                            },
                            {
                               "id": "custom.hideFrom",
                               "value": {
                                  "legend": false,
                                  "tooltip": true,
                                  "viz": false
                               }
                            },
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "dash": [
                                     10,
                                     10
                                  ],
                                  "fill": "dash"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(kube_node_status_capacity{cluster=\"$cluster\", job=\"integrations/kubernetes/kube-state-metrics\", node=~\"$node\", resource=\"cpu\"})",
                      "legendFormat": "max capacity"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                      "legendFormat": "{{pod}}"
                   }
                ],
                "title": "CPU Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 6
                },
                "id": 2,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", node=~\"$node\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", node=~\"$node\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "CPU Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true
                         },
                         "renameByName": {
                            "Value #A": "CPU Usage",
                            "Value #B": "CPU Requests",
                            "Value #C": "CPU Requests %",
                            "Value #D": "CPU Limits",
                            "Value #E": "CPU Limits %",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true,
                         "stacking": {
                            "mode": "normal"
                         }
                      },
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "max capacity"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            },
                            {
                               "id": "custom.stacking",
                               "value": {
                                  "mode": "none"
                               }
                            },
                            {
                               "id": "custom.hideFrom",
                               "value": {
                                  "legend": false,
                                  "tooltip": true,
                                  "viz": false
                               }
                            },
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "dash": [
                                     10,
                                     10
                                  ],
                                  "fill": "dash"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 12
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(kube_node_status_capacity{cluster=\"$cluster\", job=\"integrations/kubernetes/kube-state-metrics\", node=~\"$node\", resource=\"memory\"})",
                      "legendFormat": "max capacity"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\", container!=\"\"}) by (pod)",
                      "legendFormat": "{{pod}}"
                   }
                ],
                "title": "Memory Usage (w/cache)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true,
                         "stacking": {
                            "mode": "normal"
                         }
                      },
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "max capacity"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            },
                            {
                               "id": "custom.stacking",
                               "value": {
                                  "mode": "none"
                               }
                            },
                            {
                               "id": "custom.hideFrom",
                               "value": {
                                  "legend": false,
                                  "tooltip": true,
                                  "viz": false
                               }
                            },
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "dash": [
                                     10,
                                     10
                                  ],
                                  "fill": "dash"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 18
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(kube_node_status_capacity{cluster=\"$cluster\", job=\"integrations/kubernetes/kube-state-metrics\", node=~\"$node\", resource=\"memory\"})",
                      "legendFormat": "max capacity"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_memory_rss{cluster=\"$cluster\", node=~\"$node\", container!=\"\"}) by (pod)",
                      "legendFormat": "{{pod}}"
                   }
                ],
                "title": "Memory Usage (w/o cache)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 6,
                   "w": 24,
                   "x": 0,
                   "y": 24
                },
                "id": 5,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_memory_rss{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_memory_cache{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_memory_swap{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Memory Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "Time 7": true,
                            "Time 8": true
                         },
                         "renameByName": {
                            "Value #A": "Memory Usage",
                            "Value #B": "Memory Requests",
                            "Value #C": "Memory Requests %",
                            "Value #D": "Memory Limits",
                            "Value #E": "Memory Limits %",
                            "Value #F": "Memory Usage (RSS)",
                            "Value #G": "Memory Usage (Cache)",
                            "Value #H": "Memory Usage (Swap)",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/kube-state-metrics\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "node",
                   "multi": true,
                   "name": "node",
                   "query": "label_values(kube_node_info{cluster=\"$cluster\"}, node)",
                   "refresh": 2,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Compute Resources / Node (Pods)",
          "uid": "200ac8fdbfbb74b39aff88118e4d1c2c"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: k8s-resources-node.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  k8s-resources-pod.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      }
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "B"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "C"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "orange",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{namespace=\"$namespace\", pod=\"$pod\", cluster=\"$cluster\", container!=\"\"}) by (container)",
                      "legendFormat": "__auto"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"}\n)\n",
                      "legendFormat": "requests"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"}\n)\n",
                      "legendFormat": "limits"
                   }
                ],
                "title": "CPU Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "axisColorMode": "thresholds",
                         "axisSoftMax": 1,
                         "axisSoftMin": 0,
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true,
                         "thresholdsStyle": {
                            "mode": "dashed+area"
                         }
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "A"
                         },
                         "properties": [
                            {
                               "id": "thresholds",
                               "value": {
                                  "mode": "absolute",
                                  "steps": [
                                     {
                                        "color": "green",
                                        "value": null
                                     },
                                     {
                                        "color": "red",
                                        "value": 0.25
                                     }
                                  ]
                               }
                            },
                            {
                               "id": "color",
                               "value": {
                                  "mode": "thresholds",
                                  "seriesBy": "lastNotNull"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 7
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(increase(container_cpu_cfs_throttled_periods_total{job=\"integrations/kubernetes/cadvisor\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", cluster=\"$cluster\"}[$__rate_interval])) by (container) /sum(increase(container_cpu_cfs_periods_total{job=\"integrations/kubernetes/cadvisor\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", cluster=\"$cluster\"}[$__rate_interval])) by (container)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "CPU Throttling",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 14
                },
                "id": 3,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "CPU Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "container",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Value #A": 6,
                            "Value #B": 7,
                            "Value #C": 8,
                            "Value #D": 9,
                            "Value #E": 10,
                            "container": 5
                         },
                         "renameByName": {
                            "Value #A": "CPU Usage",
                            "Value #B": "CPU Requests",
                            "Value #C": "CPU Requests %",
                            "Value #D": "CPU Limits",
                            "Value #E": "CPU Limits %",
                            "container": "Container"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "B"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "C"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "orange",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 21
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container)",
                      "legendFormat": "__auto"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"}\n)\n",
                      "legendFormat": "requests"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"}\n)\n",
                      "legendFormat": "limits"
                   }
                ],
                "title": "Memory Usage (WSS)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 28
                },
                "id": 5,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", image!=\"\"}) by (container) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_rss{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_cache{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(container_memory_swap{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Memory Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "container",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "Time 7": true,
                            "Time 8": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Time 7": 6,
                            "Time 8": 7,
                            "Value #A": 9,
                            "Value #B": 10,
                            "Value #C": 11,
                            "Value #D": 12,
                            "Value #E": 13,
                            "Value #F": 14,
                            "Value #G": 15,
                            "Value #H": 16,
                            "container": 8
                         },
                         "renameByName": {
                            "Value #A": "Memory Usage",
                            "Value #B": "Memory Requests",
                            "Value #C": "Memory Requests %",
                            "Value #D": "Memory Limits",
                            "Value #E": "Memory Limits %",
                            "Value #F": "Memory Usage (RSS)",
                            "Value #G": "Memory Usage (Cache)",
                            "Value #H": "Memory Usage (Swap)",
                            "container": "Container"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 35
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(irate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 35
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 42
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 42
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 49
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 49
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "iops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 56
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "ceil(sum by(pod) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])))",
                      "legendFormat": "Reads"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "ceil(sum by(pod) (rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\",namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])))",
                      "legendFormat": "Writes"
                   }
                ],
                "title": "IOPS (Pod)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 56
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                      "legendFormat": "Reads"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(pod) (rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                      "legendFormat": "Writes"
                   }
                ],
                "title": "ThroughPut (Pod)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "iops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 63
                },
                "id": 14,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "ceil(sum by(container) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval])))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "IOPS (Containers)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 63
                },
                "id": 15,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "ThroughPut (Containers)",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/IOPS/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "iops"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Throughput/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 70
                },
                "id": 16,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\",device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_reads_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by(container) (rate(container_fs_reads_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"integrations/kubernetes/cadvisor\", device=~\"(/dev.+)|mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Storage IO",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "container",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "container": 6
                         },
                         "renameByName": {
                            "Value #A": "IOPS(Reads)",
                            "Value #B": "IOPS(Writes)",
                            "Value #C": "IOPS(Reads + Writes)",
                            "Value #D": "Throughput(Read)",
                            "Value #E": "Throughput(Write)",
                            "Value #F": "Throughput(Read + Write)",
                            "container": "Container"
                         }
                      }
                   }
                ],
                "type": "table"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/kube-state-metrics\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "namespace",
                   "name": "namespace",
                   "query": "label_values(kube_namespace_status_phase{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "pod",
                   "name": "pod",
                   "query": "label_values(kube_pod_info{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\"}, pod)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Compute Resources / Pod",
          "uid": "6581e46e4e5c7ba40a07646395ef7b23"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: k8s-resources-pod.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  k8s-resources-workload.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      }
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "CPU Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 7
                },
                "id": 2,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "CPU Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Value #A": 6,
                            "Value #B": 7,
                            "Value #C": 8,
                            "Value #D": 9,
                            "Value #E": 10,
                            "pod": 5
                         },
                         "renameByName": {
                            "Value #A": "CPU Usage",
                            "Value #B": "CPU Requests",
                            "Value #C": "CPU Requests %",
                            "Value #D": "CPU Limits",
                            "Value #E": "CPU Limits %",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 14
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Memory Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 21
                },
                "id": 4,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Memory Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Value #A": 9,
                            "Value #B": 10,
                            "Value #C": 11,
                            "Value #D": 12,
                            "Value #E": 13,
                            "pod": 8
                         },
                         "renameByName": {
                            "Value #A": "Memory Usage",
                            "Value #B": "Memory Requests",
                            "Value #C": "Memory Requests %",
                            "Value #D": "Memory Limits",
                            "Value #E": "Memory Limits %",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Bandwidth/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Packets/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "pps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to pods",
                                     "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 28
                },
                "id": 5,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Network Usage",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "pod": 6
                         },
                         "renameByName": {
                            "Value #A": "Current Receive Bandwidth",
                            "Value #B": "Current Transmit Bandwidth",
                            "Value #C": "Rate of Received Packets",
                            "Value #D": "Rate of Transmitted Packets",
                            "Value #E": "Rate of Received Packets Dropped",
                            "Value #F": "Rate of Transmitted Packets Dropped",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 35
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 35
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 42
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(avg(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Container Bandwidth by Pod: Received",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 42
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(avg(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Container Bandwidth by Pod: Transmitted",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 49
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 49
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 56
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 56
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/kube-state-metrics\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "namespace",
                   "name": "namespace",
                   "query": "label_values(kube_namespace_status_phase{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "workload_type",
                   "name": "type",
                   "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\"}, workload_type)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "workload",
                   "name": "workload",
                   "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}, workload)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Compute Resources / Workload",
          "uid": "a164a7f0339f99e89cea5cb47e9be617"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: k8s-resources-workload.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  k8s-resources-workloads-namespace.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      }
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "B"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "C"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "orange",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                      "legendFormat": "{{workload}} - {{workload_type}}"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=~\"requests.cpu|cpu\"}))",
                      "legendFormat": "quota - requests"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=~\"limits.cpu\"}))",
                      "legendFormat": "quota - limits"
                   }
                ],
                "title": "CPU Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Workload"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to workloads",
                                     "url": "/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-type=${__data.fields.Type}&var-workload=${__data.fields.Workload}"
                                  }
                               ]
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Running Pods"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "none"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 7
                },
                "id": 2,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload, workload_type)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n  kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n  kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "CPU Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "workload",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "workload_type 2": true,
                            "workload_type 3": true,
                            "workload_type 4": true,
                            "workload_type 5": true,
                            "workload_type 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 8,
                            "Value #B": 9,
                            "Value #C": 10,
                            "Value #D": 11,
                            "Value #E": 12,
                            "Value #F": 13,
                            "workload": 6,
                            "workload_type 1": 7,
                            "workload_type 2": 14,
                            "workload_type 3": 15,
                            "workload_type 4": 16,
                            "workload_type 5": 17,
                            "workload_type 6": 18
                         },
                         "renameByName": {
                            "Value #A": "Running Pods",
                            "Value #B": "CPU Usage",
                            "Value #C": "CPU Requests",
                            "Value #D": "CPU Requests %",
                            "Value #E": "CPU Limits",
                            "Value #F": "CPU Limits %",
                            "workload": "Workload",
                            "workload_type 1": "Type"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "B"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "red",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byFrameRefID",
                            "options": "C"
                         },
                         "properties": [
                            {
                               "id": "custom.lineStyle",
                               "value": {
                                  "fill": "dash"
                               }
                            },
                            {
                               "id": "custom.lineWidth",
                               "value": 2
                            },
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "orange",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 14
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                      "legendFormat": "{{workload}} - {{workload_type}}"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=~\"requests.memory|memory\"}))",
                      "legendFormat": "quota - requests"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=~\"limits.memory\"}))",
                      "legendFormat": "quota - limits"
                   }
                ],
                "title": "Memory Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "bytes"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/%/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "percentunit"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Workload"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to workloads",
                                     "url": "/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-type=${__data.fields.Type}&var-workload=${__data.fields.Workload}"
                                  }
                               ]
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Running Pods"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "none"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 21
                },
                "id": 4,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload, workload_type)",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n  kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n  kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(\n    container_memory_working_set_bytes{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Memory Quota",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "workload",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "workload_type 2": true,
                            "workload_type 3": true,
                            "workload_type 4": true,
                            "workload_type 5": true,
                            "workload_type 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 8,
                            "Value #B": 9,
                            "Value #C": 10,
                            "Value #D": 11,
                            "Value #E": 12,
                            "Value #F": 13,
                            "workload": 6,
                            "workload_type 1": 7,
                            "workload_type 2": 14,
                            "workload_type 3": 15,
                            "workload_type 4": 16,
                            "workload_type 5": 17,
                            "workload_type 6": 18
                         },
                         "renameByName": {
                            "Value #A": "Running Pods",
                            "Value #B": "Memory Usage",
                            "Value #C": "Memory Requests",
                            "Value #D": "Memory Requests %",
                            "Value #E": "Memory Limits",
                            "Value #F": "Memory Limits %",
                            "workload": "Workload",
                            "workload_type 1": "Type"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Bandwidth/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Packets/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "pps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Workload"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down to workloads",
                                     "url": "/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-type=${__data.fields.Type}&var-workload=${__data.fields.Workload}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 28
                },
                "id": 5,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Network Usage",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "workload",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "workload": 6
                         },
                         "renameByName": {
                            "Value #A": "Current Receive Bandwidth",
                            "Value #B": "Current Transmit Bandwidth",
                            "Value #C": "Rate of Received Packets",
                            "Value #D": "Rate of Transmitted Packets",
                            "Value #E": "Rate of Received Packets Dropped",
                            "Value #F": "Rate of Transmitted Packets Dropped",
                            "workload": "Workload"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 35
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 35
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 42
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(avg(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Container Bandwidth by Workload: Received",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 42
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(avg(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Container Bandwidth by Workload: Transmitted",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 49
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 49
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 56
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 56
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/kube-state-metrics\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "namespace",
                   "name": "namespace",
                   "query": "label_values(kube_namespace_status_phase{job=\"integrations/kubernetes/kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "workload_type",
                   "name": "type",
                   "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\"}, workload_type)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Compute Resources / Namespace (Workloads)",
          "uid": "a87fb0d919ec0ea5f6543124e16c42a5"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: k8s-resources-workloads-namespace.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  kubelet.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(kubelet_node_name{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\"})",
                      "instant": true
                   }
                ],
                "title": "Running Kubelets",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 4,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(kubelet_running_pods{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"})",
                      "instant": true
                   }
                ],
                "title": "Running Pods",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 8,
                   "y": 0
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(kubelet_running_containers{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"})",
                      "instant": true
                   }
                ],
                "title": "Running Containers",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 12,
                   "y": 0
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(volume_manager_total_volumes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\", state=\"actual_state_of_world\"})",
                      "instant": true
                   }
                ],
                "title": "Actual Volume Count",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 16,
                   "y": 0
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(volume_manager_total_volumes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\",state=\"desired_state_of_world\"})",
                      "instant": true
                   }
                ],
                "title": "Desired Volume Count",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 20,
                   "y": 0
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(kubelet_node_config_error{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}[$__rate_interval]))",
                      "instant": true
                   }
                ],
                "title": "Config Error Count",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 7
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(kubelet_runtime_operations_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (operation_type, instance)",
                      "legendFormat": "{{instance}} {{operation_type}}"
                   }
                ],
                "title": "Operation Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 7
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(kubelet_runtime_operations_errors_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type)",
                      "legendFormat": "{{instance}} {{operation_type}}"
                   }
                ],
                "title": "Operation Error Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 14
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(kubelet_runtime_operations_duration_seconds_bucket{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type, le))",
                      "legendFormat": "{{instance}} {{operation_type}}"
                   }
                ],
                "title": "Operation Duration 99th quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 21
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(kubelet_pod_start_duration_seconds_count{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance)",
                      "legendFormat": "{{instance}} pod"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(kubelet_pod_worker_duration_seconds_count{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance)",
                      "legendFormat": "{{instance}} worker"
                   }
                ],
                "title": "Pod Start Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 21
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(kubelet_pod_start_duration_seconds_bucket{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                      "legendFormat": "{{instance}} pod"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                      "legendFormat": "{{instance}} worker"
                   }
                ],
                "title": "Pod Start Duration",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 28
                },
                "id": 12,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(storage_operation_duration_seconds_count{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_name, volume_plugin)",
                      "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}"
                   }
                ],
                "title": "Storage Operation Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 28
                },
                "id": 13,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(storage_operation_errors_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_name, volume_plugin)",
                      "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}"
                   }
                ],
                "title": "Storage Operation Error Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 35
                },
                "id": 14,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(storage_operation_duration_seconds_bucket{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_name, volume_plugin, le))",
                      "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}"
                   }
                ],
                "title": "Storage Operation Duration 99th quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 42
                },
                "id": 15,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(kubelet_cgroup_manager_duration_seconds_count{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type)",
                      "legendFormat": "{{operation_type}}"
                   }
                ],
                "title": "Cgroup manager operation rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 42
                },
                "id": 16,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(kubelet_cgroup_manager_duration_seconds_bucket{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type, le))",
                      "legendFormat": "{{instance}} {{operation_type}}"
                   }
                ],
                "title": "Cgroup manager 99th quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 49
                },
                "id": 17,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(kubelet_pleg_relist_duration_seconds_count{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}[$__rate_interval])) by (instance)",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "PLEG relist rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 49
                },
                "id": 18,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_interval_seconds_bucket{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "PLEG relist interval",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 56
                },
                "id": 19,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "PLEG relist duration",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 63
                },
                "id": 20,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                      "legendFormat": "2xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                      "legendFormat": "3xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                      "legendFormat": "4xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                      "legendFormat": "5xx"
                   }
                ],
                "title": "RPC rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 70
                },
                "id": 21,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\", instance=~\"$instance\"}[$__rate_interval])) by (instance, verb, le))",
                      "legendFormat": "{{instance}} {{verb}}"
                   }
                ],
                "title": "Request duration 99th quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 77
                },
                "id": 22,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "process_resident_memory_bytes{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Memory",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 8,
                   "y": 77
                },
                "id": 23,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}[$__rate_interval])",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "CPU usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 16,
                   "y": 77
                },
                "id": 24,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "go_goroutines{cluster=\"$cluster\",job=\"integrations/kubernetes/kubelet\",instance=~\"$instance\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Goroutines",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/kubelet\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "instance",
                   "name": "instance",
                   "query": "label_values(up{job=\"integrations/kubernetes/kubelet\",cluster=\"$cluster\"}, instance)",
                   "refresh": 2,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Kubelet",
          "uid": "3138fa155d5915769fbded898ac09fd9"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: kubelet.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  namespace-by-pod.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "displayName": "$namespace",
                      "max": 10000000000,
                      "min": 0,
                      "thresholds": {
                         "steps": [
                            {
                               "color": "dark-green",
                               "index": 0,
                               "value": null
                            },
                            {
                               "color": "dark-yellow",
                               "index": 1,
                               "value": 5000000000
                            },
                            {
                               "color": "dark-red",
                               "index": 2,
                               "value": 7000000000
                            }
                         ]
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Current Rate of Bytes Received",
                "type": "gauge"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "displayName": "$namespace",
                      "max": 10000000000,
                      "min": 0,
                      "thresholds": {
                         "steps": [
                            {
                               "color": "dark-green",
                               "index": 0,
                               "value": null
                            },
                            {
                               "color": "dark-yellow",
                               "index": 1,
                               "value": 5000000000
                            },
                            {
                               "color": "dark-red",
                               "index": 2,
                               "value": 7000000000
                            }
                         ]
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Current Rate of Bytes Transmitted",
                "type": "gauge"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Bandwidth/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "Bps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Packets/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "pps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Pod"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down",
                                     "url": "/d/7a18067ce943a40ae25454675c19ff5c/kubernetes-networking-pod?${datasource:queryparam}&var-cluster=${cluster}&var-namespace=${namespace}&var-pod=${__data.fields.Pod}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 9,
                   "w": 24,
                   "x": 0,
                   "y": 9
                },
                "id": 3,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (pod) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (pod) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (pod) (\n    rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (pod) (\n    rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (pod) (\n    rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (pod) (\n    rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Network Usage",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "pod",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Value #A": 7,
                            "Value #B": 8,
                            "Value #C": 9,
                            "Value #D": 10,
                            "Value #E": 11,
                            "Value #F": 12,
                            "pod": 6
                         },
                         "renameByName": {
                            "Value #A": "Current Receive Bandwidth",
                            "Value #B": "Current Transmit Bandwidth",
                            "Value #C": "Rate of Received Packets",
                            "Value #D": "Rate of Transmitted Packets",
                            "Value #E": "Rate of Received Packets Dropped",
                            "Value #F": "Rate of Transmitted Packets Dropped",
                            "pod": "Pod"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 18
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (pod) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 18
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (pod) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 27
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (pod) (\n    rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 27
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (pod) (\n    rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 36
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (pod) (\n    rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 36
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum by (pod) (\n    rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/cadvisor\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": false,
                      "text": "kube-system",
                      "value": "kube-system"
                   },
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "name": "namespace",
                   "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Networking / Namespace (Pods)",
          "uid": "8b7a8b326d7a6f1f04244066368c67af"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: namespace-by-pod.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  namespace-by-workload.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "fixedColor": "green",
                         "mode": "fixed"
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "displayMode": "basic",
                   "showUnfilled": false
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Current Rate of Bytes Received",
                "type": "bargauge"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "fixedColor": "green",
                         "mode": "fixed"
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "displayMode": "basic",
                   "showUnfilled": false
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Current Rate of Bytes Transmitted",
                "type": "bargauge"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Bytes/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "binBps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "/Packets/"
                         },
                         "properties": [
                            {
                               "id": "unit",
                               "value": "pps"
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Workload"
                         },
                         "properties": [
                            {
                               "id": "links",
                               "value": [
                                  {
                                     "title": "Drill down",
                                     "url": "/d/728bf77cc1166d2f3133bf25846876cc/kubernetes-networking-workload?${datasource:queryparam}&var-cluster=${cluster}&var-namespace=${namespace}&var-type=${__data.fields.Type}&var-workload=${__data.fields.Workload}"
                                  }
                               ]
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 9,
                   "w": 24,
                   "x": 0,
                   "y": 9
                },
                "id": 3,
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(avg(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(avg(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                      "format": "table",
                      "instant": true
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                      "format": "table",
                      "instant": true
                   }
                ],
                "title": "Current Status",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "workload",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true,
                            "Time 1": true,
                            "Time 2": true,
                            "Time 3": true,
                            "Time 4": true,
                            "Time 5": true,
                            "Time 6": true,
                            "Time 7": true,
                            "Time 8": true,
                            "workload_type 2": true,
                            "workload_type 3": true,
                            "workload_type 4": true,
                            "workload_type 5": true,
                            "workload_type 6": true,
                            "workload_type 7": true,
                            "workload_type 8": true
                         },
                         "indexByName": {
                            "Time 1": 0,
                            "Time 2": 1,
                            "Time 3": 2,
                            "Time 4": 3,
                            "Time 5": 4,
                            "Time 6": 5,
                            "Time 7": 6,
                            "Time 8": 7,
                            "Value #A": 10,
                            "Value #B": 11,
                            "Value #C": 12,
                            "Value #D": 13,
                            "Value #E": 14,
                            "Value #F": 15,
                            "Value #G": 16,
                            "Value #H": 17,
                            "workload": 8,
                            "workload_type 1": 9,
                            "workload_type 2": 18,
                            "workload_type 3": 19,
                            "workload_type 4": 20,
                            "workload_type 5": 21,
                            "workload_type 6": 22,
                            "workload_type 7": 23,
                            "workload_type 8": 24
                         },
                         "renameByName": {
                            "Value #A": "Rx Bytes",
                            "Value #B": "Tx Bytes",
                            "Value #C": "Rx Bytes (Avg)",
                            "Value #D": "Tx Bytes (Avg)",
                            "Value #E": "Rx Packets",
                            "Value #F": "Tx Packets",
                            "Value #G": "Rx Packets Dropped",
                            "Value #H": "Tx Packets Dropped",
                            "workload": "Workload",
                            "workload_type 1": "Type"
                         }
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 18
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 18
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 27
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(avg(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Container Bandwidth by Workload: Received",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 27
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(avg(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Container Bandwidth by Workload: Transmitted",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 36
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 36
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 45
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 45
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/cadvisor\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "current": {
                      "selected": false,
                      "text": "kube-system",
                      "value": "kube-system"
                   },
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "namespace",
                   "name": "namespace",
                   "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "workload_type",
                   "name": "type",
                   "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\"}, workload_type)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Networking / Namespace (Workload)",
          "uid": "bbb2a765a623ae38130206c7d94a160f"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: namespace-by-workload.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  persistentvolumesusage.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 18,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n  -\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n)\n",
                      "legendFormat": "Used Space"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum without(instance, node) (topk(1, (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n",
                      "legendFormat": "Free Space"
                   }
                ],
                "title": "Volume Space Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "max": 100,
                      "min": 0,
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": 0
                            },
                            {
                               "color": "orange",
                               "value": 80
                            },
                            {
                               "color": "red",
                               "value": 90
                            }
                         ]
                      },
                      "unit": "percent"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 18,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "max without(instance,node) (\n(\n  topk(1, kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n  -\n  topk(1, kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n)\n/\ntopk(1, kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n* 100)\n",
                      "instant": true
                   }
                ],
                "title": "Volume Space Usage",
                "type": "gauge"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 18,
                   "y": 7
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))",
                      "legendFormat": "Used inodes"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "(\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n  -\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n)\n",
                      "legendFormat": "Free inodes"
                   }
                ],
                "title": "Volume inodes Usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "max": 100,
                      "min": 0,
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": 0
                            },
                            {
                               "color": "orange",
                               "value": 80
                            },
                            {
                               "color": "red",
                               "value": 90
                            }
                         ]
                      },
                      "unit": "percent"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 6,
                   "x": 18,
                   "y": 7
                },
                "id": 4,
                "interval": "1m",
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "max without(instance,node) (\ntopk(1, kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n/\ntopk(1, kubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n* 100)\n",
                      "instant": true
                   }
                ],
                "title": "Volume inodes Usage",
                "type": "gauge"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(kubelet_volume_stats_capacity_bytes{job=\"integrations/kubernetes/kubelet\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "Namespace",
                   "name": "namespace",
                   "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\"}, namespace)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "PersistentVolumeClaim",
                   "name": "volume",
                   "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"integrations/kubernetes/kubelet\", namespace=\"$namespace\"}, persistentvolumeclaim)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Persistent Volumes",
          "uid": "919b92a8e8041bd567af9edab12c840c"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: persistentvolumesusage.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  pod-total.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "displayName": "$pod",
                      "max": 10000000000,
                      "min": 0,
                      "thresholds": {
                         "steps": [
                            {
                               "color": "dark-green",
                               "index": 0,
                               "value": null
                            },
                            {
                               "color": "dark-yellow",
                               "index": 1,
                               "value": 5000000000
                            },
                            {
                               "color": "dark-red",
                               "index": 2,
                               "value": 7000000000
                            }
                         ]
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Current Rate of Bytes Received",
                "type": "gauge"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "displayName": "$pod",
                      "max": 10000000000,
                      "min": 0,
                      "thresholds": {
                         "steps": [
                            {
                               "color": "dark-green",
                               "index": 0,
                               "value": null
                            },
                            {
                               "color": "dark-yellow",
                               "index": 1,
                               "value": 5000000000
                            },
                            {
                               "color": "dark-red",
                               "index": 2,
                               "value": 7000000000
                            }
                         ]
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Current Rate of Bytes Transmitted",
                "type": "gauge"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 9
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 9
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 18
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 18
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 27
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "showPoints": "never"
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 27
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"integrations/kubernetes/cadvisor\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": false,
                      "text": "kube-system",
                      "value": "kube-system"
                   },
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "name": "namespace",
                   "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "current": {
                      "selected": false,
                      "text": "kube-system",
                      "value": "kube-system"
                   },
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "pod",
                   "name": "pod",
                   "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}, pod)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Networking / Pod",
          "uid": "7a18067ce943a40ae25454675c19ff5c"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: pod-total.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  proxy.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(up{cluster=\"$cluster\", job=\"kube-proxy\"})",
                      "instant": true
                   }
                ],
                "title": "Up",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 10,
                   "x": 4,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(kubeproxy_sync_proxy_rules_duration_seconds_count{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval]))",
                      "legendFormat": "rate"
                   }
                ],
                "title": "Rules Sync Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 10,
                   "x": 14,
                   "y": 0
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99,rate(kubeproxy_sync_proxy_rules_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval]))",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Rules Sync Latency 99th Quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 0,
                   "y": 7
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(kubeproxy_network_programming_duration_seconds_count{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval]))",
                      "legendFormat": "rate"
                   }
                ],
                "title": "Network Programming Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 12,
                   "x": 12,
                   "y": 7
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(kubeproxy_network_programming_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Network Programming Latency 99th Quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 14
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kube-proxy\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                      "legendFormat": "2xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kube-proxy\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                      "legendFormat": "3xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kube-proxy\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                      "legendFormat": "4xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kube-proxy\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                      "legendFormat": "5xx"
                   }
                ],
                "title": "Kube API Request Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 16,
                   "x": 8,
                   "y": 14
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\",verb=\"POST\"}[$__rate_interval])) by (verb, le))",
                      "legendFormat": "{{verb}}"
                   }
                ],
                "title": "Post Request Latency 99th Quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 21
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\", verb=\"GET\"}[$__rate_interval])) by (verb, le))",
                      "legendFormat": "{{verb}}"
                   }
                ],
                "title": "Get Request Latency 99th Quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 28
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "process_resident_memory_bytes{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Memory",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 8,
                   "y": 28
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\"}[$__rate_interval])",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "CPU usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 16,
                   "y": 28
                },
                "id": 11,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "go_goroutines{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Goroutines",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"kube-proxy\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "allValue": ".+",
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "instance",
                   "name": "instance",
                   "query": "label_values(up{job=\"kube-proxy\", cluster=\"$cluster\", job=\"kube-proxy\"}, instance)",
                   "refresh": 2,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Proxy",
          "uid": "632e265de029684c40b21cb76bca4f94"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: proxy.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  scheduler.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "unit": "none"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 4,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "colorMode": "none"
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(up{cluster=\"$cluster\", job=\"kube-scheduler\"})",
                      "instant": true
                   }
                ],
                "title": "Up",
                "type": "stat"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 10,
                   "x": 4,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(scheduler_e2e_scheduling_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                      "legendFormat": "{{cluster}} {{instance}} e2e"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(scheduler_binding_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                      "legendFormat": "{{cluster}} {{instance}} binding"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(scheduler_scheduling_algorithm_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                      "legendFormat": "{{cluster}} {{instance}} scheduling algorithm"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(scheduler_volume_scheduling_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                      "legendFormat": "{{cluster}} {{instance}} volume"
                   }
                ],
                "title": "Scheduling Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 10,
                   "x": 14,
                   "y": 0
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                      "legendFormat": "{{cluster}} {{instance}} e2e"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                      "legendFormat": "{{cluster}} {{instance}} binding"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                      "legendFormat": "{{cluster}} {{instance}} scheduling algorithm"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(scheduler_volume_scheduling_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                      "legendFormat": "{{cluster}} {{instance}} volume"
                   }
                ],
                "title": "Scheduling latency 99th Quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 7
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                      "legendFormat": "2xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                      "legendFormat": "3xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                      "legendFormat": "4xx"
                   },
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                      "legendFormat": "5xx"
                   }
                ],
                "title": "Kube API Request Rate",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "ops"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 16,
                   "x": 8,
                   "y": 7
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\", verb=\"POST\"}[$__rate_interval])) by (verb, le))",
                      "legendFormat": "{{verb}}"
                   }
                ],
                "title": "Post Request Latency 99th Quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "s"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 24,
                   "x": 0,
                   "y": 14
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\", verb=\"GET\"}[$__rate_interval])) by (verb, le))",
                      "legendFormat": "{{verb}}"
                   }
                ],
                "title": "Get Request Latency 99th Quantile",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "bytes"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 0,
                   "y": 21
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "process_resident_memory_bytes{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Memory",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 8,
                   "y": 21
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "CPU usage",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "short"
                   }
                },
                "gridPos": {
                   "h": 7,
                   "w": 8,
                   "x": 16,
                   "y": 21
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "go_goroutines{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}",
                      "legendFormat": "{{instance}}"
                   }
                ],
                "title": "Goroutines",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(up{job=\"kube-scheduler\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "allValue": ".+",
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "instance",
                   "name": "instance",
                   "query": "label_values(up{job=\"kube-scheduler\", cluster=\"$cluster\"}, instance)",
                   "refresh": 2,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Scheduler",
          "uid": "2e6b6a3b4bddf1427b3a55aa1311c656"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: scheduler.json
  namespace: monitoring-system
---
apiVersion: v1
data:
  workload-total.json: |-
    {
          "editable": false,
          "links": [
             {
                "asDropdown": true,
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "kubernetes-mixin",
                   "infrastucture"
                ],
                "targetBlank": false,
                "title": "Kubernetes",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "fixedColor": "green",
                         "mode": "fixed"
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "interval": "1m",
                "options": {
                   "displayMode": "basic",
                   "showUnfilled": false
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Current Rate of Bytes Received",
                "type": "bargauge"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "fixedColor": "green",
                         "mode": "fixed"
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 0
                },
                "id": 2,
                "interval": "1m",
                "options": {
                   "displayMode": "basic",
                   "showUnfilled": false
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Current Rate of Bytes Transmitted",
                "type": "bargauge"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "fixedColor": "green",
                         "mode": "fixed"
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 9
                },
                "id": 3,
                "interval": "1m",
                "options": {
                   "displayMode": "basic",
                   "showUnfilled": false
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(avg(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Rate of Bytes Received",
                "type": "bargauge"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "fixedColor": "green",
                         "mode": "fixed"
                      },
                      "unit": "Bps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 9
                },
                "id": 4,
                "interval": "1m",
                "options": {
                   "displayMode": "basic",
                   "showUnfilled": false
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(avg(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Average Rate of Bytes Transmitted",
                "type": "bargauge"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 18
                },
                "id": 5,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Receive Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "binBps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 18
                },
                "id": 6,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Transmit Bandwidth",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 27
                },
                "id": 7,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_receive_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 27
                },
                "id": 8,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_transmit_packets_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 0,
                   "y": 36
                },
                "id": 9,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_receive_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Received Packets Dropped",
                "type": "timeseries"
             },
             {
                "datasource": {
                   "type": "datasource",
                   "uid": "-- Mixed --"
                },
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10,
                         "showPoints": "never",
                         "spanNulls": true
                      },
                      "unit": "pps"
                   }
                },
                "gridPos": {
                   "h": 9,
                   "w": 12,
                   "x": 12,
                   "y": 36
                },
                "id": 10,
                "interval": "1m",
                "options": {
                   "legend": {
                      "asTable": true,
                      "calcs": [
                         "lastNotNull"
                      ],
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single"
                   }
                },
                "pluginVersion": "v11.4.0",
                "targets": [
                   {
                      "datasource": {
                         "type": "prometheus",
                         "uid": "${datasource}"
                      },
                      "expr": "sort_desc(sum(rate(container_network_transmit_packets_dropped_total{job=\"integrations/kubernetes/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                      "legendFormat": "__auto"
                   }
                ],
                "title": "Rate of Transmitted Packets Dropped",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
             "kubernetes-mixin",
             "infrastucture"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "selected": true,
                      "text": "Metrics",
                      "value": "Metrics"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "query": "prometheus",
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "cluster",
                   "name": "cluster",
                   "query": "label_values(kube_pod_info{job=\"integrations/kubernetes/kube-state-metrics\"}, cluster)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": false,
                      "text": "kube-system",
                      "value": "kube-system"
                   },
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "name": "namespace",
                   "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "label": "workload",
                   "name": "workload",
                   "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\"}, workload)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                },
                {
                   "allValue": ".+",
                   "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                   },
                   "hide": 0,
                   "includeAll": true,
                   "label": "workload_type",
                   "name": "type",
                   "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\"}, workload_type)",
                   "refresh": 2,
                   "sort": 1,
                   "type": "query"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timezone": "browser",
          "title": "Kubernetes / Networking / Workload",
          "uid": "728bf77cc1166d2f3133bf25846876cc"
       }
kind: ConfigMap
metadata:
  annotations:
    grafana_dashboard_folder: /dashboards/kubernetes-mixin
  labels:
    grafana_dashboard: "1"
  name: workload-total.json
  namespace: monitoring-system
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kubernetes-mixin-alerts
  namespace: monitoring-system
spec:
  groups:
  - name: kubernetes-apps
    rules:
    - alert: KubePodCrashLooping
      annotations:
        description: 'Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container
          }}) is in waiting state (reason: "CrashLoopBackOff") on cluster {{ $labels.cluster
          }}.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodcrashlooping
        summary: Pod is crash looping.
      expr: |
        max_over_time(kube_pod_container_status_waiting_reason{reason="CrashLoopBackOff", job="integrations/kubernetes/kube-state-metrics"}[5m]) >= 1
      for: 15m
      labels:
        severity: warning
    - alert: KubePodNotReady
      annotations:
        description: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready
          state for longer than 15 minutes on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodnotready
        summary: Pod has been in a non-ready state for more than 15 minutes.
      expr: |
        sum by (namespace, pod, cluster) (
          max by(namespace, pod, cluster) (
            kube_pod_status_phase{job="integrations/kubernetes/kube-state-metrics", phase=~"Pending|Unknown|Failed"}
          ) * on(namespace, pod, cluster) group_left(owner_kind) topk by(namespace, pod, cluster) (
            1, max by(namespace, pod, owner_kind, cluster) (kube_pod_owner{owner_kind!="Job"})
          )
        ) > 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeDeploymentGenerationMismatch
      annotations:
        description: Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment
          }} does not match, this indicates that the Deployment has failed but has
          not been rolled back on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentgenerationmismatch
        summary: Deployment generation mismatch due to possible roll-back
      expr: |
        kube_deployment_status_observed_generation{job="integrations/kubernetes/kube-state-metrics"}
          !=
        kube_deployment_metadata_generation{job="integrations/kubernetes/kube-state-metrics"}
      for: 15m
      labels:
        severity: warning
    - alert: KubeDeploymentReplicasMismatch
      annotations:
        description: Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has
          not matched the expected number of replicas for longer than 15 minutes on
          cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentreplicasmismatch
        summary: Deployment has not matched the expected number of replicas.
      expr: |
        (
          kube_deployment_spec_replicas{job="integrations/kubernetes/kube-state-metrics"}
            >
          kube_deployment_status_replicas_available{job="integrations/kubernetes/kube-state-metrics"}
        ) and (
          changes(kube_deployment_status_replicas_updated{job="integrations/kubernetes/kube-state-metrics"}[10m])
            ==
          0
        )
      for: 15m
      labels:
        severity: warning
    - alert: KubeDeploymentRolloutStuck
      annotations:
        description: Rollout of deployment {{ $labels.namespace }}/{{ $labels.deployment
          }} is not progressing for longer than 15 minutes on cluster {{ $labels.cluster
          }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentrolloutstuck
        summary: Deployment rollout is not progressing.
      expr: |
        kube_deployment_status_condition{condition="Progressing", status="false",job="integrations/kubernetes/kube-state-metrics"}
        != 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeStatefulSetReplicasMismatch
      annotations:
        description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }}
          has not matched the expected number of replicas for longer than 15 minutes
          on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetreplicasmismatch
        summary: StatefulSet has not matched the expected number of replicas.
      expr: |
        (
          kube_statefulset_status_replicas_ready{job="integrations/kubernetes/kube-state-metrics"}
            !=
          kube_statefulset_replicas{job="integrations/kubernetes/kube-state-metrics"}
        ) and (
          changes(kube_statefulset_status_replicas_updated{job="integrations/kubernetes/kube-state-metrics"}[10m])
            ==
          0
        )
      for: 15m
      labels:
        severity: warning
    - alert: KubeStatefulSetGenerationMismatch
      annotations:
        description: StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset
          }} does not match, this indicates that the StatefulSet has failed but has
          not been rolled back on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetgenerationmismatch
        summary: StatefulSet generation mismatch due to possible roll-back
      expr: |
        kube_statefulset_status_observed_generation{job="integrations/kubernetes/kube-state-metrics"}
          !=
        kube_statefulset_metadata_generation{job="integrations/kubernetes/kube-state-metrics"}
      for: 15m
      labels:
        severity: warning
    - alert: KubeStatefulSetUpdateNotRolledOut
      annotations:
        description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }}
          update has not been rolled out on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetupdatenotrolledout
        summary: StatefulSet update has not been rolled out.
      expr: |
        (
          max by(namespace, statefulset, job, cluster) (
            kube_statefulset_status_current_revision{job="integrations/kubernetes/kube-state-metrics"}
              unless
            kube_statefulset_status_update_revision{job="integrations/kubernetes/kube-state-metrics"}
          )
            * on(namespace, statefulset, job, cluster)
          (
            kube_statefulset_replicas{job="integrations/kubernetes/kube-state-metrics"}
              !=
            kube_statefulset_status_replicas_updated{job="integrations/kubernetes/kube-state-metrics"}
          )
        )  and on(namespace, statefulset, job, cluster) (
          changes(kube_statefulset_status_replicas_updated{job="integrations/kubernetes/kube-state-metrics"}[5m])
            ==
          0
        )
      for: 15m
      labels:
        severity: warning
    - alert: KubeDaemonSetRolloutStuck
      annotations:
        description: DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has
          not finished or progressed for at least 15m on cluster {{ $labels.cluster
          }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetrolloutstuck
        summary: DaemonSet rollout is stuck.
      expr: |
        (
          (
            kube_daemonset_status_current_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
              !=
            kube_daemonset_status_desired_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
          ) or (
            kube_daemonset_status_number_misscheduled{job="integrations/kubernetes/kube-state-metrics"}
              !=
            0
          ) or (
            kube_daemonset_status_updated_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
              !=
            kube_daemonset_status_desired_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
          ) or (
            kube_daemonset_status_number_available{job="integrations/kubernetes/kube-state-metrics"}
              !=
            kube_daemonset_status_desired_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
          )
        ) and (
          changes(kube_daemonset_status_updated_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}[5m])
            ==
          0
        )
      for: 15m
      labels:
        severity: warning
    - alert: KubeContainerWaiting
      annotations:
        description: 'pod/{{ $labels.pod }} in namespace {{ $labels.namespace }} on
          container {{ $labels.container}} has been in waiting state for longer than
          1 hour. (reason: "{{ $labels.reason }}") on cluster {{ $labels.cluster }}.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontainerwaiting
        summary: Pod container waiting longer than 1 hour
      expr: |
        kube_pod_container_status_waiting_reason{reason!="CrashLoopBackOff", job="integrations/kubernetes/kube-state-metrics"} > 0
      for: 1h
      labels:
        severity: warning
    - alert: KubeDaemonSetNotScheduled
      annotations:
        description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset
          }} are not scheduled on cluster {{ $labels.cluster }}.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetnotscheduled
        summary: DaemonSet pods are not scheduled.
      expr: |
        kube_daemonset_status_desired_number_scheduled{job="integrations/kubernetes/kube-state-metrics"}
          -
        kube_daemonset_status_current_number_scheduled{job="integrations/kubernetes/kube-state-metrics"} > 0
      for: 10m
      labels:
        severity: warning
    - alert: KubeDaemonSetMisScheduled
      annotations:
        description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset
          }} are running where they are not supposed to run on cluster {{ $labels.cluster
          }}.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetmisscheduled
        summary: DaemonSet pods are misscheduled.
      expr: |
        kube_daemonset_status_number_misscheduled{job="integrations/kubernetes/kube-state-metrics"} > 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeJobNotCompleted
      annotations:
        description: Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking
          more than {{ "43200" | humanizeDuration }} to complete on cluster {{ $labels.cluster
          }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobnotcompleted
        summary: Job did not complete in time
      expr: |
        time() - max by(namespace, job_name, cluster) (kube_job_status_start_time{job="integrations/kubernetes/kube-state-metrics"}
          and
        kube_job_status_active{job="integrations/kubernetes/kube-state-metrics"} > 0) > 43200
      labels:
        severity: warning
    - alert: KubeJobFailed
      annotations:
        description: Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to
          complete. Removing failed job after investigation should clear this alert
          on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobfailed
        summary: Job failed to complete.
      expr: |
        kube_job_failed{job="integrations/kubernetes/kube-state-metrics"}  > 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeHpaReplicasMismatch
      annotations:
        description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }}
          has not matched the desired number of replicas for longer than 15 minutes
          on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpareplicasmismatch
        summary: HPA has not matched desired number of replicas.
      expr: |
        (kube_horizontalpodautoscaler_status_desired_replicas{job="integrations/kubernetes/kube-state-metrics"}
          !=
        kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"})
          and
        (kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"}
          >
        kube_horizontalpodautoscaler_spec_min_replicas{job="integrations/kubernetes/kube-state-metrics"})
          and
        (kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"}
          <
        kube_horizontalpodautoscaler_spec_max_replicas{job="integrations/kubernetes/kube-state-metrics"})
          and
        changes(kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"}[15m]) == 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeHpaMaxedOut
      annotations:
        description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }}
          has been running at max replicas for longer than 15 minutes on cluster {{
          $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpamaxedout
        summary: HPA is running at max replicas
      expr: |
        kube_horizontalpodautoscaler_status_current_replicas{job="integrations/kubernetes/kube-state-metrics"}
          ==
        kube_horizontalpodautoscaler_spec_max_replicas{job="integrations/kubernetes/kube-state-metrics"}
      for: 15m
      labels:
        severity: warning
    - alert: KubePdbNotEnoughHealthyPods
      annotations:
        description: PDB {{ $labels.cluster }}/{{ $labels.namespace }}/{{ $labels.poddisruptionbudget
          }} expects {{ $value }} more healthy pods. The desired number of healthy
          pods has not been met for at least 15m.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepdbnotenoughhealthypods
        summary: PDB does not have enough healthy pods.
      expr: |
        (
          kube_poddisruptionbudget_status_desired_healthy{job="integrations/kubernetes/kube-state-metrics"}
          -
          kube_poddisruptionbudget_status_current_healthy{job="integrations/kubernetes/kube-state-metrics"}
        )
        > 0
      for: 15m
      labels:
        severity: warning
  - name: kubernetes-resources
    rules:
    - alert: KubeCPUOvercommit
      annotations:
        description: Cluster {{ $labels.cluster }} has overcommitted CPU resource
          requests for Pods by {{ printf "%.2f" $value }} CPU shares and cannot tolerate
          node failure.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit
        summary: Cluster has overcommitted CPU resource requests.
      expr: |
        # Non-HA clusters.
        (
          (
            sum by(cluster) (namespace_cpu:kube_pod_container_resource_requests:sum{})
            -
            sum by(cluster) (kube_node_status_allocatable{job="integrations/kubernetes/kube-state-metrics",resource="cpu"}) > 0
          )
          and
          count by (cluster) (max by (cluster, node) (kube_node_role{job="integrations/kubernetes/kube-state-metrics", role="control-plane"})) < 3
        )
        or
        # HA clusters.
        (
          sum by(cluster) (namespace_cpu:kube_pod_container_resource_requests:sum{})
          -
          (
            # Skip clusters with only one allocatable node.
            (
              sum by (cluster) (kube_node_status_allocatable{job="integrations/kubernetes/kube-state-metrics",resource="cpu"})
              -
              max by (cluster) (kube_node_status_allocatable{job="integrations/kubernetes/kube-state-metrics",resource="cpu"})
            ) > 0
          ) > 0
        )
      for: 10m
      labels:
        severity: warning
    - alert: KubeMemoryOvercommit
      annotations:
        description: Cluster {{ $labels.cluster }} has overcommitted memory resource
          requests for Pods by {{ $value | humanize }} bytes and cannot tolerate node
          failure.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryovercommit
        summary: Cluster has overcommitted memory resource requests.
      expr: |
        # Non-HA clusters.
        (
          (
            sum by(cluster) (namespace_memory:kube_pod_container_resource_requests:sum{})
            -
            sum by(cluster) (kube_node_status_allocatable{job="integrations/kubernetes/kube-state-metrics",resource="memory"}) > 0
          )
          and
          count by (cluster) (max by (cluster, node) (kube_node_role{job="integrations/kubernetes/kube-state-metrics", role="control-plane"})) < 3
        )
        or
        # HA clusters.
        (
          sum by(cluster) (namespace_memory:kube_pod_container_resource_requests:sum{})
          -
          (
            # Skip clusters with only one allocatable node.
            (
              sum by (cluster) (kube_node_status_allocatable{job="integrations/kubernetes/kube-state-metrics",resource="memory"})
              -
              max by (cluster) (kube_node_status_allocatable{job="integrations/kubernetes/kube-state-metrics",resource="memory"})
            ) > 0
          ) > 0
        )
      for: 10m
      labels:
        severity: warning
    - alert: KubeCPUQuotaOvercommit
      annotations:
        description: Cluster {{ $labels.cluster }} has overcommitted CPU resource
          requests for Namespaces.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuquotaovercommit
        summary: Cluster has overcommitted CPU resource requests.
      expr: |
        sum by(cluster) (
          min without(resource) (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard", resource=~"(cpu|requests.cpu)"})
        )
        /
        sum by(cluster) (
          kube_node_status_allocatable{resource="cpu", job="integrations/kubernetes/kube-state-metrics"}
        ) > 1.5
      for: 5m
      labels:
        severity: warning
    - alert: KubeMemoryQuotaOvercommit
      annotations:
        description: Cluster {{ $labels.cluster }} has overcommitted memory resource
          requests for Namespaces.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryquotaovercommit
        summary: Cluster has overcommitted memory resource requests.
      expr: |
        sum by(cluster) (
          min without(resource) (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard", resource=~"(memory|requests.memory)"})
        )
        /
        sum by(cluster) (
          kube_node_status_allocatable{resource="memory", job="integrations/kubernetes/kube-state-metrics"}
        ) > 1.5
      for: 5m
      labels:
        severity: warning
    - alert: KubeQuotaAlmostFull
      annotations:
        description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
          }} of its {{ $labels.resource }} quota on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaalmostfull
        summary: Namespace quota is going to be full.
      expr: |
        kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard"} > 0)
          > 0.9 < 1
      for: 15m
      labels:
        severity: info
    - alert: KubeQuotaFullyUsed
      annotations:
        description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
          }} of its {{ $labels.resource }} quota on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotafullyused
        summary: Namespace quota is fully used.
      expr: |
        kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard"} > 0)
          == 1
      for: 15m
      labels:
        severity: info
    - alert: KubeQuotaExceeded
      annotations:
        description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
          }} of its {{ $labels.resource }} quota on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded
        summary: Namespace quota has exceeded the limits.
      expr: |
        kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="integrations/kubernetes/kube-state-metrics", type="hard"} > 0)
          > 1
      for: 15m
      labels:
        severity: warning
    - alert: CPUThrottlingHigh
      annotations:
        description: '{{ $value | humanizePercentage }} throttling of CPU in namespace
          {{ $labels.namespace }} for container {{ $labels.container }} in pod {{
          $labels.pod }} on cluster {{ $labels.cluster }}.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh
        summary: Processes experience elevated CPU throttling.
      expr: |
        sum(increase(container_cpu_cfs_throttled_periods_total{container!="", job="integrations/kubernetes/cadvisor", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)
          / on (cluster, namespace, pod, container, instance) group_left
        sum(increase(container_cpu_cfs_periods_total{job="integrations/kubernetes/cadvisor", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)
          > ( 25 / 100 )
      for: 15m
      labels:
        severity: info
  - name: kubernetes-storage
    rules:
    - alert: KubePersistentVolumeFillingUp
      annotations:
        description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim
          }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster
          {{ . }} {{- end }} is only {{ $value | humanizePercentage }} free.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup
        summary: PersistentVolume is filling up.
      expr: |
        (
          kubelet_volume_stats_available_bytes{job="integrations/kubernetes/kubelet"}
            /
          kubelet_volume_stats_capacity_bytes{job="integrations/kubernetes/kubelet"}
        ) < 0.03
        and
        kubelet_volume_stats_used_bytes{job="integrations/kubernetes/kubelet"} > 0
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
      for: 1m
      labels:
        severity: critical
    - alert: KubePersistentVolumeFillingUp
      annotations:
        description: Based on recent sampling, the PersistentVolume claimed by {{
          $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} {{
          with $labels.cluster -}} on Cluster {{ . }} {{- end }} is expected to fill
          up within four days. Currently {{ $value | humanizePercentage }} is available.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup
        summary: PersistentVolume is filling up.
      expr: |
        (
          kubelet_volume_stats_available_bytes{job="integrations/kubernetes/kubelet"}
            /
          kubelet_volume_stats_capacity_bytes{job="integrations/kubernetes/kubelet"}
        ) < 0.15
        and
        kubelet_volume_stats_used_bytes{job="integrations/kubernetes/kubelet"} > 0
        and
        predict_linear(kubelet_volume_stats_available_bytes{job="integrations/kubernetes/kubelet"}[6h], 4 * 24 * 3600) < 0
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
      for: 1h
      labels:
        severity: warning
    - alert: KubePersistentVolumeInodesFillingUp
      annotations:
        description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim
          }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster
          {{ . }} {{- end }} only has {{ $value | humanizePercentage }} free inodes.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeinodesfillingup
        summary: PersistentVolumeInodes are filling up.
      expr: |
        (
          kubelet_volume_stats_inodes_free{job="integrations/kubernetes/kubelet"}
            /
          kubelet_volume_stats_inodes{job="integrations/kubernetes/kubelet"}
        ) < 0.03
        and
        kubelet_volume_stats_inodes_used{job="integrations/kubernetes/kubelet"} > 0
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
      for: 1m
      labels:
        severity: critical
    - alert: KubePersistentVolumeInodesFillingUp
      annotations:
        description: Based on recent sampling, the PersistentVolume claimed by {{
          $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} {{
          with $labels.cluster -}} on Cluster {{ . }} {{- end }} is expected to run
          out of inodes within four days. Currently {{ $value | humanizePercentage
          }} of its inodes are free.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeinodesfillingup
        summary: PersistentVolumeInodes are filling up.
      expr: |
        (
          kubelet_volume_stats_inodes_free{job="integrations/kubernetes/kubelet"}
            /
          kubelet_volume_stats_inodes{job="integrations/kubernetes/kubelet"}
        ) < 0.15
        and
        kubelet_volume_stats_inodes_used{job="integrations/kubernetes/kubelet"} > 0
        and
        predict_linear(kubelet_volume_stats_inodes_free{job="integrations/kubernetes/kubelet"}[6h], 4 * 24 * 3600) < 0
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
        unless on(cluster, namespace, persistentvolumeclaim)
        kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
      for: 1h
      labels:
        severity: warning
    - alert: KubePersistentVolumeErrors
      annotations:
        description: The persistent volume {{ $labels.persistentvolume }} {{ with
          $labels.cluster -}} on Cluster {{ . }} {{- end }} has status {{ $labels.phase
          }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeerrors
        summary: PersistentVolume is having issues with provisioning.
      expr: |
        kube_persistentvolume_status_phase{phase=~"Failed|Pending",job="integrations/kubernetes/kube-state-metrics"} > 0
      for: 5m
      labels:
        severity: critical
  - name: kubernetes-system
    rules:
    - alert: KubeVersionMismatch
      annotations:
        description: There are {{ $value }} different semantic versions of Kubernetes
          components running on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeversionmismatch
        summary: Different semantic versions of Kubernetes components running.
      expr: |
        count by (cluster) (count by (git_version, cluster) (label_replace(kubernetes_build_info{job!~"kube-dns|coredns"},"git_version","$1","git_version","(v[0-9]*.[0-9]*).*"))) > 1
      for: 15m
      labels:
        severity: warning
    - alert: KubeClientErrors
      annotations:
        description: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance
          }}' is experiencing {{ $value | humanizePercentage }} errors on cluster
          {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclienterrors
        summary: Kubernetes API server client is experiencing errors.
      expr: |
        (sum(rate(rest_client_requests_total{job="integrations/kubernetes/apiserver",code=~"5.."}[5m])) by (cluster, instance, job, namespace)
          /
        sum(rate(rest_client_requests_total{job="integrations/kubernetes/apiserver"}[5m])) by (cluster, instance, job, namespace))
        > 0.01
      for: 15m
      labels:
        severity: warning
  - name: kube-apiserver-slos
    rules:
    - alert: KubeAPIErrorBudgetBurn
      annotations:
        description: The API server is burning too much error budget on cluster {{
          $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn
        summary: The API server is burning too much error budget.
      expr: |
        sum by(cluster) (apiserver_request:burnrate1h) > (14.40 * 0.01000)
        and on(cluster)
        sum by(cluster) (apiserver_request:burnrate5m) > (14.40 * 0.01000)
      for: 2m
      labels:
        long: 1h
        severity: critical
        short: 5m
    - alert: KubeAPIErrorBudgetBurn
      annotations:
        description: The API server is burning too much error budget on cluster {{
          $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn
        summary: The API server is burning too much error budget.
      expr: |
        sum by(cluster) (apiserver_request:burnrate6h) > (6.00 * 0.01000)
        and on(cluster)
        sum by(cluster) (apiserver_request:burnrate30m) > (6.00 * 0.01000)
      for: 15m
      labels:
        long: 6h
        severity: critical
        short: 30m
    - alert: KubeAPIErrorBudgetBurn
      annotations:
        description: The API server is burning too much error budget on cluster {{
          $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn
        summary: The API server is burning too much error budget.
      expr: |
        sum by(cluster) (apiserver_request:burnrate1d) > (3.00 * 0.01000)
        and on(cluster)
        sum by(cluster) (apiserver_request:burnrate2h) > (3.00 * 0.01000)
      for: 1h
      labels:
        long: 1d
        severity: warning
        short: 2h
    - alert: KubeAPIErrorBudgetBurn
      annotations:
        description: The API server is burning too much error budget on cluster {{
          $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn
        summary: The API server is burning too much error budget.
      expr: |
        sum by(cluster) (apiserver_request:burnrate3d) > (1.00 * 0.01000)
        and on(cluster)
        sum by(cluster) (apiserver_request:burnrate6h) > (1.00 * 0.01000)
      for: 3h
      labels:
        long: 3d
        severity: warning
        short: 6h
  - name: kubernetes-system-apiserver
    rules:
    - alert: KubeClientCertificateExpiration
      annotations:
        description: A client certificate used to authenticate to kubernetes apiserver
          is expiring in less than 7.0 days on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration
        summary: Client certificate is about to expire.
      expr: |
        histogram_quantile(0.01, sum without (namespace, service, endpoint) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="integrations/kubernetes/apiserver"}[5m]))) < 604800
        and
        on(job, cluster, instance) apiserver_client_certificate_expiration_seconds_count{job="integrations/kubernetes/apiserver"} > 0
      for: 5m
      labels:
        severity: warning
    - alert: KubeClientCertificateExpiration
      annotations:
        description: A client certificate used to authenticate to kubernetes apiserver
          is expiring in less than 24.0 hours on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration
        summary: Client certificate is about to expire.
      expr: |
        histogram_quantile(0.01, sum without (namespace, service, endpoint) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="integrations/kubernetes/apiserver"}[5m]))) < 86400
        and
        on(job, cluster, instance) apiserver_client_certificate_expiration_seconds_count{job="integrations/kubernetes/apiserver"} > 0
      for: 5m
      labels:
        severity: critical
    - alert: KubeAggregatedAPIErrors
      annotations:
        description: Kubernetes aggregated API {{ $labels.instance }}/{{ $labels.name
          }} has reported {{ $labels.reason }} errors on cluster {{ $labels.cluster
          }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeaggregatedapierrors
        summary: Kubernetes aggregated API has reported errors.
      expr: |
        sum by(cluster, instance, name, reason)(increase(aggregator_unavailable_apiservice_total{job="integrations/kubernetes/apiserver"}[1m])) > 0
      for: 10m
      labels:
        severity: warning
    - alert: KubeAggregatedAPIDown
      annotations:
        description: Kubernetes aggregated API {{ $labels.name }}/{{ $labels.namespace
          }} has been only {{ $value | humanize }}% available over the last 10m on
          cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeaggregatedapidown
        summary: Kubernetes aggregated API is down.
      expr: |
        (1 - max by(name, namespace, cluster)(avg_over_time(aggregator_unavailable_apiservice{job="integrations/kubernetes/apiserver"}[10m]))) * 100 < 85
      for: 5m
      labels:
        severity: warning
    - alert: KubeAPIDown
      annotations:
        description: KubeAPI has disappeared from Prometheus target discovery.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapidown
        summary: Target disappeared from Prometheus target discovery.
      expr: |
        absent(up{job="integrations/kubernetes/apiserver"} == 1)
      for: 15m
      labels:
        severity: critical
    - alert: KubeAPITerminatedRequests
      annotations:
        description: The kubernetes apiserver has terminated {{ $value | humanizePercentage
          }} of its incoming requests on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapiterminatedrequests
        summary: The kubernetes apiserver has terminated {{ $value | humanizePercentage
          }} of its incoming requests.
      expr: |
        sum by(cluster) (rate(apiserver_request_terminations_total{job="integrations/kubernetes/apiserver"}[10m])) / ( sum by(cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver"}[10m])) + sum by(cluster) (rate(apiserver_request_terminations_total{job="integrations/kubernetes/apiserver"}[10m])) ) > 0.20
      for: 5m
      labels:
        severity: warning
  - name: kubernetes-system-kubelet
    rules:
    - alert: KubeNodeNotReady
      annotations:
        description: '{{ $labels.node }} has been unready for more than 15 minutes
          on cluster {{ $labels.cluster }}.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodenotready
        summary: Node is not ready.
      expr: |
        kube_node_status_condition{job="integrations/kubernetes/kube-state-metrics",condition="Ready",status="true"} == 0
        and on (cluster, node)
        kube_node_spec_unschedulable{job="integrations/kubernetes/kube-state-metrics"} == 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeNodePressure
      annotations:
        description: '{{ $labels.node }} on cluster {{ $labels.cluster }} has active
          Condition {{ $labels.condition }}. This is caused by resource usage exceeding
          eviction thresholds.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodepressure
        summary: Node has as active Condition.
      expr: |
        kube_node_status_condition{job="integrations/kubernetes/kube-state-metrics",condition=~"(MemoryPressure|DiskPressure|PIDPressure)",status="true"} == 1
        and on (cluster, node)
        kube_node_spec_unschedulable{job="integrations/kubernetes/kube-state-metrics"} == 0
      for: 10m
      labels:
        severity: info
    - alert: KubeNodeUnreachable
      annotations:
        description: '{{ $labels.node }} is unreachable and some workloads may be
          rescheduled on cluster {{ $labels.cluster }}.'
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodeunreachable
        summary: Node is unreachable.
      expr: |
        (kube_node_spec_taint{job="integrations/kubernetes/kube-state-metrics",key="node.kubernetes.io/unreachable",effect="NoSchedule"} unless ignoring(key,value) kube_node_spec_taint{job="integrations/kubernetes/kube-state-metrics",key=~"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn"}) == 1
      for: 15m
      labels:
        severity: warning
    - alert: KubeletTooManyPods
      annotations:
        description: Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage
          }} of its Pod capacity on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubelettoomanypods
        summary: Kubelet is running at capacity.
      expr: |
        (
          max by (cluster, instance) (
            kubelet_running_pods{job="integrations/kubernetes/kubelet"} > 1
          )
          * on (cluster, instance) group_left(node)
          max by (cluster, instance, node) (
            kubelet_node_name{job="integrations/kubernetes/kubelet"}
          )
        )
        / on (cluster, node) group_left()
        max by (cluster, node) (
          kube_node_status_capacity{job="integrations/kubernetes/kube-state-metrics", resource="pods"} != 1
        ) > 0.95
      for: 15m
      labels:
        severity: info
    - alert: KubeNodeReadinessFlapping
      annotations:
        description: The readiness status of node {{ $labels.node }} has changed {{
          $value }} times in the last 15 minutes on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodereadinessflapping
        summary: Node readiness status is flapping.
      expr: |
        sum(changes(kube_node_status_condition{job="integrations/kubernetes/kube-state-metrics",status="true",condition="Ready"}[15m])) by (cluster, node) > 2
        and on (cluster, node)
        kube_node_spec_unschedulable{job="integrations/kubernetes/kube-state-metrics"} == 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeNodeEviction
      annotations:
        description: Node {{ $labels.node }} on {{ $labels.cluster }} is evicting
          Pods due to {{ $labels.eviction_signal }}.  Eviction occurs when eviction
          thresholds are crossed, typically caused by Pods exceeding RAM/ephemeral-storage
          limits.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodeeviction
        summary: Node is evicting pods.
      expr: |
        sum(rate(kubelet_evictions{job="integrations/kubernetes/kubelet"}[15m])) by(cluster, eviction_signal, instance)
        * on (cluster, instance) group_left(node)
        max by (cluster, instance, node) (
          kubelet_node_name{job="integrations/kubernetes/kubelet"}
        )
        > 0
      for: 0s
      labels:
        severity: info
    - alert: KubeletPlegDurationHigh
      annotations:
        description: The Kubelet Pod Lifecycle Event Generator has a 99th percentile
          duration of {{ $value }} seconds on node {{ $labels.node }} on cluster {{
          $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletplegdurationhigh
        summary: Kubelet Pod Lifecycle Event Generator is taking too long to relist.
      expr: |
        node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile="0.99"} >= 10
      for: 5m
      labels:
        severity: warning
    - alert: KubeletPodStartUpLatencyHigh
      annotations:
        description: Kubelet Pod startup 99th percentile latency is {{ $value }} seconds
          on node {{ $labels.node }} on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletpodstartuplatencyhigh
        summary: Kubelet Pod startup latency is too high.
      expr: |
        histogram_quantile(0.99,
          sum by (cluster, instance, le) (
            topk by (cluster, instance, le, operation_type) (1,
              rate(kubelet_pod_worker_duration_seconds_bucket{job="integrations/kubernetes/kubelet"}[5m])
            )
          )
        )
        * on(cluster, instance) group_left(node)
        topk by (cluster, instance, node) (1,
          kubelet_node_name{job="integrations/kubernetes/kubelet"}
        )
        > 60
      for: 15m
      labels:
        severity: warning
    - alert: KubeletClientCertificateExpiration
      annotations:
        description: Client certificate for Kubelet on node {{ $labels.node }} expires
          in {{ $value | humanizeDuration }} on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration
        summary: Kubelet client certificate is about to expire.
      expr: |
        kubelet_certificate_manager_client_ttl_seconds < 604800
      labels:
        severity: warning
    - alert: KubeletClientCertificateExpiration
      annotations:
        description: Client certificate for Kubelet on node {{ $labels.node }} expires
          in {{ $value | humanizeDuration }} on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration
        summary: Kubelet client certificate is about to expire.
      expr: |
        kubelet_certificate_manager_client_ttl_seconds < 86400
      labels:
        severity: critical
    - alert: KubeletServerCertificateExpiration
      annotations:
        description: Server certificate for Kubelet on node {{ $labels.node }} expires
          in {{ $value | humanizeDuration }} on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration
        summary: Kubelet server certificate is about to expire.
      expr: |
        kubelet_certificate_manager_server_ttl_seconds < 604800
      labels:
        severity: warning
    - alert: KubeletServerCertificateExpiration
      annotations:
        description: Server certificate for Kubelet on node {{ $labels.node }} expires
          in {{ $value | humanizeDuration }} on cluster {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration
        summary: Kubelet server certificate is about to expire.
      expr: |
        kubelet_certificate_manager_server_ttl_seconds < 86400
      labels:
        severity: critical
    - alert: KubeletClientCertificateRenewalErrors
      annotations:
        description: Kubelet on node {{ $labels.node }} has failed to renew its client
          certificate ({{ $value | humanize }} errors in the last 5 minutes) on cluster
          {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificaterenewalerrors
        summary: Kubelet has failed to renew its client certificate.
      expr: |
        increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeletServerCertificateRenewalErrors
      annotations:
        description: Kubelet on node {{ $labels.node }} has failed to renew its server
          certificate ({{ $value | humanize }} errors in the last 5 minutes) on cluster
          {{ $labels.cluster }}.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificaterenewalerrors
        summary: Kubelet has failed to renew its server certificate.
      expr: |
        increase(kubelet_server_expiration_renew_errors[5m]) > 0
      for: 15m
      labels:
        severity: warning
    - alert: KubeletDown
      annotations:
        description: Kubelet has disappeared from Prometheus target discovery.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletdown
        summary: Target disappeared from Prometheus target discovery.
      expr: |
        absent(up{job="integrations/kubernetes/kubelet"} == 1)
      for: 15m
      labels:
        severity: critical
  - name: kubernetes-system-scheduler
    rules:
    - alert: KubeSchedulerDown
      annotations:
        description: KubeScheduler has disappeared from Prometheus target discovery.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeschedulerdown
        summary: Target disappeared from Prometheus target discovery.
      expr: |
        absent(up{job="kube-scheduler"} == 1)
      for: 15m
      labels:
        severity: critical
  - name: kubernetes-system-controller-manager
    rules:
    - alert: KubeControllerManagerDown
      annotations:
        description: KubeControllerManager has disappeared from Prometheus target
          discovery.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontrollermanagerdown
        summary: Target disappeared from Prometheus target discovery.
      expr: |
        absent(up{job="kube-controller-manager"} == 1)
      for: 15m
      labels:
        severity: critical
  - name: kubernetes-system-kube-proxy
    rules:
    - alert: KubeProxyDown
      annotations:
        description: KubeProxy has disappeared from Prometheus target discovery.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeproxydown
        summary: Target disappeared from Prometheus target discovery.
      expr: |
        absent(up{job="kube-proxy"} == 1)
      for: 15m
      labels:
        severity: critical
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kubernetes-mixin-rules
  namespace: monitoring-system
spec:
  groups:
  - interval: 3m
    name: kube-apiserver-availability.rules
    rules:
    - expr: |
        avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 * 30
      record: code_verb:apiserver_request_total:increase30d
    - expr: |
        sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"LIST|GET"})
      labels:
        verb: read
      record: code:apiserver_request_total:increase30d
    - expr: |
        sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
      labels:
        verb: write
      record: code:apiserver_request_total:increase30d
    - expr: |
        sum by (cluster, verb, scope, le) (increase(apiserver_request_sli_duration_seconds_bucket[1h]))
      record: cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h
    - expr: |
        sum by (cluster, verb, scope, le) (avg_over_time(cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h[30d]) * 24 * 30)
      record: cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d
    - expr: |
        sum by (cluster, verb, scope) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h{le="+Inf"})
      record: cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase1h
    - expr: |
        sum by (cluster, verb, scope) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{le="+Inf"})
      record: cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d
    - expr: |
        1 - (
          (
            # write too slow
            sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
            -
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"POST|PUT|PATCH|DELETE",le=~"1(\\.0)?"} or vector(0))
          ) +
          (
            # read too slow
            sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"LIST|GET"})
            -
            (
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope=~"resource|",le=~"1(\\.0)?"} or vector(0))
              +
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="namespace",le=~"5(\\.0)?"} or vector(0))
              +
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="cluster",le=~"30(\\.0)?"} or vector(0))
            )
          ) +
          # errors
          sum by (cluster) (code:apiserver_request_total:increase30d{code=~"5.."} or vector(0))
        )
        /
        sum by (cluster) (code:apiserver_request_total:increase30d)
      labels:
        verb: all
      record: apiserver_request:availability30d
    - expr: |
        1 - (
          sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"LIST|GET"})
          -
          (
            # too slow
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope=~"resource|",le=~"1(\\.0)?"} or vector(0))
            +
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="namespace",le=~"5(\\.0)?"} or vector(0))
            +
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="cluster",le=~"30(\\.0)?"} or vector(0))
          )
          +
          # errors
          sum by (cluster) (code:apiserver_request_total:increase30d{verb="read",code=~"5.."} or vector(0))
        )
        /
        sum by (cluster) (code:apiserver_request_total:increase30d{verb="read"})
      labels:
        verb: read
      record: apiserver_request:availability30d
    - expr: |
        1 - (
          (
            # too slow
            sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
            -
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"POST|PUT|PATCH|DELETE",le=~"1(\\.0)?"} or vector(0))
          )
          +
          # errors
          sum by (cluster) (code:apiserver_request_total:increase30d{verb="write",code=~"5.."} or vector(0))
        )
        /
        sum by (cluster) (code:apiserver_request_total:increase30d{verb="write"})
      labels:
        verb: write
      record: apiserver_request:availability30d
    - expr: |
        sum by (cluster,code,resource) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[5m]))
      labels:
        verb: read
      record: code_resource:apiserver_request_total:rate5m
    - expr: |
        sum by (cluster,code,resource) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
      labels:
        verb: write
      record: code_resource:apiserver_request_total:rate5m
    - expr: |
        sum by (cluster, code, verb) (increase(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"2.."}[1h]))
      record: code_verb:apiserver_request_total:increase1h
    - expr: |
        sum by (cluster, code, verb) (increase(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"3.."}[1h]))
      record: code_verb:apiserver_request_total:increase1h
    - expr: |
        sum by (cluster, code, verb) (increase(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"4.."}[1h]))
      record: code_verb:apiserver_request_total:increase1h
    - expr: |
        sum by (cluster, code, verb) (increase(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
      record: code_verb:apiserver_request_total:increase1h
  - name: kube-apiserver-burnrate.rules
    rules:
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[1d]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[1d]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[1d]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[1d]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[1d]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[1d]))
      labels:
        verb: read
      record: apiserver_request:burnrate1d
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[1h]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[1h]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[1h]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[1h]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[1h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[1h]))
      labels:
        verb: read
      record: apiserver_request:burnrate1h
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[2h]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[2h]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[2h]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[2h]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[2h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[2h]))
      labels:
        verb: read
      record: apiserver_request:burnrate2h
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[30m]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[30m]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[30m]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[30m]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[30m]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[30m]))
      labels:
        verb: read
      record: apiserver_request:burnrate30m
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[3d]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[3d]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[3d]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[3d]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[3d]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[3d]))
      labels:
        verb: read
      record: apiserver_request:burnrate3d
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[5m]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[5m]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[5m]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[5m]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[5m]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[5m]))
      labels:
        verb: read
      record: apiserver_request:burnrate5m
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[6h]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[6h]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[6h]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[6h]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",code=~"5.."}[6h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"LIST|GET"}[6h]))
      labels:
        verb: read
      record: apiserver_request:burnrate6h
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[1d]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[1d]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1d]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1d]))
      labels:
        verb: write
      record: apiserver_request:burnrate1d
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[1h]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[1h]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1h]))
      labels:
        verb: write
      record: apiserver_request:burnrate1h
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[2h]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[2h]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[2h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[2h]))
      labels:
        verb: write
      record: apiserver_request:burnrate2h
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[30m]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[30m]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[30m]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[30m]))
      labels:
        verb: write
      record: apiserver_request:burnrate30m
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[3d]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[3d]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[3d]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[3d]))
      labels:
        verb: write
      record: apiserver_request:burnrate3d
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[5m]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[5m]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[5m]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
      labels:
        verb: write
      record: apiserver_request:burnrate5m
    - expr: |
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[6h]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[6h]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[6h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE"}[6h]))
      labels:
        verb: write
      record: apiserver_request:burnrate6h
  - name: kube-apiserver-histogram.rules
    rules:
    - expr: |
        histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[5m]))) > 0
      labels:
        quantile: "0.99"
        verb: read
      record: cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_sli_duration_seconds_bucket{job="integrations/kubernetes/apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[5m]))) > 0
      labels:
        quantile: "0.99"
        verb: write
      record: cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile
  - name: k8s.rules.container_cpu_usage_seconds_total
    rules:
    - expr: |
        sum by (cluster, namespace, pod, container) (
          rate(container_cpu_usage_seconds_total{job="integrations/kubernetes/cadvisor", image!=""}[5m])
        ) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (
          1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m
    - expr: |
        sum by (cluster, namespace, pod, container) (
          irate(container_cpu_usage_seconds_total{job="integrations/kubernetes/cadvisor", image!=""}[5m])
        ) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (
          1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate
  - name: k8s.rules.container_memory_working_set_bytes
    rules:
    - expr: |
        container_memory_working_set_bytes{job="integrations/kubernetes/cadvisor", image!=""}
        * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
          max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_memory_working_set_bytes
  - name: k8s.rules.container_memory_rss
    rules:
    - expr: |
        container_memory_rss{job="integrations/kubernetes/cadvisor", image!=""}
        * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
          max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_memory_rss
  - name: k8s.rules.container_memory_cache
    rules:
    - expr: |
        container_memory_cache{job="integrations/kubernetes/cadvisor", image!=""}
        * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
          max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_memory_cache
  - name: k8s.rules.container_memory_swap
    rules:
    - expr: |
        container_memory_swap{job="integrations/kubernetes/cadvisor", image!=""}
        * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
          max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_memory_swap
  - name: k8s.rules.container_memory_requests
    rules:
    - expr: |
        kube_pod_container_resource_requests{resource="memory",job="integrations/kubernetes/kube-state-metrics"}  * on (namespace, pod, cluster)
        group_left() max by (namespace, pod, cluster) (
          (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
        )
      record: cluster:namespace:pod_memory:active:kube_pod_container_resource_requests
    - expr: |
        sum by (namespace, cluster) (
            sum by (namespace, pod, cluster) (
                max by (namespace, pod, container, cluster) (
                  kube_pod_container_resource_requests{resource="memory",job="integrations/kubernetes/kube-state-metrics"}
                ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                  kube_pod_status_phase{phase=~"Pending|Running"} == 1
                )
            )
        )
      record: namespace_memory:kube_pod_container_resource_requests:sum
  - name: k8s.rules.container_cpu_requests
    rules:
    - expr: |
        kube_pod_container_resource_requests{resource="cpu",job="integrations/kubernetes/kube-state-metrics"}  * on (namespace, pod, cluster)
        group_left() max by (namespace, pod, cluster) (
          (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
        )
      record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests
    - expr: |
        sum by (namespace, cluster) (
            sum by (namespace, pod, cluster) (
                max by (namespace, pod, container, cluster) (
                  kube_pod_container_resource_requests{resource="cpu",job="integrations/kubernetes/kube-state-metrics"}
                ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                  kube_pod_status_phase{phase=~"Pending|Running"} == 1
                )
            )
        )
      record: namespace_cpu:kube_pod_container_resource_requests:sum
  - name: k8s.rules.container_memory_limits
    rules:
    - expr: |
        kube_pod_container_resource_limits{resource="memory",job="integrations/kubernetes/kube-state-metrics"}  * on (namespace, pod, cluster)
        group_left() max by (namespace, pod, cluster) (
          (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
        )
      record: cluster:namespace:pod_memory:active:kube_pod_container_resource_limits
    - expr: |
        sum by (namespace, cluster) (
            sum by (namespace, pod, cluster) (
                max by (namespace, pod, container, cluster) (
                  kube_pod_container_resource_limits{resource="memory",job="integrations/kubernetes/kube-state-metrics"}
                ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                  kube_pod_status_phase{phase=~"Pending|Running"} == 1
                )
            )
        )
      record: namespace_memory:kube_pod_container_resource_limits:sum
  - name: k8s.rules.container_cpu_limits
    rules:
    - expr: |
        kube_pod_container_resource_limits{resource="cpu",job="integrations/kubernetes/kube-state-metrics"}  * on (namespace, pod, cluster)
        group_left() max by (namespace, pod, cluster) (
          (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
        )
      record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits
    - expr: |
        sum by (namespace, cluster) (
            sum by (namespace, pod, cluster) (
                max by (namespace, pod, container, cluster) (
                  kube_pod_container_resource_limits{resource="cpu",job="integrations/kubernetes/kube-state-metrics"}
                ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                  kube_pod_status_phase{phase=~"Pending|Running"} == 1
                )
            )
        )
      record: namespace_cpu:kube_pod_container_resource_limits:sum
  - name: k8s.rules.pod_owner
    rules:
    - expr: |
        max by (cluster, namespace, workload, pod) (
          label_replace(
            label_replace(
              kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="ReplicaSet"},
              "replicaset", "$1", "owner_name", "(.*)"
            ) * on (cluster, replicaset, namespace) group_left(owner_name) topk by(cluster, replicaset, namespace) (
              1, max by (cluster, replicaset, namespace, owner_name) (
                kube_replicaset_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind=""}
              )
            ),
            "workload", "$1", "replicaset", "(.*)"
          )
        )
      labels:
        workload_type: replicaset
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |
        max by (cluster, namespace, workload, pod) (
          label_replace(
            label_replace(
              kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="ReplicaSet"},
              "replicaset", "$1", "owner_name", "(.*)"
            ) * on(replicaset, namespace, cluster) group_left(owner_name) topk by(cluster, replicaset, namespace) (
              1, max by (cluster, replicaset, namespace, owner_name) (
                kube_replicaset_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="Deployment"}
              )
            ),
            "workload", "$1", "owner_name", "(.*)"
          )
        )
      labels:
        workload_type: deployment
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |
        max by (cluster, namespace, workload, pod) (
          label_replace(
            kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="DaemonSet"},
            "workload", "$1", "owner_name", "(.*)"
          )
        )
      labels:
        workload_type: daemonset
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |
        max by (cluster, namespace, workload, pod) (
          label_replace(
            kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="StatefulSet"},
          "workload", "$1", "owner_name", "(.*)")
        )
      labels:
        workload_type: statefulset
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |
        group by (cluster, namespace, workload, pod) (
          label_join(
            group by (cluster, namespace, job_name, pod, owner_name) (
              label_join(
                kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="Job"}
              , "job_name", "", "owner_name")
            )
            * on (cluster, namespace, job_name) group_left()
            group by (cluster, namespace, job_name) (
              kube_job_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind=~"Pod|"}
            )
          , "workload", "", "owner_name")
        )
      labels:
        workload_type: job
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |
        max by (cluster, namespace, workload, pod) (
          label_replace(
            kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="", owner_name=""},
          "workload", "$1", "pod", "(.+)")
        )
      labels:
        workload_type: barepod
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |
        max by (cluster, namespace, workload, pod) (
          label_replace(
            kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="Node"},
          "workload", "$1", "pod", "(.+)")
        )
      labels:
        workload_type: staticpod
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |
        group by (cluster, namespace, workload, workload_type, pod) (
          label_join(
            label_join(
              group by (cluster, namespace, job_name, pod) (
                label_join(
                  kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="Job"}
                , "job_name", "", "owner_name")
              )
              * on (cluster, namespace, job_name) group_left(owner_kind, owner_name)
              group by (cluster, namespace, job_name, owner_kind, owner_name) (
                kube_job_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind!="Pod", owner_kind!=""}
              )
            , "workload", "", "owner_name")
          , "workload_type", "", "owner_kind")

          OR

          label_replace(
            label_replace(
              label_replace(
                kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind="ReplicaSet"}
                , "replicaset", "$1", "owner_name", "(.+)"
              )
              * on(cluster, namespace, replicaset) group_left(owner_kind, owner_name)
              group by (cluster, namespace, replicaset, owner_kind, owner_name) (
                kube_replicaset_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind!="Deployment", owner_kind!=""}
              )
            , "workload", "$1", "owner_name", "(.+)")
            OR
            label_replace(
              group by (cluster, namespace, pod, owner_name, owner_kind) (
                kube_pod_owner{job="integrations/kubernetes/kube-state-metrics", owner_kind!="ReplicaSet", owner_kind!="DaemonSet", owner_kind!="StatefulSet", owner_kind!="Job", owner_kind!="Node", owner_kind!=""}
              )
              , "workload", "$1", "owner_name", "(.+)"
            )
          , "workload_type", "$1", "owner_kind", "(.+)")
        )
      record: namespace_workload_pod:kube_pod_owner:relabel
  - name: kube-scheduler.rules
    rules:
    - expr: |
        histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.99"
      record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.99"
      record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.99"
      record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.9"
      record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.9"
      record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.9"
      record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.5"
      record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.5"
      record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: "0.5"
      record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
  - name: node.rules
    rules:
    - expr: |
        topk by(cluster, namespace, pod) (1,
          max by (cluster, node, namespace, pod) (
            label_replace(kube_pod_info{job="integrations/kubernetes/kube-state-metrics",node!=""}, "pod", "$1", "pod", "(.*)")
        ))
      record: 'node_namespace_pod:kube_pod_info:'
    - expr: |
        count by (cluster, node) (
          node_cpu_seconds_total{mode="idle",job="integrations/kubernetes/node-exporter"}
          * on (cluster, namespace, pod) group_left(node)
          topk by(cluster, namespace, pod) (1, node_namespace_pod:kube_pod_info:)
        )
      record: node:node_num_cpu:sum
    - expr: |
        sum(
          node_memory_MemAvailable_bytes{job="integrations/kubernetes/node-exporter"} or
          (
            node_memory_Buffers_bytes{job="integrations/kubernetes/node-exporter"} +
            node_memory_Cached_bytes{job="integrations/kubernetes/node-exporter"} +
            node_memory_MemFree_bytes{job="integrations/kubernetes/node-exporter"} +
            node_memory_Slab_bytes{job="integrations/kubernetes/node-exporter"}
          )
        ) by (cluster)
      record: :node_memory_MemAvailable_bytes:sum
    - expr: |
        avg by (cluster, node) (
          sum without (mode) (
            rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal",job="integrations/kubernetes/node-exporter"}[5m])
          )
        )
      record: node:node_cpu_utilization:ratio_rate5m
    - expr: |
        avg by (cluster) (
          node:node_cpu_utilization:ratio_rate5m
        )
      record: cluster:node_cpu:ratio_rate5m
  - name: kubelet.rules
    rules:
    - expr: |
        histogram_quantile(
          0.99,
          sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="integrations/kubernetes/kubelet"}[5m])) by (cluster, instance, le)
          * on(cluster, instance) group_left (node)
          max by (cluster, instance, node) (kubelet_node_name{job="integrations/kubernetes/kubelet"})
        )
      labels:
        quantile: "0.99"
      record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(
          0.9,
          sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="integrations/kubernetes/kubelet"}[5m])) by (cluster, instance, le)
          * on(cluster, instance) group_left (node)
          max by (cluster, instance, node) (kubelet_node_name{job="integrations/kubernetes/kubelet"})
        )
      labels:
        quantile: "0.9"
      record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(
          0.5,
          sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="integrations/kubernetes/kubelet"}[5m])) by (cluster, instance, le)
          * on(cluster, instance) group_left (node)
          max by (cluster, instance, node) (kubelet_node_name{job="integrations/kubernetes/kubelet"})
        )
      labels:
        quantile: "0.5"
      record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
