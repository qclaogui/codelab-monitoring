# ============================================================================ #
#                  Microservices Mode - Traces
# ============================================================================ #

# Note: 
# include is available in Docker Compose version 2.20 and later, and Docker Desktop version 4.22 and later.
# docs: https://docs.docker.com/compose/multiple-compose-files/include/#include-and-overrides
include:
  - path: ../../common/compose-include/minio.yaml
  - path: ../../common/compose-include/memcached.yaml
  - path: ../../common/compose-include/loki.yaml
  - path: ../../common/compose-include/mimir.yaml
  - path: ../../common/compose-include/grafana.yaml
  - path: ../../common/compose-include/alloy.yaml

x-environment: &jaeger-environment
  JAEGER_AGENT_HOST: alloy
  JAEGER_AGENT_PORT: 6831
  JAEGER_SAMPLER_TYPE: const
  JAEGER_SAMPLER_PARAM: 1

# Configure a check that's run to determine whether or not containers for this service are "healthy".
# docs: https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck
x-healthcheck: &status-healthcheck
  interval: 5s
  timeout: 2s
  retries: 10

configs:
  alloy_config_file:
    file: ../../common/config/alloy/traces.alloy
  loki_config_file:
    file: ../../common/config/loki/monolithic-mode-logs.yaml
  mimir_config_file:
    file: ../../common/config/mimir/monolithic-mode-metrics.yaml
  tempo_config_file:
    file: ../../common/config/tempo/microservices-mode-traces.yaml

services:
  gateway:
    # https://github.com/qclaogui/codelab-monitoring/blob/main/alloy-modules/compose/README.md
    labels:
      metrics.grafana.com/scrape: false
    depends_on: {distributor: {condition: service_healthy}}
    image: ${NGINX_IMAGE:-docker.io/nginxinc/nginx-unprivileged:1.29-alpine}
    restart: always
    volumes:
      - ../../common/config/nginx/10-default-lgtmp.envsh:/docker-entrypoint.d/10-default-lgtmp.envsh
      - ../../common/config/nginx/nginx.conf:/etc/nginx/templates/nginx.conf.template
      - ../../common/config/tempo/gateway_tempo.conf:/etc/nginx/templates/gateway_tempo.conf.template
      - ../../common/config/mimir/gateway_mimir.conf:/etc/nginx/templates/gateway_mimir.conf.template
      - ../../common/config/loki/gateway_loki.conf:/etc/nginx/templates/gateway_loki.conf.template
    environment:
      - TEMPO_DISTRIBUTOR_HOST=distributor
      - TEMPO_INGESTER_HOST=ingester
      - TEMPO_QUERY_FRONTEND_HOST=query-frontend
      - TEMPO_COMPACTOR_HOST=compactor
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3200/ || exit 1"]
      interval: 3s
      timeout: 1s
      retries: 20
    ports:
      - "33200:3200"

  distributor:
    depends_on: {ingester: {condition: service_healthy}}
    image: &tempoImage ${TEMPO_IMAGE:-docker.io/grafana/tempo:2.8.1}
    configs:
      - source: tempo_config_file
        target: /etc/tempo/config.yaml
    volumes:
      - ../../common/config/tempo:/etc/tempo/configs
    command:
      - -config.file=/etc/tempo/config.yaml
      - -target=distributor
      - -config.expand-env=true
    environment:
      <<: *jaeger-environment
      JAEGER_TAGS: app=distributor
    healthcheck:
      test: ["CMD", "/usr/bin/wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3200/ready"]
      <<: *status-healthcheck

  ingester:
    depends_on: {minio: {condition: service_healthy}}
    image: *tempoImage
    configs:
      - source: tempo_config_file
        target: /etc/tempo/config.yaml
    volumes:
      - ../../common/config/tempo:/etc/tempo/configs
    command:
      - -config.file=/etc/tempo/config.yaml
      - -target=ingester
      - -config.expand-env=true
    environment:
      <<: *jaeger-environment
      JAEGER_TAGS: app=ingester
    healthcheck:
      test: ["CMD", "/usr/bin/wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3200/ready"]
      <<: *status-healthcheck
    deploy:
      replicas: 3
    networks:
      default:
        aliases:
          - tempo-memberlist

  query-frontend:
    depends_on: {minio: {condition: service_healthy}}
    image: *tempoImage
    configs:
      - source: tempo_config_file
        target: /etc/tempo/config.yaml
    volumes:
      - ../../common/config/tempo:/etc/tempo/configs
    command:
      - -config.file=/etc/tempo/config.yaml
      - -target=query-frontend
      - -config.expand-env=true
    environment:
      <<: *jaeger-environment
      JAEGER_TAGS: app=query-frontend

  querier:
    depends_on: {minio: {condition: service_healthy}}
    image: *tempoImage
    configs:
      - source: tempo_config_file
        target: /etc/tempo/config.yaml
    volumes:
      - ../../common/config/tempo:/etc/tempo/configs
    command:
      - -config.file=/etc/tempo/config.yaml
      - -target=querier
      - -config.expand-env=true
    environment:
      <<: *jaeger-environment
      JAEGER_TAGS: app=querier

  compactor:
    depends_on: {minio: {condition: service_healthy}}
    image: *tempoImage
    configs:
      - source: tempo_config_file
        target: /etc/tempo/config.yaml
    volumes:
      - ../../common/config/tempo:/etc/tempo/configs
    command:
      - -config.file=/etc/tempo/config.yaml
      - -target=compactor
      - -config.expand-env=true
    environment:
      <<: *jaeger-environment
      JAEGER_TAGS: app=compactor

  metrics-generator:
    depends_on: {minio: {condition: service_healthy}}
    image: *tempoImage
    configs:
      - source: tempo_config_file
        target: /etc/tempo/config.yaml
    volumes:
      - ../../common/config/tempo:/etc/tempo/configs
    command:
      - -config.file=/etc/tempo/config.yaml
      - -target=metrics-generator
      - -config.expand-env=true
    environment:
      <<: *jaeger-environment
      JAEGER_TAGS: app=metrics-generator
