# ============================================================================ #
#                  Microservices Mode - Profiles
# ============================================================================ #

# Note: 
# include is available in Docker Compose version 2.20 and later, and Docker Desktop version 4.22 and later.
# docs: https://docs.docker.com/compose/multiple-compose-files/include/#include-and-overrides
include:
  - path: ../../common/compose-include/minio.yaml
  - path: ../../common/compose-include/memcached.yaml
  - path: ../../common/compose-include/mimir.yaml
  - path: ../../common/compose-include/grafana.yaml
  - path: ../../common/compose-include/alloy.yaml

# https://github.com/qclaogui/codelab-monitoring/blob/main/alloy-modules/compose/README.md
x-labels: &profiles-labels
  profiles.grafana.com/cpu.scrape: true
  profiles.grafana.com/memory.scrape: true
  profiles.grafana.com/goroutine.scrape: true

# Configure a check that's run to determine whether or not containers for this service are "healthy".
# docs: https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck
x-healthcheck: &status-healthcheck
  interval: 5s
  timeout: 2s
  retries: 10

configs:
  alloy_config_file:
    file: ../../common/config/alloy/profiles.alloy
  mimir_config_file:
    file: ../../common/config/mimir/monolithic-mode-metrics.yaml
  pyroscope_config_file:
    file: ../../common/config/pyroscope/microservices-mode-profiles.yaml

services:
  gateway:
    # https://github.com/qclaogui/codelab-monitoring/blob/main/alloy-modules/compose/README.md
    labels:
      metrics.grafana.com/scrape: false
    depends_on: {distributor: {condition: service_healthy}}
    image: ${NGINX_IMAGE:-docker.io/nginxinc/nginx-unprivileged:1.29-alpine}
    restart: always
    volumes:
      - ../../common/config/nginx/10-default-lgtmp.envsh:/docker-entrypoint.d/10-default-lgtmp.envsh
      - ../../common/config/nginx/nginx.conf:/etc/nginx/templates/nginx.conf.template
      - ../../common/config/pyroscope/gateway_pyroscope.conf:/etc/nginx/templates/gateway_pyroscope.conf.template
      - ../../common/config/mimir/gateway_mimir.conf:/etc/nginx/templates/gateway_mimir.conf.template
    environment:
      - PYROSCOPE_DISTRIBUTOR_HOST=distributor
      - PYROSCOPE_QUERY_FRONTEND_HOST=query-frontend
    healthcheck:
      test: ["CMD", "/usr/bin/wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4040/"]
      interval: 3s
      timeout: 1s
      retries: 20
    ports:
      - "34040:4040"

  distributor:
    labels:
      <<: *profiles-labels
      profiles.grafana.com/service_name: pyroscope-distributor
    depends_on: {ingester: {condition: service_healthy}}
    image: &pyroscopeImage ${PYROSCOPE_IMAGE:-docker.io/grafana/pyroscope:1.14.0}
    configs:
      - source: pyroscope_config_file
        target: /etc/pyroscope/config.yaml
    volumes:
      - ../../common/config/pyroscope:/etc/pyroscope/configs
      - pyroscope_data:/data
      - pyroscope_compactor_data:/data-compactor
    command:
      - -config.file=/etc/pyroscope/config.yaml
      - -target=distributor
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      # - -runtime-config.file=/etc/pyroscope/configs/overrides.yaml
    healthcheck:
      test: ["CMD", "profilecli", "ready"]
      <<: *status-healthcheck
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  ingester:
    labels:
      <<: *profiles-labels
      profiles.grafana.com/service_name: pyroscope-ingester
    depends_on: {minio: {condition: service_healthy}}
    image: *pyroscopeImage
    configs:
      - source: pyroscope_config_file
        target: /etc/pyroscope/config.yaml
    volumes:
      - ../../common/config/pyroscope:/etc/pyroscope/configs
      - pyroscope_data:/data
      - pyroscope_compactor_data:/data-compactor
    command:
      - -config.file=/etc/pyroscope/config.yaml
      - -target=ingester
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
    healthcheck:
      test: ["CMD", "profilecli", "ready"]
      <<: *status-healthcheck
    deploy:
      replicas: 3
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  compactor:
    labels:
      <<: *profiles-labels
      profiles.grafana.com/service_name: pyroscope-compactor
    depends_on: {minio: {condition: service_healthy}}
    image: *pyroscopeImage
    configs:
      - source: pyroscope_config_file
        target: /etc/pyroscope/config.yaml
    volumes:
      - ../../common/config/pyroscope:/etc/pyroscope/configs
      - pyroscope_data:/data
      - pyroscope_compactor_data:/data-compactor
    command:
      - -config.file=/etc/pyroscope/config.yaml
      - -target=compactor
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  query-frontend:
    labels:
      <<: *profiles-labels
      profiles.grafana.com/service_name: pyroscope-query-frontend
    image: *pyroscopeImage
    configs:
      - source: pyroscope_config_file
        target: /etc/pyroscope/config.yaml
    volumes:
      - ../../common/config/pyroscope:/etc/pyroscope/configs
      - pyroscope_data:/data
      - pyroscope_compactor_data:/data-compactor
    command:
      - -config.file=/etc/pyroscope/config.yaml
      - -target=query-frontend
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  querier:
    labels:
      <<: *profiles-labels
      profiles.grafana.com/service_name: pyroscope-querier
    image: *pyroscopeImage
    configs:
      - source: pyroscope_config_file
        target: /etc/pyroscope/config.yaml
    volumes:
      - ../../common/config/pyroscope:/etc/pyroscope/configs
      - pyroscope_data:/data
      - pyroscope_compactor_data:/data-compactor
    command:
      - -config.file=/etc/pyroscope/config.yaml
      - -target=querier
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -store-gateway.sharding-ring.replication-factor=1
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  query-scheduler:
    labels:
      <<: *profiles-labels
      profiles.grafana.com/service_name: pyroscope-query-scheduler
    image: *pyroscopeImage
    configs:
      - source: pyroscope_config_file
        target: /etc/pyroscope/config.yaml
    volumes:
      - ../../common/config/pyroscope:/etc/pyroscope/configs
      - pyroscope_data:/data
      - pyroscope_compactor_data:/data-compactor
    command:
      - -config.file=/etc/pyroscope/config.yaml
      - -target=query-scheduler
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  store-gateway:
    labels:
      <<: *profiles-labels
      profiles.grafana.com/service_name: pyroscope-store-gateway
    image: *pyroscopeImage
    configs:
      - source: pyroscope_config_file
        target: /etc/pyroscope/config.yaml
    volumes:
      - ../../common/config/pyroscope:/etc/pyroscope/configs
      - pyroscope_data:/data
      - pyroscope_compactor_data:/data-compactor
    command:
      - -config.file=/etc/pyroscope/config.yaml
      - -target=store-gateway
      - -config.expand-env=true
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -store-gateway.sharding-ring.replication-factor=1
    networks:
      default:
        aliases:
          - pyroscope-memberlist

volumes:
  pyroscope_data: {}
  pyroscope_compactor_data: {}
