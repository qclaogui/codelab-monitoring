# ============================================================================ #
#                  Read-Write Mode - Logs
# ============================================================================ #

# Note: 
# include is available in Docker Compose version 2.20 and later, and Docker Desktop version 4.22 and later.
# docs: https://docs.docker.com/compose/multiple-compose-files/include/#include-and-overrides
include:
  - path: ../../common/compose-include/minio.yaml
  - path: ../../common/compose-include/memcached.yaml
  - path: ../../common/compose-include/mimir.yaml
  - path: ../../common/compose-include/grafana.yaml
  - path: ../../common/compose-include/alloy.yaml

# Configure a check that's run to determine whether or not containers for this service are "healthy".
# docs: https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck
x-healthcheck: &status-healthcheck
  interval: 5s
  timeout: 2s
  retries: 10

configs:
  alloy_config_file:
    file: ../../common/config/alloy/logs.alloy
  mimir_config_file:
    file: ../../common/config/mimir/monolithic-mode-metrics.yaml
  loki_config_file:
    file: ../../common/config/loki/read-write-mode-logs.yaml

services:
  gateway:
    # https://github.com/qclaogui/codelab-monitoring/blob/main/alloy-modules/compose/README.md
    labels:
      metrics.grafana.com/scrape: false
    depends_on: { loki-write: { condition: service_healthy } }
    image: ${NGINX_IMAGE:-docker.io/nginxinc/nginx-unprivileged:1.27-alpine}
    volumes:
      - ../../common/config/nginx/10-default-lgtmp.envsh:/docker-entrypoint.d/10-default-lgtmp.envsh
      - ../../common/config/nginx/nginx.conf:/etc/nginx/templates/nginx.conf.template
      - ../../common/config/loki/gateway_loki.conf:/etc/nginx/templates/gateway_loki.conf.template
      - ../../common/config/mimir/gateway_mimir.conf:/etc/nginx/templates/gateway_mimir.conf.template
    environment:
      - LOKI_DISTRIBUTOR_HOST=loki-write
      - LOKI_INGESTER_HOST=loki-write
      - LOKI_RULER_HOST=loki-backend
      - LOKI_QUERY_FRONTEND_HOST=loki-read
      - LOKI_QUERIER_HOST=loki-read
      - LOKI_COMPACTOR_HOST=loki-backend
    healthcheck:
      test: [ "CMD", "/usr/bin/wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/" ]
      interval: 3s
      timeout: 1s
      retries: 20
    ports:
      - "33100:3100"

  loki-read:
    depends_on: { minio: { condition: service_healthy } }
    image: &lokiImage ${LOKI_IMAGE:-docker.io/grafana/loki:3.1.0}
    configs:
      - source: loki_config_file
        target: /etc/loki/config.yaml
    volumes:
      - ../../common/config/loki:/etc/loki/configs
    command:
      - -config.file=/etc/loki/config.yaml
      - -target=read
      - -legacy-read-mode=false
      - -config.expand-env=true
    healthcheck:
      test: [ "CMD", "/usr/bin/wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready" ]
      <<: *status-healthcheck
    deploy:
      replicas: 2
    networks:
      default:
        aliases:
          - loki-memberlist

  loki-write:
    depends_on: { minio: { condition: service_healthy } }
    image: *lokiImage
    configs:
      - source: loki_config_file
        target: /etc/loki/config.yaml
    volumes:
      - ../../common/config/loki:/etc/loki/configs
    command:
      - -config.file=/etc/loki/config.yaml
      - -target=write
      - -config.expand-env=true
    healthcheck:
      test: [ "CMD", "/usr/bin/wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready" ]
      <<: *status-healthcheck
    deploy:
      replicas: 3
    networks:
      default:
        aliases:
          - loki-memberlist

  loki-backend:
    depends_on: { minio: { condition: service_healthy } }
    image: *lokiImage
    configs:
      - source: loki_config_file
        target: /etc/loki/config.yaml
    volumes:
      - ../../common/config/loki:/etc/loki/configs
    command:
      - -config.file=/etc/loki/config.yaml
      - -target=backend
      - -legacy-read-mode=false
      - -config.expand-env=true
    healthcheck:
      test: [ "CMD", "/usr/bin/wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready" ]
      <<: *status-healthcheck
    deploy:
      replicas: 2
    networks:
      default:
        aliases:
          - loki-memberlist
