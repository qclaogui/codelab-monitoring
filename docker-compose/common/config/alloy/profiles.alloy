logging {
	level  = coalesce(env("ALLOY_LOG_LEVEL"), "warn")
	format = "logfmt"
}

/********************************************
 * Grafana LGTMP Stack Receiver Provider
 ********************************************/
// import.git "provider" {
// 	repository     = "https://github.com/qclaogui/codelab-monitoring.git"
// 	revision       = "main"
// 	path           = "alloy-modules/provider"
// 	pull_frequency = "24h"
// }

// local file
import.file "provider" {
	filename = coalesce(env("ALLOY_MODULES_FOLDER"), "/etc/alloy/modules") + "/provider"
}

provider.self_hosted_stack "compose" {
	metrics_endpoint_url  = coalesce(env("SELF_HOSTED_METRICS_ENDPOINT_URL"), "http://gateway:8080/api/v1/push")
	profiles_endpoint_url = coalesce(env("SELF_HOSTED_PROFILES_ENDPOINT_URL"), "http://gateway:4040")
}

/********************************************
 * Profiles
 ********************************************/
import.file "profiles" {
	filename = coalesce(env("ALLOY_MODULES_FOLDER"), "/etc/alloy/modules") + "/compose/profiles"
}

profiles.labels_scrape "compose" {
	label_prefix = "profiles.grafana.com"
	forward_to   = [provider.self_hosted_stack.compose.profiles_receiver]
}

/********************************************
 * Metrics
 ********************************************/
import.file "metrics" {
	filename = coalesce(env("ALLOY_MODULES_FOLDER"), "/etc/alloy/modules") + "/compose/metrics"
}

metrics.labels_scrape "compose" {
	label_prefix    = "metrics.grafana.com"
	forward_to      = [provider.self_hosted_stack.compose.metrics_receiver]
	scrape_interval = "15s"
}

metrics.jobs_scrape "compose" {
	forward_to      = [provider.self_hosted_stack.compose.metrics_receiver]
	scrape_interval = "15s"
}

metrics.integrations_scrape "compose" {
	forward_to      = [provider.self_hosted_stack.compose.metrics_receiver]
	scrape_interval = "15s"
}
