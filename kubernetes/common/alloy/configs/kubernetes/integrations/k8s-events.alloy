/*
Module Components: component_cluster_events
*/

declare "component_cluster_events" {

	/*****************************************************************
	* ARGUMENTS
	*****************************************************************/
	argument "forward_to" {
		comment = "Must be a list(LogsReceiver) where collected logs should be forwarded to"
	}

	argument "job_label" {
		optional = true
		default  = "integrations/kubernetes/eventhandler"
	}

	argument "cluster" {
		optional = true
		default  = "k3d"
	}

	loki.source.kubernetes_events "cluster_events" {
		job_name   = argument.job_label.value
		log_format = "logfmt"
		forward_to = [loki.process.logs_service.receiver]
	}

	loki.process "logs_service" {
		stage.static_labels {
			values = {
				cluster = argument.cluster.value,
			}
		}
		forward_to = argument.forward_to.value
	}

	// // Logs Service
	// remote.kubernetes.secret "logs_service" {
	// 	name      = "loki-k8s-monitoring"
	// 	namespace = "k8s-monitoring"
	// }
	// // Loki
	// loki.write "logs_service" {
	// 	endpoint {
	// 		url       = nonsensitive(remote.kubernetes.secret.logs_service.data["host"]) + "/loki/api/v1/push"
	// 		tenant_id = nonsensitive(remote.kubernetes.secret.logs_service.data["tenantId"])

	// 		basic_auth {
	// 			username = nonsensitive(remote.kubernetes.secret.logs_service.data["username"])
	// 			password = remote.kubernetes.secret.logs_service.data["password"]
	// 		}
	// 	}
	// }
}
