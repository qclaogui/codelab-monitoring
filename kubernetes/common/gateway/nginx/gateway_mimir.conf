server {
    listen 8080;
    listen [::]:8080;

    location = / {
      return 200 'OK';
      auth_basic off;
      access_log off;
    }

    # Distributor endpoints
    location /distributor {
      proxy_pass      http://${MIMIR_DISTRIBUTOR_HOST}:8080$request_uri;
    }
    location = /api/v1/push {
      proxy_pass      http://${MIMIR_DISTRIBUTOR_HOST}:8080$request_uri;
    }
    location /otlp/v1/metrics {
      proxy_pass      http://${MIMIR_DISTRIBUTOR_HOST}:8080$request_uri;
    }

    # Alertmanager endpoints
    location /alertmanager {
      proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:8080$request_uri;
    }
    location = /multitenant_alertmanager/status {
      proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:8080$request_uri;
    }
    location = /api/v1/alerts {
      proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:8080$request_uri;
    }
    location = /api/v1/grafana/config {
      proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:8080$request_uri;
    }
    location = /api/v1/grafana/state {
      proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:8080$request_uri;
    }
    location = /api/v1/grafana/receivers {
      proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:8080$request_uri;
    }
    location = /api/v1/grafana/templates/test {
      proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:8080$request_uri;
    }
    # https://github.com/grafana/mimir/releases/tag/mimir-2.12.0
    # Alertmanager deprecated the v1 API. All endpoints have a v2 equivalent.
    location = /api/v2/alerts {
      proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:8080$request_uri;
    }

    # Ruler endpoints
    location /prometheus/config/v1/rules {
      proxy_pass      http://${MIMIR_RULER_HOST}:8080$request_uri;
    }
    location /prometheus/api/v1/rules {
      proxy_pass      http://${MIMIR_RULER_HOST}:8080$request_uri;
    }
    
    location /prometheus/api/v1/alerts {
      proxy_pass      http://${MIMIR_RULER_HOST}:8080$request_uri;
    }
    location = /ruler/ring {
      proxy_pass      http://${MIMIR_RULER_HOST}:8080$request_uri;
    }

    # Rest of /prometheus goes to the query frontend
    location /prometheus {
      proxy_pass      http://${MIMIR_QUERY_FRONTEND_HOST}:8080$request_uri;
    }

    # Buildinfo endpoint can go to any component
    location = /api/v1/status/buildinfo {
      proxy_pass      http://${MIMIR_QUERY_FRONTEND_HOST}:8080$request_uri;
    }

    # Compactor endpoint for uploading blocks
    location /api/v1/upload/block/ {
      proxy_pass      http://${MIMIR_COMPACTOR_HOST}:8080$request_uri;
    }
}