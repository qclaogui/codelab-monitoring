apiVersion: k3d.io/v1alpha5
kind: Simple
metadata:
  name: k3s-codelab
servers: 1
agents: 2
kubeAPI:
  hostIP: "127.0.0.1"
  hostPort: "6550"
image: rancher/k3s:v1.29.4-k3s1
ports:
# mapping the ingress port 80 to localhost:8080
- port: 8080:80
  nodeFilters:
  - loadbalancer
- port: 8443:443
  nodeFilters:
  - loadbalancer
files:
- description: 'Pre-installed prometheus operator crds'
  source: common/prometheus-operator-crds/manifests/k8s-all-in-one.yaml
  destination: k3s-manifests-custom/prometheus-operator-crds-k8s-all-in-one.yaml
- description: 'Pre-installed TLS Certificate management with Cert Manager'
  source: common/cert-manager/manifests/k8s-all-in-one.yaml
  destination: k3s-manifests-custom/cert-manager-k8s-all-in-one.yaml
registries:
  create:
    name: k3d-reg-docker-io
    hostPort: "5000"
    proxy:
      remoteURL: https://registry-1.docker.io # proxy DockerHub
    volumes:
    - /tmp/reg-docker-io:/var/lib/registry # persist data locally in /tmp/reg-docker-io
  config: |
    mirrors:
      "docker.io":
        endpoint:
        - http://host.k3d.internal:5000
        - http://k3d-reg-docker-io:5000